PASS 1
PASS 2
PASS 3: Display
00000000:	jmp 0x1ad8
00000003:	db 0x00 
00000004:	db 0x55 U
00000005:	db 0x8b 
00000006:	db 0xec 
00000007:	db 0x8b 
00000008:	db 0xd7 
00000009:	db 0x8b 
0000000a:	db 0xde 
0000000b:	db 0x8c 
0000000c:	db 0xd8 
0000000d:	db 0x8e 
0000000e:	db 0xc0 
0000000f:	db 0x8b 
00000010:	db 0x76 v
00000011:	db 0x04 
00000012:	db 0x8b 
00000013:	db 0x7e ~
00000014:	db 0x06 
00000015:	db 0x33 3
00000016:	db 0xc0 
00000017:	db 0xb9 
00000018:	db 0xff 
00000019:	db 0xff 
0000001a:	db 0xf2 
0000001b:	db 0xae 
0000001c:	db 0xf7 
0000001d:	db 0xd1 
0000001e:	db 0x2b +
0000001f:	db 0xf9 
00000020:	db 0xf3 
00000021:	db 0xa6 
00000022:	db 0x74 t
00000023:	db 0x05 
00000024:	db 0x1b 
00000025:	db 0xc0 
00000026:	db 0x83 
00000027:	db 0xd8 
00000028:	db 0xff 
00000029:	db 0x8b 
0000002a:	db 0xf3 
0000002b:	db 0x8b 
0000002c:	db 0xfa 
0000002d:	db 0x5d ]
0000002e:	db 0xc3 
0000002f:	db 0x00 

---STARTPROC---
sub_30:
00000030:	push bp
00000031:	mov bp, sp
00000033:	mov dx, di
00000035:	mov bx, si
00000037:	mov ax, ds
00000039:	mov es, ax
0000003b:	mov si, [bp+0x6]
0000003e:	mov di, [bp+0x4]
00000041:	mov ax, di
00000043:	mov cx, [bp+0x8]
00000046:	jcxz 0x56
00000048:	test al, 0x1
0000004a:	jz 0x4e
0000004c:	movsb
0000004d:	dec cx
lbl_4e:
0000004e:	shr cx, 0x1
00000050:	rep movsw
00000052:	adc cx, cx
00000054:	rep movsb
lbl_56:
00000056:	mov si, bx
00000058:	mov di, dx
0000005a:	pop bp
0000005b:	ret
---ENDPROC---  ; sub_30 ; length = 44 bytes ; 0 calls out


---STARTPROC---
sub_5c:
0000005c:	push bp
0000005d:	mov bp, sp
0000005f:	mov dx, di
00000061:	mov ax, ds
00000063:	mov es, ax
00000065:	mov di, [bp+0x4]
00000068:	mov bx, di
0000006a:	mov cx, [bp+0x8]
0000006d:	jcxz 0x84
0000006f:	mov al, [bp+0x6]
00000072:	mov ah, al
00000074:	test di, 0x1
00000078:	jz 0x7c
0000007a:	stosb
0000007b:	dec cx
lbl_7c:
0000007c:	shr cx, 0x1
0000007e:	rep stosw
00000080:	adc cx, cx
00000082:	rep stosb
lbl_84:
00000084:	mov di, dx
00000086:	xchg bx, ax
00000087:	pop bp
00000088:	ret
---ENDPROC---  ; sub_5c ; length = 45 bytes ; 0 calls out

00000089:	db 0x00 
0000008a:	db 0x55 U
0000008b:	db 0x8b 
0000008c:	db 0xec 
0000008d:	db 0x8b 
0000008e:	db 0x46 F
0000008f:	db 0x06 
00000090:	db 0x8b 
00000091:	db 0x4e N
00000092:	db 0x0a 
00000093:	db 0x0b 
00000094:	db 0xc8 
00000095:	db 0x8b 
00000096:	db 0x4e N
00000097:	db 0x08 
00000098:	db 0x75 u
00000099:	db 0x09 
0000009a:	db 0x8b 
0000009b:	db 0x46 F
0000009c:	db 0x04 
0000009d:	db 0xf7 
0000009e:	db 0xe1 
0000009f:	db 0x5d ]
000000a0:	db 0xc2 
000000a1:	db 0x08 
000000a2:	db 0x00 
000000a3:	db 0x53 S
000000a4:	db 0xf7 
000000a5:	db 0xe1 
000000a6:	db 0x8b 
000000a7:	db 0xd8 
000000a8:	db 0x8b 
000000a9:	db 0x46 F
000000aa:	db 0x04 
000000ab:	db 0xf7 
000000ac:	db 0x66 f
000000ad:	db 0x0a 
000000ae:	db 0x03 
000000af:	db 0xd8 
000000b0:	db 0x8b 
000000b1:	db 0x46 F
000000b2:	db 0x04 
000000b3:	db 0xf7 
000000b4:	db 0xe1 
000000b5:	db 0x03 
000000b6:	db 0xd3 
000000b7:	db 0x5b [
000000b8:	db 0x5d ]
000000b9:	db 0xc2 
000000ba:	db 0x08 
000000bb:	db 0x00 

---STARTPROC---
sub_bc:
000000bc:	xor ch, ch
000000be:	jcxz 0xc6
lbl_c0:
000000c0:	shl ax, 0x1
000000c2:	rcl dx, 0x1
000000c4:	loop 0xc0
lbl_c6:
000000c6:	ret
---ENDPROC---  ; sub_bc ; length = 11 bytes ; 0 calls out

000000c7:	db 0x00 

---STARTPROC---
sub_c8:
000000c8:	push bp
000000c9:	mov bp, sp
000000cb:	push bx
000000cc:	push si
000000cd:	mov ax, [bp+0xa]
000000d0:	or ax, ax
000000d2:	jnz 0xe9
000000d4:	mov cx, [bp+0x8]
000000d7:	mov ax, [bp+0x6]
000000da:	xor dx, dx
000000dc:	div cx
000000de:	mov bx, ax
000000e0:	mov ax, [bp+0x4]
000000e3:	div cx
000000e5:	mov dx, bx
000000e7:	jmp 0x121
lbl_e9:
000000e9:	mov cx, ax
000000eb:	mov bx, [bp+0x8]
000000ee:	mov dx, [bp+0x6]
000000f1:	mov ax, [bp+0x4]
lbl_f4:
000000f4:	shr cx, 0x1
000000f6:	rcr bx, 0x1
000000f8:	shr dx, 0x1
000000fa:	rcr ax, 0x1
000000fc:	or cx, cx
000000fe:	jnz 0xf4
00000100:	div bx
00000102:	mov si, ax
00000104:	mul word [bp+0xa]
00000107:	xchg cx, ax
00000108:	mov ax, [bp+0x8]
0000010b:	mul si
0000010d:	add dx, cx
0000010f:	jb 0x11d
00000111:	cmp dx, [bp+0x6]
00000114:	ja 0x11d
00000116:	jb 0x11e
00000118:	cmp ax, [bp+0x4]
0000011b:	jbe 0x11e
lbl_11d:
0000011d:	dec si
lbl_11e:
0000011e:	xor dx, dx
00000120:	xchg si, ax
lbl_121:
00000121:	pop si
00000122:	pop bx
00000123:	pop bp
00000124:	ret 0x8
---ENDPROC---  ; sub_c8 ; length = 95 bytes ; 0 calls out

00000127:	db 0x00 

---STARTPROC---
sub_128:
00000128:	push bp
00000129:	mov bp, sp
0000012b:	push bx
0000012c:	mov ax, [bp+0xa]
0000012f:	or ax, ax
00000131:	jnz 0x148
00000133:	mov cx, [bp+0x8]
00000136:	mov ax, [bp+0x6]
00000139:	xor dx, dx
0000013b:	div cx
0000013d:	mov ax, [bp+0x4]
00000140:	div cx
00000142:	mov ax, dx
00000144:	xor dx, dx
00000146:	jmp 0x18d
lbl_148:
00000148:	mov cx, ax
0000014a:	mov bx, [bp+0x8]
0000014d:	mov dx, [bp+0x6]
00000150:	mov ax, [bp+0x4]
lbl_153:
00000153:	shr cx, 0x1
00000155:	rcr bx, 0x1
00000157:	shr dx, 0x1
00000159:	rcr ax, 0x1
0000015b:	or cx, cx
0000015d:	jnz 0x153
0000015f:	div bx
00000161:	mov cx, ax
00000163:	mul word [bp+0xa]
00000166:	xchg cx, ax
00000167:	mul word [bp+0x8]
0000016a:	add dx, cx
0000016c:	jb 0x17a
0000016e:	cmp dx, [bp+0x6]
00000171:	ja 0x17a
00000173:	jb 0x180
00000175:	cmp ax, [bp+0x4]
00000178:	jbe 0x180
lbl_17a:
0000017a:	sub ax, [bp+0x8]
0000017d:	sbb dx, [bp+0xa]
lbl_180:
00000180:	sub ax, [bp+0x4]
00000183:	sbb dx, [bp+0x6]
00000186:	neg dx
00000188:	neg ax
0000018a:	sbb dx, 0x0
lbl_18d:
0000018d:	pop bx
0000018e:	pop bp
0000018f:	ret 0x8
---ENDPROC---  ; sub_128 ; length = 106 bytes ; 0 calls out


---STARTPROC---
sub_192:
00000192:	xor ch, ch
00000194:	jcxz 0x19c
lbl_196:
00000196:	shr dx, 0x1
00000198:	rcr ax, 0x1
0000019a:	loop 0x196
lbl_19c:
0000019c:	ret
---ENDPROC---  ; sub_192 ; length = 11 bytes ; 0 calls out

0000019d:	db 0x00 

---STARTPROC---
sub_19e:
0000019e:	enter 0x2, 0x0
000001a2:	push 0x1
000001a4:	mov al, [0x750f]
000001a7:	push ax
000001a8:	push 0x0
000001aa:	call 0xa62
000001ad:	add sp, 0x6
000001b0:	or al, al
000001b2:	jnz 0x1f4
000001b4:	mov al, [0x775c]
000001b7:	mov [bp-0x1], al
000001ba:	and al, 0x2
000001bc:	mov [0x65a2], al
000001bf:	push 0x18
000001c1:	push word 0x773c
000001c4:	push word 0x7516
000001c7:	call 0x30
000001ca:	add sp, 0x6
000001cd:	mov byte [0x752e], 0x0
000001d2:	test byte [bp-0x1], 0x1
000001d6:	jz 0x1ec
000001d8:	cmp byte [0x7516], 0x0
000001dd:	jz 0x1e9
000001df:	call 0x3ce
000001e2:	push word 0x7516
000001e5:	call 0x25e
000001e8:	pop bx
lbl_1e9:
000001e9:	call 0x228
lbl_1ec:
000001ec:	mov eax, [0x7738]
000001f0:	mov [0x7530], eax
lbl_1f4:
000001f4:	leave
000001f5:	ret
---ENDPROC---  ; sub_19e ; length = 88 bytes ; 5 calls out


---STARTPROC---
sub_1f6:
000001f6:	enter 0x2, 0x0
000001fa:	push 0x0
000001fc:	mov al, [bp+0x4]
000001ff:	push ax
00000200:	push 0x0
00000202:	call 0xa62
00000205:	add sp, 0x6
00000208:	mov [bp-0x1], al
0000020b:	or al, al
0000020d:	jnz 0x223
0000020f:	mov al, [0x750e]
00000212:	mov [0x775d], al
00000215:	push 0x0
00000217:	mov al, [bp+0x4]
0000021a:	push ax
0000021b:	push 0x1
0000021d:	call 0xa62
00000220:	mov [bp-0x1], al
lbl_223:
00000223:	mov al, [bp-0x1]
00000226:	leave
00000227:	ret
---ENDPROC---  ; sub_1f6 ; length = 50 bytes ; 2 calls out


---STARTPROC---
sub_228:
00000228:	inc word [0x65a6]
0000022c:	ret
---ENDPROC---  ; sub_228 ; length = 5 bytes ; 0 calls out

0000022d:	db 0x00 

---STARTPROC---
sub_22e:
0000022e:	push bp
0000022f:	mov bp, sp
00000231:	cmp word [0x65a6], 0x0
00000236:	jnz 0x242
00000238:	mov bx, 0x7
0000023b:	mov al, [bp+0x4]
0000023e:	mov ah, 0xe
00000240:	int 0x10
lbl_242:
00000242:	leave
00000243:	ret
---ENDPROC---  ; sub_22e ; length = 22 bytes ; 0 calls out


---STARTPROC---
sub_244:
00000244:	push bp
00000245:	mov bp, sp
00000247:	cmp word [0x65a6], 0x0
0000024c:	jnz 0x25b
0000024e:	mov bx, 0x7
00000251:	mov al, [bp+0x4]
00000254:	mov cx, 0x1
00000257:	mov ah, 0xa
00000259:	int 0x10
lbl_25b:
0000025b:	leave
0000025c:	ret
---ENDPROC---  ; sub_244 ; length = 25 bytes ; 0 calls out

0000025d:	db 0x00 

---STARTPROC---
sub_25e:
0000025e:	enter 0x2, 0x0
00000262:	push si
00000263:	mov si, [bp+0x4]
00000266:	jmp 0x270
lbl_268:
00000268:	mov al, [bp-0x1]
0000026b:	push ax
0000026c:	call 0x22e
0000026f:	pop bx
lbl_270:
00000270:	lodsb
00000271:	mov [bp-0x1], al
00000274:	or al, al
00000276:	jnz 0x268
00000278:	pop si
00000279:	leave
0000027a:	ret
---ENDPROC---  ; sub_25e ; length = 29 bytes ; 1 calls out

0000027b:	db 0x00 

---STARTPROC---
sub_27c:
0000027c:	enter 0xc, 0x0
00000280:	push di
00000281:	push si
00000282:	xor si, si
lbl_284:
00000284:	cmp dword [bp+0x4], 0xa
00000289:	jb 0x2ba
0000028b:	mov eax, [bp+0x4]
0000028f:	mov ecx, 0xa
00000295:	xor edx, edx
00000298:	div ecx
0000029b:	mov eax, edx
0000029e:	add al, 0x30
000002a0:	mov [bp+si-0xc], al
000002a3:	inc si
000002a4:	mov eax, [bp+0x4]
000002a8:	mov ecx, 0xa
000002ae:	xor edx, edx
000002b1:	div ecx
000002b4:	mov [bp+0x4], eax
000002b8:	jmp 0x284
lbl_2ba:
000002ba:	push 0x0
000002bc:	push 0xa
000002be:	push dword [bp+0x4]
000002c2:	call 0x128
000002c5:	add al, 0x30
000002c7:	mov [bp+si-0xc], al
000002ca:	jmp 0x2d7
lbl_2cc:
000002cc:	mov di, si
000002ce:	dec si
000002cf:	mov al, [bp+di-0xc]
000002d2:	push ax
000002d3:	call 0x22e
000002d6:	pop bx
lbl_2d7:
000002d7:	or si, si
000002d9:	jge 0x2cc
000002db:	pop si
000002dc:	pop di
000002dd:	leave
000002de:	ret
---ENDPROC---  ; sub_27c ; length = 99 bytes ; 2 calls out

000002df:	db 0x00 

---STARTPROC---
sub_2e0:
000002e0:	push bp
000002e1:	mov bp, sp
000002e3:	push si
000002e4:	mov si, [bp+0x4]
000002e7:	cmp dword [si+0x4], 0x0
000002ec:	jnz 0x2fa
000002ee:	push dword [si]
000002f1:	call 0x27c
000002f4:	add sp, 0x4
000002f7:	pop si
000002f8:	leave
000002f9:	ret
---ENDPROC---  ; sub_2e0 ; length = 26 bytes ; 1 calls out

lbl_2fa:
000002fa:	push si
000002fb:	call 0x36e
000002fe:	pop bx
000002ff:	pop si
00000300:	leave
00000301:	ret

---STARTPROC---
sub_302:
00000302:	enter 0x2, 0x0
00000306:	mov al, [bp+0x4]
00000309:	and ax, 0xf0
0000030c:	sub ah, ah
0000030e:	cmp ax, 0xa0
00000311:	jl 0x317
00000313:	mov al, 0x37
00000315:	jmp 0x319
lbl_317:
00000317:	mov al, 0x30
lbl_319:
00000319:	mov cl, [bp+0x4]
0000031c:	shr cl, 0x4
0000031f:	add al, cl
00000321:	push ax
00000322:	call 0x22e
00000325:	pop bx
00000326:	mov al, [bp+0x4]
00000329:	and al, 0xf
0000032b:	mov [bp-0x2], ax
0000032e:	cmp al, 0xa
00000330:	jb 0x336
00000332:	mov al, 0x37
00000334:	jmp 0x338
lbl_336:
00000336:	mov al, 0x30
lbl_338:
00000338:	add al, [bp-0x2]
0000033b:	push ax
0000033c:	call 0x22e
0000033f:	pop bx
00000340:	leave
00000341:	ret
---ENDPROC---  ; sub_302 ; length = 64 bytes ; 2 calls out


---STARTPROC---
sub_342:
00000342:	push bp
00000343:	mov bp, sp
00000345:	push si
00000346:	mov si, [bp+0x4]
00000349:	mov ax, si
0000034b:	mov al, ah
0000034d:	push ax
0000034e:	call 0x302
00000351:	pop bx
00000352:	push si
00000353:	call 0x302
00000356:	pop bx
00000357:	pop si
00000358:	leave
00000359:	ret
---ENDPROC---  ; sub_342 ; length = 24 bytes ; 2 calls out


---STARTPROC---
sub_35a:
0000035a:	push bp
0000035b:	mov bp, sp
0000035d:	push word [bp+0x6]
00000360:	call 0x342
00000363:	pop bx
00000364:	push word [bp+0x4]
00000367:	call 0x342
0000036a:	pop bx
0000036b:	leave
0000036c:	ret
---ENDPROC---  ; sub_35a ; length = 19 bytes ; 2 calls out

0000036d:	db 0x00 

---STARTPROC---
sub_36e:
0000036e:	push bp
0000036f:	mov bp, sp
00000371:	push si
00000372:	mov si, [bp+0x4]
00000375:	push dword [si+0x4]
00000379:	call 0x35a
0000037c:	add sp, 0x4
0000037f:	push dword [si]
00000382:	call 0x35a
00000385:	add sp, 0x4
00000388:	pop si
00000389:	leave
0000038a:	ret
---ENDPROC---  ; sub_36e ; length = 29 bytes ; 2 calls out

0000038b:	db 0x00 

---STARTPROC---
sub_38c:
0000038c:	push bp
0000038d:	mov bp, sp
0000038f:	push si
00000390:	mov si, [bp+0x6]
00000393:	jmp 0x39d
lbl_395:
00000395:	mov al, [bp+0x4]
00000398:	push ax
00000399:	call 0x22e
0000039c:	pop bx
lbl_39d:
0000039d:	mov ax, si
0000039f:	dec si
000003a0:	or ax, ax
000003a2:	jg 0x395
000003a4:	pop si
000003a5:	leave
000003a6:	ret
---ENDPROC---  ; sub_38c ; length = 27 bytes ; 1 calls out

000003a7:	db 0x00 

---STARTPROC---
sub_3a8:
000003a8:	push word 0x7088
000003ab:	call 0x25e
000003ae:	pop bx
000003af:	ret
---ENDPROC---  ; sub_3a8 ; length = 8 bytes ; 1 calls out


---STARTPROC---
sub_3b0:
000003b0:	push bp
000003b1:	mov bp, sp
000003b3:	push si
000003b4:	mov si, [bp+0x4]
000003b7:	jmp 0x3bc
lbl_3b9:
000003b9:	call 0x3a8
lbl_3bc:
000003bc:	mov ax, si
000003be:	dec si
000003bf:	or ax, ax
000003c1:	jg 0x3b9
000003c3:	pop si
000003c4:	leave
000003c5:	ret
---ENDPROC---  ; sub_3b0 ; length = 22 bytes ; 1 calls out


---STARTPROC---
sub_3c6:
000003c6:	push 0x7
000003c8:	call 0x22e
000003cb:	pop bx
000003cc:	ret
---ENDPROC---  ; sub_3c6 ; length = 7 bytes ; 1 calls out

000003cd:	db 0x00 

---STARTPROC---
sub_3ce:
000003ce:	push bp
000003cf:	mov bp, sp
000003d1:	cmp word [0x65a6], 0x0
000003d6:	jnz 0x3e2
000003d8:	mov ax, 0x3
000003db:	int 0x10
000003dd:	mov ax, 0x500
000003e0:	int 0x10
lbl_3e2:
000003e2:	leave
000003e3:	ret
---ENDPROC---  ; sub_3ce ; length = 22 bytes ; 0 calls out


---STARTPROC---
sub_3e4:
000003e4:	push bp
000003e5:	mov bp, sp
000003e7:	cmp word [0x65a6], 0x0
000003ec:	jnz 0x402
000003ee:	mov bh, 0x7
000003f0:	xor cx, cx
000003f2:	mov dx, 0x184f
000003f5:	mov ax, 0x600
000003f8:	int 0x10
000003fa:	xor bh, bh
000003fc:	xor dx, dx
000003fe:	mov ah, 0x2
00000400:	int 0x10
lbl_402:
00000402:	leave
00000403:	ret
---ENDPROC---  ; sub_3e4 ; length = 32 bytes ; 0 calls out


---STARTPROC---
sub_404:
00000404:	push 0x8
00000406:	call 0x22e
00000409:	pop bx
0000040a:	push 0x20
0000040c:	call 0x244
0000040f:	pop bx
00000410:	ret
---ENDPROC---  ; sub_404 ; length = 13 bytes ; 2 calls out

00000411:	db 0x00 

---STARTPROC---
sub_412:
00000412:	push bp
00000413:	mov bp, sp
00000415:	push word 0x708c
00000418:	call 0x25e
0000041b:	pop bx
0000041c:	push word [bp+0x4]
0000041f:	call 0x25e
00000422:	pop bx
00000423:	call 0x3a8
00000426:	call 0x3c6
00000429:	leave
0000042a:	ret
---ENDPROC---  ; sub_412 ; length = 25 bytes ; 4 calls out

0000042b:	db 0x00 

---STARTPROC---
sub_42c:
0000042c:	push bp
0000042d:	mov bp, sp
0000042f:	push word 0x708c
00000432:	call 0x25e
00000435:	pop bx
00000436:	push word [bp+0x4]
00000439:	call 0x25e
0000043c:	pop bx
0000043d:	call 0x3c6
00000440:	leave
00000441:	ret
---ENDPROC---  ; sub_42c ; length = 22 bytes ; 3 calls out


---STARTPROC---
sub_442:
00000442:	enter 0x2, 0x0
00000446:	mov ah, 0x2
00000448:	int 0x16
0000044a:	mov [bp-0x2], al
0000044d:	mov al, [bp-0x2]
00000450:	leave
00000451:	ret
---ENDPROC---  ; sub_442 ; length = 16 bytes ; 0 calls out


---STARTPROC---
sub_452:
00000452:	push 0x0
00000454:	call 0x45a
00000457:	pop bx
00000458:	ret
---ENDPROC---  ; sub_452 ; length = 7 bytes ; 1 calls out

00000459:	db 0x00 

---STARTPROC---
sub_45a:
0000045a:	enter 0x4, 0x0
lbl_45e:
0000045e:	call 0x482
00000461:	or al, al
00000463:	jz 0x45e
00000465:	mov ah, 0x0
00000467:	int 0x16
00000469:	mov [bp-0x2], al
0000046c:	mov [bp-0x4], ah
0000046f:	cmp word [bp+0x4], 0x0
00000473:	jz 0x47d
00000475:	mov bx, [bp+0x4]
00000478:	mov al, [bp-0x4]
0000047b:	mov [bx], al
lbl_47d:
0000047d:	mov al, [bp-0x2]
00000480:	leave
00000481:	ret
---ENDPROC---  ; sub_45a ; length = 40 bytes ; 1 calls out


---STARTPROC---
sub_482:
00000482:	enter 0x2, 0x0
00000486:	mov byte [bp-0x2], 0x0
0000048a:	mov ah, 0x1
0000048c:	int 0x16
0000048e:	jz 0x494
00000490:	mov byte [bp-0x2], 0x1
lbl_494:
00000494:	mov al, [bp-0x2]
00000497:	leave
00000498:	ret
---ENDPROC---  ; sub_482 ; length = 23 bytes ; 0 calls out

00000499:	db 0x00 

---STARTPROC---
sub_49a:
0000049a:	enter 0x2, 0x0
0000049e:	call 0x482
000004a1:	or al, al
000004a3:	jz 0x4b7
000004a5:	lea ax, [bp-0x1]
000004a8:	push ax
000004a9:	call 0x45a
000004ac:	pop bx
000004ad:	cmp byte [bp-0x1], 0x1
000004b1:	jnz 0x4b7
000004b3:	mov al, 0x1
000004b5:	leave
000004b6:	ret
---ENDPROC---  ; sub_49a ; length = 29 bytes ; 2 calls out

lbl_4b7:
000004b7:	xor al, al
000004b9:	leave
000004ba:	ret
000004bb:	db 0x00 

---STARTPROC---
sub_4bc:
000004bc:	push bp
000004bd:	mov bp, sp
000004bf:	push di
000004c0:	push si
000004c1:	push es
000004c2:	xor ax, ax
000004c4:	mov es, ax
000004c6:	mov di, 0x41e
000004c9:	mov cx, 0x20
000004cc:	cld
000004cd:	rep stosb
000004cf:	pop es
000004d0:	pop si
000004d1:	pop di
000004d2:	leave
000004d3:	ret
---ENDPROC---  ; sub_4bc ; length = 24 bytes ; 0 calls out


---STARTPROC---
sub_4d4:
000004d4:	push bp
000004d5:	mov bp, sp
000004d7:	cmp byte [bp+0x4], 0x20
000004db:	jl 0x4e7
000004dd:	cmp byte [bp+0x4], 0x7e
000004e1:	jg 0x4e7
000004e3:	mov al, 0x1
000004e5:	leave
000004e6:	ret
---ENDPROC---  ; sub_4d4 ; length = 19 bytes ; 0 calls out

lbl_4e7:
000004e7:	xor al, al
000004e9:	leave
000004ea:	ret
000004eb:	db 0x00 

---STARTPROC---
sub_4ec:
000004ec:	enter 0x4, 0x0
000004f0:	push di
000004f1:	push si
000004f2:	xor si, si
000004f4:	mov di, [bp+0x6]
lbl_4f7:
000004f7:	cmp si, di
000004f9:	jae 0x539
000004fb:	lea ax, [bp-0x2]
000004fe:	push ax
000004ff:	call 0x45a
00000502:	pop bx
00000503:	mov [bp-0x1], al
00000506:	cmp byte [bp-0x2], 0x1c
0000050a:	jz 0x539
0000050c:	cmp byte [bp-0x2], 0x1
00000510:	jz 0x535
00000512:	mov bx, [bp+0x4]
00000515:	mov [bx+si], al
00000517:	inc si
00000518:	push ax
00000519:	call 0x4d4
0000051c:	pop bx
0000051d:	or al, al
0000051f:	jz 0x528
00000521:	mov al, [bp-0x1]
00000524:	sub ah, ah
00000526:	jmp 0x52b
lbl_528:
00000528:	mov ax, 0x20
lbl_52b:
0000052b:	mov [bp-0x4], ax
0000052e:	push ax
0000052f:	call 0x22e
00000532:	pop bx
00000533:	jmp 0x4f7
lbl_535:
00000535:	xor ax, ax
00000537:	jmp 0x53b
lbl_539:
00000539:	mov ax, si
lbl_53b:
0000053b:	pop si
0000053c:	pop di
0000053d:	leave
0000053e:	ret
---ENDPROC---  ; sub_4ec ; length = 83 bytes ; 3 calls out

0000053f:	db 0x00 

---STARTPROC---
sub_540:
00000540:	enter 0x2, 0x0
00000544:	mov word [bp-0x2], 0x0
00000549:	mov al, [bp+0x4]
0000054c:	cmp [0x65a8], al
00000550:	jz 0x577
00000552:	mov bx, 0x55aa
00000555:	mov dl, [bp+0x4]
00000558:	mov ah, 0x41
0000055a:	int 0x13
0000055c:	jb 0x561
0000055e:	mov [bp-0x2], bx
lbl_561:
00000561:	mov al, [bp+0x4]
00000564:	mov [0x65a8], al
00000567:	cmp word [bp-0x2], 0xaa55
0000056c:	jnz 0x572
0000056e:	mov al, 0x1
00000570:	jmp 0x574
lbl_572:
00000572:	xor al, al
lbl_574:
00000574:	mov [0x77a6], al
lbl_577:
00000577:	mov al, [0x77a6]
0000057a:	leave
0000057b:	ret
---ENDPROC---  ; sub_540 ; length = 60 bytes ; 0 calls out


---STARTPROC---
sub_57c:
0000057c:	push bp
0000057d:	mov bp, sp
0000057f:	push si
00000580:	mov si, [bp+0xa]
00000583:	call 0x3a8
00000586:	cmp byte [bp+0x6], 0x0
0000058a:	jz 0x591
0000058c:	mov ax, 0x7094
0000058f:	jmp 0x594
lbl_591:
00000591:	mov ax, 0x709a
lbl_594:
00000594:	push ax
00000595:	call 0x25e
00000598:	pop bx
00000599:	push word 0x70a0
0000059c:	call 0x25e
0000059f:	pop bx
000005a0:	mov al, [bp+0x4]
000005a3:	sub ah, ah
000005a5:	push 0x0
000005a7:	push ax
000005a8:	call 0x27c
000005ab:	add sp, 0x4
000005ae:	push word 0x70a8
000005b1:	call 0x25e
000005b4:	pop bx
000005b5:	mov al, [bp+0x8]
000005b8:	xor al, 0x80
000005ba:	sub ah, ah
000005bc:	push 0x0
000005be:	push ax
000005bf:	call 0x27c
000005c2:	add sp, 0x4
000005c5:	or si, si
000005c7:	jz 0x5d5
000005c9:	push word 0x70b0
000005cc:	call 0x25e
000005cf:	pop bx
000005d0:	push si
000005d1:	call 0x2e0
000005d4:	pop bx
lbl_5d5:
000005d5:	cmp word [bp+0xc], 0x0
000005d9:	jz 0x5e9
000005db:	push word 0x70ba
000005de:	call 0x25e
000005e1:	pop bx
000005e2:	push word [bp+0xc]
000005e5:	call 0x5f2
000005e8:	pop bx
lbl_5e9:
000005e9:	call 0x3a8
000005ec:	call 0x3c6
000005ef:	pop si
000005f0:	leave
000005f1:	ret
---ENDPROC---  ; sub_57c ; length = 118 bytes ; 12 calls out


---STARTPROC---
sub_5f2:
000005f2:	push bp
000005f3:	mov bp, sp
000005f5:	push si
000005f6:	mov si, [bp+0x4]
000005f9:	push 0x0
000005fb:	push word [si]
000005fd:	call 0x27c
00000600:	add sp, 0x4
00000603:	push 0x2f
00000605:	call 0x22e
00000608:	pop bx
00000609:	mov al, [si+0x2]
0000060c:	sub ah, ah
0000060e:	push 0x0
00000610:	push ax
00000611:	call 0x27c
00000614:	add sp, 0x4
00000617:	push 0x2f
00000619:	call 0x22e
0000061c:	pop bx
0000061d:	mov al, [si+0x3]
00000620:	sub ah, ah
00000622:	push 0x0
00000624:	push ax
00000625:	call 0x27c
00000628:	add sp, 0x4
0000062b:	pop si
0000062c:	leave
0000062d:	ret
---ENDPROC---  ; sub_5f2 ; length = 60 bytes ; 5 calls out


---STARTPROC---
sub_62e:
0000062e:	enter 0x8, 0x0
00000632:	push 0xb
00000634:	push word [bp+0x4]
00000637:	lea ax, [bp-0x8]
0000063a:	push ax
0000063b:	call 0x242a
0000063e:	add sp, 0x6
00000641:	push ax
00000642:	call 0x2e0
00000645:	pop bx
00000646:	push word 0x70c0
00000649:	call 0x25e
0000064c:	pop bx
0000064d:	leave
0000064e:	ret
---ENDPROC---  ; sub_62e ; length = 33 bytes ; 3 calls out

0000064f:	db 0x00 

---STARTPROC---
sub_650:
00000650:	enter 0xa, 0x0
00000654:	push si
00000655:	mov bx, [bp+0xc]
00000658:	mov al, [bx]
0000065a:	mov [bp-0x2], al
0000065d:	mov ax, [bx]
0000065f:	shr ax, 0x2
00000662:	and al, 0xc0
00000664:	or al, [bx+0x3]
00000667:	mov [bp-0x4], al
0000066a:	cmp byte [bp+0x4], 0x1
0000066e:	sbb al, al
00000670:	and al, 0xff
00000672:	add al, 0x3
00000674:	mov [bp-0x6], al
00000677:	mov byte [bp-0xa], 0x5
lbl_67b:
0000067b:	mov byte [bp-0x8], 0x0
0000067f:	push es
00000680:	mov ax, [bp+0x6]
00000683:	mov es, ax
00000685:	mov bx, [bp+0x8]
00000688:	mov dl, [bp+0xa]
0000068b:	mov ch, [bp-0x2]
0000068e:	mov si, [bp+0xc]
00000691:	mov dh, [si+0x2]
00000694:	mov cl, [bp-0x4]
00000697:	mov al, [bp+0xe]
0000069a:	mov ah, [bp-0x6]
0000069d:	int 0x13
0000069f:	jae 0x6a4
000006a1:	mov [bp-0x8], ah
lbl_6a4:
000006a4:	pop es
000006a5:	cmp byte [bp-0x8], 0x11
000006a9:	jnz 0x6af
000006ab:	mov byte [bp-0x8], 0x0
lbl_6af:
000006af:	cmp byte [bp-0x8], 0x0
000006b3:	jz 0x6ba
000006b5:	dec byte [bp-0xa]
000006b8:	jnz 0x67b
lbl_6ba:
000006ba:	cmp byte [bp+0x10], 0x0
000006be:	jnz 0x6dd
000006c0:	cmp byte [bp-0x8], 0x0
000006c4:	jz 0x6dd
000006c6:	push word [bp+0xc]
000006c9:	push 0x0
000006cb:	mov al, [bp+0xa]
000006ce:	push ax
000006cf:	mov al, [bp+0x4]
000006d2:	push ax
000006d3:	mov al, [bp-0x8]
000006d6:	push ax
000006d7:	call 0x57c
000006da:	add sp, 0xa
lbl_6dd:
000006dd:	mov al, [bp-0x8]
000006e0:	pop si
000006e1:	leave
000006e2:	ret
---ENDPROC---  ; sub_650 ; length = 147 bytes ; 1 calls out

000006e3:	db 0x00 
000006e4:	db 0xc8 
000006e5:	db 0x02 
000006e6:	db 0x00 
000006e7:	db 0x00 
000006e8:	db 0x8c 
000006e9:	db 0x4e N
000006ea:	db 0xfe 
000006eb:	db 0x8a 
000006ec:	db 0x46 F
000006ed:	db 0x0e 
000006ee:	db 0x50 P
000006ef:	db 0x8a 
000006f0:	db 0x46 F
000006f1:	db 0x0c 
000006f2:	db 0x50 P
000006f3:	db 0xff 
000006f4:	db 0x76 v
000006f5:	db 0x0a 
000006f6:	db 0x8a 
000006f7:	db 0x46 F
000006f8:	db 0x08 
000006f9:	db 0x50 P
000006fa:	db 0xff 
000006fb:	db 0x76 v
000006fc:	db 0x06 
000006fd:	db 0xff 
000006fe:	db 0x76 v
000006ff:	db 0xfe 
00000700:	db 0x8a 
00000701:	db 0x46 F
00000702:	db 0x04 
00000703:	db 0x50 P
00000704:	db 0xe8 
00000705:	db 0x49 I
00000706:	db 0xff 
00000707:	db 0xc9 
00000708:	db 0xc3 
00000709:	db 0x00 

---STARTPROC---
sub_70a:
0000070a:	enter 0x10, 0x0
0000070e:	push di
0000070f:	push si
00000710:	mov al, [bp+0x8]
00000713:	push ax
00000714:	call 0x540
00000717:	pop bx
00000718:	or al, al
0000071a:	jnz 0x76e
0000071c:	mov al, [bp+0xe]
0000071f:	push ax
00000720:	lea ax, [bp-0xa]
00000723:	push ax
00000724:	mov al, [bp+0x8]
00000727:	push ax
00000728:	call 0x8c8
0000072b:	add sp, 0x6
0000072e:	mov [bp-0xc], al
00000731:	or al, al
00000733:	jnz 0x7f1
00000737:	lea ax, [bp-0x10]
0000073a:	push ax
0000073b:	push word [bp+0xa]
0000073e:	lea cx, [bp-0xa]
00000741:	push cx
00000742:	call 0x998
00000745:	add sp, 0x6
00000748:	mov al, [bp+0xe]
0000074b:	push ax
0000074c:	mov al, [bp+0xc]
0000074f:	push ax
00000750:	lea ax, [bp-0x10]
00000753:	push ax
00000754:	mov al, [bp+0x8]
00000757:	push ax
00000758:	mov bx, [bp+0x6]
0000075b:	push word [bx+0x4]
0000075e:	push word [bx+0x6]
00000761:	mov al, [bp+0x4]
00000764:	push ax
00000765:	call 0x650
00000768:	add sp, 0xe
0000076b:	jmp 0x7f1
lbl_76e:
0000076e:	mov bx, [bp+0x6]
00000771:	mov byte [bx], 0x10
00000774:	mov byte [bx+0x1], 0x0
00000778:	mov ax, [bp+0xc]
0000077b:	mov [bx+0x2], ax
0000077e:	mov ax, [bp+0xa]
00000781:	lea di, [bx+0x8]
00000784:	mov si, ax
00000786:	push ds
00000787:	pop es
00000788:	movsd
0000078a:	movsd
0000078c:	cmp byte [bp+0x4], 0x1
00000790:	sbb al, al
00000792:	and al, 0xff
00000794:	add al, 0x43
00000796:	mov [bp-0x2], al
00000799:	mov byte [bp-0x6], 0x5
lbl_79d:
0000079d:	mov byte [bp-0x4], 0x0
000007a1:	mov bx, 0x55aa
000007a4:	mov dl, [bp+0x8]
000007a7:	mov si, [bp+0x6]
000007aa:	mov ah, [bp-0x2]
000007ad:	xor al, al
000007af:	int 0x13
000007b1:	jae 0x7b6
000007b3:	mov [bp-0x4], ah
lbl_7b6:
000007b6:	cmp byte [bp-0x4], 0x11
000007ba:	jnz 0x7c0
000007bc:	mov byte [bp-0x4], 0x0
lbl_7c0:
000007c0:	cmp byte [bp-0x4], 0x0
000007c4:	jz 0x7cb
000007c6:	dec byte [bp-0x6]
000007c9:	jnz 0x79d
lbl_7cb:
000007cb:	cmp byte [bp+0xe], 0x0
000007cf:	jnz 0x7ee
000007d1:	cmp byte [bp-0x4], 0x0
000007d5:	jz 0x7ee
000007d7:	push 0x0
000007d9:	push word [bp+0xa]
000007dc:	mov al, [bp+0x8]
000007df:	push ax
000007e0:	mov al, [bp+0x4]
000007e3:	push ax
000007e4:	mov al, [bp-0x4]
000007e7:	push ax
000007e8:	call 0x57c
000007eb:	add sp, 0xa
lbl_7ee:
000007ee:	mov al, [bp-0x4]
lbl_7f1:
000007f1:	pop si
000007f2:	pop di
000007f3:	leave
000007f4:	ret
---ENDPROC---  ; sub_70a ; length = 235 bytes ; 5 calls out

000007f5:	db 0x00 

---STARTPROC---
sub_7f6:
000007f6:	enter 0x10, 0x0
000007fa:	mov ax, [bp+0x6]
000007fd:	mov [bp-0xc], ax
00000800:	mov [bp-0xa], ds
00000803:	mov al, [bp+0xe]
00000806:	push ax
00000807:	push dword [bp+0xa]
0000080b:	mov al, [bp+0x8]
0000080e:	push ax
0000080f:	lea ax, [bp-0x10]
00000812:	push ax
00000813:	mov al, [bp+0x4]
00000816:	push ax
00000817:	call 0x70a
0000081a:	leave
0000081b:	ret
---ENDPROC---  ; sub_7f6 ; length = 38 bytes ; 1 calls out


---STARTPROC---
sub_81c:
0000081c:	enter 0x10, 0x0
00000820:	mov ax, [bp+0x6]
00000823:	mov cx, [bp+0x8]
00000826:	mov [bp-0xc], cx
00000829:	mov [bp-0xa], ax
0000082c:	mov al, [bp+0x10]
0000082f:	push ax
00000830:	push dword [bp+0xc]
00000834:	mov al, [bp+0xa]
00000837:	push ax
00000838:	lea ax, [bp-0x10]
0000083b:	push ax
0000083c:	mov al, [bp+0x4]
0000083f:	push ax
00000840:	call 0x70a
00000843:	leave
00000844:	ret
---ENDPROC---  ; sub_81c ; length = 41 bytes ; 1 calls out

00000845:	db 0x00 

---STARTPROC---
sub_846:
00000846:	push bp
00000847:	mov bp, sp
00000849:	mov al, [bp+0xe]
0000084c:	push ax
0000084d:	push dword [bp+0xa]
00000851:	mov al, [bp+0x8]
00000854:	push ax
00000855:	push dword [bp+0x4]
00000859:	push 0x0
0000085b:	call 0x81c
0000085e:	leave
0000085f:	ret
---ENDPROC---  ; sub_846 ; length = 26 bytes ; 1 calls out


---STARTPROC---
sub_860:
00000860:	enter 0x6, 0x0
00000864:	mov [bp-0x4], cs
00000867:	mov al, [bp+0xc]
0000086a:	push ax
0000086b:	push dword [bp+0x8]
0000086f:	mov al, [bp+0x6]
00000872:	push ax
00000873:	push word [bp+0x4]
00000876:	cmp byte [0x65a3], 0x0
0000087b:	jz 0x882
0000087d:	mov ax, [bp-0x4]
00000880:	jmp 0x885
lbl_882:
00000882:	mov ax, 0x6000
lbl_885:
00000885:	push ax
00000886:	call 0x846
00000889:	add sp, 0xc
0000088c:	mov [bp-0x2], al
0000088f:	cmp byte [0x65a3], 0x0
00000894:	jnz 0x8a9
00000896:	mov ax, [bp+0xa]
00000899:	shl ax, 0x9
0000089c:	push ax
0000089d:	push word [bp+0x4]
000008a0:	push word [bp+0x4]
000008a3:	push word 0x6000
000008a6:	call 0x25de
lbl_8a9:
000008a9:	mov al, [bp-0x2]
000008ac:	leave
000008ad:	ret
---ENDPROC---  ; sub_860 ; length = 78 bytes ; 2 calls out


---STARTPROC---
sub_8ae:
000008ae:	push bp
000008af:	mov bp, sp
000008b1:	mov al, [bp+0xc]
000008b4:	push ax
000008b5:	push dword [bp+0x8]
000008b9:	mov al, [bp+0x6]
000008bc:	push ax
000008bd:	push word [bp+0x4]
000008c0:	push 0x1
000008c2:	call 0x7f6
000008c5:	leave
000008c6:	ret
---ENDPROC---  ; sub_8ae ; length = 25 bytes ; 1 calls out

000008c7:	db 0x00 

---STARTPROC---
sub_8c8:
000008c8:	enter 0x8, 0x0
000008cc:	push es
000008cd:	mov dl, [bp+0x4]
000008d0:	mov ah, 0x8
000008d2:	int 0x13
000008d4:	mov [bp-0x8], ah
000008d7:	mov [bp-0x2], ch
000008da:	mov [bp-0x6], cl
000008dd:	mov [bp-0x4], dh
000008e0:	pop es
000008e1:	cmp byte [bp-0x8], 0x0
000008e5:	jnz 0x90f
000008e7:	mov al, [bp-0x6]
000008ea:	and ax, 0xc0
000008ed:	shl ax, 0x2
000008f0:	mov cl, [bp-0x2]
000008f3:	sub ch, ch
000008f5:	or ax, cx
000008f7:	mov bx, [bp+0x6]
000008fa:	inc ax
000008fb:	mov [bx], ax
000008fd:	mov al, [bp-0x4]
00000900:	inc al
00000902:	mov [bx+0x2], al
00000905:	mov al, [bp-0x6]
00000908:	and al, 0x3f
0000090a:	mov [bx+0x3], al
0000090d:	jmp 0x94b
lbl_90f:
0000090f:	cmp byte [bp+0x8], 0x0
00000913:	jnz 0x94b
00000915:	push word 0x70c6
00000918:	call 0x25e
0000091b:	pop bx
0000091c:	mov al, [bp+0x4]
0000091f:	xor al, 0x80
00000921:	sub ah, ah
00000923:	push 0x0
00000925:	push ax
00000926:	call 0x27c
00000929:	add sp, 0x4
0000092c:	push word 0x70ce
0000092f:	call 0x25e
00000932:	pop bx
00000933:	push word 0x70dc
00000936:	call 0x42c
00000939:	pop bx
0000093a:	mov al, [bp-0x8]
0000093d:	sub ah, ah
0000093f:	push 0x0
00000941:	push ax
00000942:	call 0x27c
00000945:	add sp, 0x4
00000948:	call 0x3a8
lbl_94b:
0000094b:	mov al, [bp-0x8]
0000094e:	leave
0000094f:	ret
---ENDPROC---  ; sub_8c8 ; length = 136 bytes ; 6 calls out

00000950:	db 0x55 U
00000951:	db 0x8b 
00000952:	db 0xec 
00000953:	db 0x57 W
00000954:	db 0x56 V
00000955:	db 0x8b 
00000956:	db 0x7e ~
00000957:	db 0x08 
00000958:	db 0x8b 
00000959:	db 0x76 v
0000095a:	db 0x06 
0000095b:	db 0x66 f
0000095c:	db 0x2b +
0000095d:	db 0xc0 
0000095e:	db 0x66 f
0000095f:	db 0x89 
00000960:	db 0x45 E
00000961:	db 0x04 
00000962:	db 0x8b 
00000963:	db 0x5e ^
00000964:	db 0x04 
00000965:	db 0x8a 
00000966:	db 0x47 G
00000967:	db 0x03 
00000968:	db 0x6a j
00000969:	db 0x00 
0000096a:	db 0x50 P
0000096b:	db 0x8a 
0000096c:	db 0x47 G
0000096d:	db 0x02 
0000096e:	db 0xf7 
0000096f:	db 0x24 $
00000970:	db 0x8a 
00000971:	db 0x4c L
00000972:	db 0x02 
00000973:	db 0x2a *
00000974:	db 0xed 
00000975:	db 0x03 
00000976:	db 0xc1 
00000977:	db 0x83 
00000978:	db 0xd2 
00000979:	db 0x00 
0000097a:	db 0x52 R
0000097b:	db 0x50 P
0000097c:	db 0xe8 
0000097d:	db 0x0b 
0000097e:	db 0xf7 
0000097f:	db 0x8a 
00000980:	db 0x4c L
00000981:	db 0x03 
00000982:	db 0x2a *
00000983:	db 0xed 
00000984:	db 0x03 
00000985:	db 0xc1 
00000986:	db 0x83 
00000987:	db 0xd2 
00000988:	db 0x00 
00000989:	db 0x2d -
0000098a:	db 0x01 
0000098b:	db 0x00 
0000098c:	db 0x83 
0000098d:	db 0xda 
0000098e:	db 0x00 
0000098f:	db 0x89 
00000990:	db 0x05 
00000991:	db 0x89 
00000992:	db 0x55 U
00000993:	db 0x02 
00000994:	db 0x5e ^
00000995:	db 0x5f _
00000996:	db 0xc9 
00000997:	db 0xc3 

---STARTPROC---
sub_998:
00000998:	enter 0x4, 0x0
0000099c:	push di
0000099d:	push si
0000099e:	mov si, [bp+0x4]
000009a1:	mov di, [bp+0x8]
000009a4:	mov al, [si+0x3]
000009a7:	sub ah, ah
000009a9:	push 0x0
000009ab:	push ax
000009ac:	mov bx, [bp+0x6]
000009af:	push dword [bx]
000009b2:	call 0x128
000009b5:	inc al
000009b7:	mov [di+0x3], al
000009ba:	mov al, [si+0x3]
000009bd:	sub ah, ah
000009bf:	push 0x0
000009c1:	push ax
000009c2:	mov bx, [bp+0x6]
000009c5:	mov eax, [bx]
000009c8:	pop ecx
000009ca:	xor edx, edx
000009cd:	div ecx
000009d0:	mov [bp-0x4], eax
000009d4:	mov dx, [bp-0x2]
000009d7:	mov cl, [si+0x2]
000009da:	sub ch, ch
000009dc:	push 0x0
000009de:	push cx
000009df:	push dx
000009e0:	push ax
000009e1:	call 0x128
000009e4:	mov [di+0x2], al
000009e7:	mov al, [si+0x2]
000009ea:	sub ah, ah
000009ec:	push 0x0
000009ee:	push ax
000009ef:	push dword [bp-0x4]
000009f3:	call 0xc8
000009f6:	mov [di], ax
000009f8:	pop si
000009f9:	pop di
000009fa:	leave
000009fb:	ret
---ENDPROC---  ; sub_998 ; length = 100 bytes ; 3 calls out


---STARTPROC---
sub_9fc:
000009fc:	enter 0x4, 0x0
00000a00:	push di
00000a01:	push si
00000a02:	mov di, [bp+0x4]
00000a05:	mov si, [bp+0x6]
00000a08:	mov [bp-0x2], si
00000a0b:	mov [bp-0x4], di
00000a0e:	cmp byte [di], 0x80
00000a11:	jnz 0xa17
00000a13:	mov al, 0x1
00000a15:	jmp 0xa19
lbl_a17:
00000a17:	xor al, al
lbl_a19:
00000a19:	mov bx, [bp-0x2]
00000a1c:	mov [bx+0x2], al
00000a1f:	mov dword [bx+0x8], 0x0
00000a27:	mov si, [bp-0x4]
00000a2a:	mov eax, [si+0x8]
00000a2e:	add eax, [si+0xc]
00000a32:	dec eax
00000a34:	mov [bx+0x4], eax
00000a38:	mov dword [bx+0x12], 0x0
00000a40:	mov eax, [si+0xc]
00000a44:	mov [bx+0xe], eax
00000a48:	mov dword [bx+0x1a], 0x0
00000a50:	mov eax, [si+0x8]
00000a54:	mov [bx+0x16], eax
00000a58:	mov al, [si+0x4]
00000a5b:	mov [bx+0x1e], al
00000a5e:	pop si
00000a5f:	pop di
00000a60:	leave
00000a61:	ret
---ENDPROC---  ; sub_9fc ; length = 102 bytes ; 0 calls out


---STARTPROC---
sub_a62:
00000a62:	enter 0x8, 0x0
00000a66:	sub eax, eax
00000a69:	mov [bp-0x4], eax
00000a6d:	mov [bp-0x8], eax
00000a71:	cmp [bp+0x4], al
00000a74:	jz 0xa8c
00000a76:	mov al, [bp+0x8]
00000a79:	push ax
00000a7a:	push 0x1
00000a7c:	lea ax, [bp-0x8]
00000a7f:	push ax
00000a80:	mov al, [bp+0x6]
00000a83:	push ax
00000a84:	push word 0x75a6
00000a87:	call 0x8ae
00000a8a:	leave
00000a8b:	ret
---ENDPROC---  ; sub_a62 ; length = 42 bytes ; 1 calls out

lbl_a8c:
00000a8c:	mov al, [bp+0x8]
00000a8f:	push ax
00000a90:	push 0x1
00000a92:	lea ax, [bp-0x8]
00000a95:	push ax
00000a96:	mov al, [bp+0x6]
00000a99:	push ax
00000a9a:	push word 0x75a6
00000a9d:	call 0x860
00000aa0:	leave
00000aa1:	ret

---STARTPROC---
sub_aa2:
00000aa2:	enter 0x7c, 0x0
00000aa6:	push di
00000aa7:	push si
00000aa8:	cmp word [bp+0xe], 0x0
00000aac:	jz 0xace
00000aae:	mov word [bp+0x8], 0xff
00000ab3:	mov ax, [bp+0x6]
00000ab6:	mov [bp-0xa], ax
00000ab9:	lea ax, [bp-0x3c]
00000abc:	mov [bp+0x6], ax
00000abf:	mov bx, [bp-0xa]
00000ac2:	mov byte [bx+0x1], 0x7f
00000ac6:	mov dword [bx+0x16], 0xffffffff
lbl_ace:
00000ace:	mov al, [bp+0x10]
00000ad1:	push ax
00000ad2:	mov al, [bp+0x4]
00000ad5:	push ax
00000ad6:	push 0x0
00000ad8:	call 0xa62
00000adb:	add sp, 0x6
00000ade:	mov [bp-0x3], al
00000ae1:	mov bx, [bp+0xa]
00000ae4:	mov word [bx], 0x0
00000ae8:	mov word [bp-0x2], 0x75a6
00000aed:	cmp byte [bp-0x3], 0x0
00000af1:	jnz 0xcc1
00000af5:	cmp word [0x77a4], 0xaa55
00000afb:	jnz 0xcc1
00000aff:	push 0x40
00000b01:	push word 0x7764
00000b04:	lea ax, [bp-0x7c]
00000b07:	push ax
00000b08:	call 0x30
00000b0b:	add sp, 0x6
00000b0e:	xor ax, ax
00000b10:	mov [bp-0x8], ax
00000b13:	mov [bp-0xc], ax
lbl_b16:
00000b16:	cmp word [bp-0xc], 0x4
00000b1a:	jae 0xcb9
00000b1e:	mov ax, [bp+0x8]
00000b21:	cmp [bp-0x8], ax
00000b24:	jae 0xcb9
00000b28:	mov di, [bp-0xc]
00000b2b:	shl di, 0x4
00000b2e:	lea si, [bp+di-0x7c]
00000b31:	cmp dword [si+0xc], 0x0
00000b36:	jz 0xbae
00000b38:	mov ax, [bp-0x8]
00000b3b:	shl ax, 0x5
00000b3e:	add ax, [bp+0x6]
00000b41:	mov [bp-0x2], ax
00000b44:	push ax
00000b45:	push si
00000b46:	call 0x9fc
00000b49:	add sp, 0x4
00000b4c:	cmp byte [bp+0xc], 0x0
00000b50:	jz 0xb5b
00000b52:	mov bx, [bp-0x2]
00000b55:	cmp byte [bx+0x2], 0x0
00000b59:	jz 0xbae
lbl_b5b:
00000b5b:	mov bx, [bp-0x2]
00000b5e:	mov al, [bp+0x4]
00000b61:	mov [bx+0x1], al
00000b64:	mov al, [bp-0x8]
00000b67:	mov [bx], al
00000b69:	cmp byte [si+0x4], 0x5
00000b6d:	jz 0xbb9
00000b6f:	cmp byte [si+0x4], 0xf
00000b73:	jz 0xbb9
00000b75:	mov bx, [bp-0x2]
00000b78:	mov byte [bx+0xc], 0x1
00000b7c:	cmp word [bp+0xe], 0x0
00000b80:	jz 0xbb4
00000b82:	mov bx, [bp+0xe]
00000b85:	mov eax, [bx+0x4]
00000b89:	mov bx, [bp-0x2]
00000b8c:	cmp [bx+0x16], eax
00000b90:	jbe 0xbae
00000b92:	mov bx, [bp-0xa]
00000b95:	mov eax, [bx+0x16]
00000b99:	mov bx, [bp-0x2]
00000b9c:	cmp [bx+0x16], eax
00000ba0:	jae 0xbae
00000ba2:	mov si, bx
00000ba4:	push ds
00000ba5:	pop es
00000ba6:	mov di, [bp-0xa]
00000ba9:	mov cx, 0x10
00000bac:	rep movsw
lbl_bae:
00000bae:	inc word [bp-0xc]
00000bb1:	jmp 0xb16
lbl_bb4:
00000bb4:	inc word [bp-0x8]
00000bb7:	jmp 0xbae
lbl_bb9:
00000bb9:	mov al, [bp+0x4]
00000bbc:	push ax
00000bbd:	call 0x540
00000bc0:	pop bx
00000bc1:	or al, al
00000bc3:	jz 0xbae
00000bc5:	mov ax, [bp-0x2]
00000bc8:	add ax, 0x16
00000bcb:	lea di, [bp-0x1c]
00000bce:	mov si, ax
00000bd0:	push ss
00000bd1:	pop es
00000bd2:	movsd
00000bd4:	movsd
00000bd6:	lea di, [bp-0x14]
00000bd9:	mov si, ax
00000bdb:	movsd
00000bdd:	movsd
00000bdf:	mov word [bp-0x6], 0x75a6
lbl_be4:
00000be4:	mov ax, [bp+0x8]
00000be7:	cmp [bp-0x8], ax
00000bea:	jae 0xbae
00000bec:	mov al, [bp+0x10]
00000bef:	push ax
00000bf0:	push 0x1
00000bf2:	lea ax, [bp-0x14]
00000bf5:	push ax
00000bf6:	mov al, [bp+0x4]
00000bf9:	push ax
00000bfa:	push word 0x75a6
00000bfd:	call 0x860
00000c00:	add sp, 0xa
00000c03:	mov [bp-0x3], al
00000c06:	or al, al
00000c08:	jnz 0xbae
00000c0a:	cmp word [0x77a4], 0xaa55
00000c10:	jnz 0xbae
00000c12:	cmp dword [0x7770], 0x0
00000c18:	jz 0xc90
00000c1a:	mov ax, [bp-0x8]
00000c1d:	shl ax, 0x5
00000c20:	add ax, [bp+0x6]
00000c23:	mov [bp-0x2], ax
00000c26:	push ax
00000c27:	push word 0x7764
00000c2a:	mov si, ax
00000c2c:	call 0x9fc
00000c2f:	add sp, 0x4
00000c32:	mov al, [bp+0x4]
00000c35:	mov [si+0x1], al
00000c38:	mov al, [bp-0x8]
00000c3b:	mov [si], al
00000c3d:	mov byte [si+0xc], 0x0
00000c41:	mov eax, [si+0x16]
00000c45:	add eax, [bp-0x14]
00000c49:	mov [si+0x16], eax
00000c4d:	mov eax, [si+0x4]
00000c51:	add eax, [bp-0x14]
00000c55:	mov [si+0x4], eax
00000c59:	cmp word [bp+0xe], 0x0
00000c5d:	jz 0xc8d
00000c5f:	mov bx, [bp+0xe]
00000c62:	mov eax, [bx+0x4]
00000c66:	mov bx, [bp-0x2]
00000c69:	cmp [bx+0x16], eax
00000c6d:	jbe 0xc90
00000c6f:	mov bx, [bp-0xa]
00000c72:	mov eax, [bx+0x16]
00000c76:	mov bx, [bp-0x2]
00000c79:	cmp [bx+0x16], eax
00000c7d:	jae 0xc90
00000c7f:	mov si, bx
00000c81:	push ds
00000c82:	pop es
00000c83:	mov di, [bp-0xa]
00000c86:	mov cx, 0x10
00000c89:	rep movsw
00000c8b:	jmp 0xc90
lbl_c8d:
00000c8d:	inc word [bp-0x8]
lbl_c90:
00000c90:	cmp byte [0x7778], 0x5
00000c95:	jz 0xc9e
00000c97:	cmp byte [0x7778], 0xf
00000c9c:	jz 0xca6
lbl_c9e:
00000c9e:	cmp dword [0x7780], 0x0
00000ca4:	jnz 0xca9
lbl_ca6:
00000ca6:	jmp 0xbae
lbl_ca9:
00000ca9:	mov eax, [bp-0x1c]
00000cad:	add eax, [0x777c]
00000cb2:	mov [bp-0x14], eax
00000cb6:	jmp 0xbe4
lbl_cb9:
00000cb9:	mov bx, [bp+0xa]
00000cbc:	mov ax, [bp-0x8]
00000cbf:	mov [bx], ax
lbl_cc1:
00000cc1:	mov al, [bp-0x3]
00000cc4:	pop si
00000cc5:	pop di
00000cc6:	leave
00000cc7:	ret
---ENDPROC---  ; sub_aa2 ; length = 550 bytes ; 6 calls out


---STARTPROC---
sub_cc8:
00000cc8:	enter 0x2, 0x0
00000ccc:	push 0x0
00000cce:	push 0x0
00000cd0:	push 0x1
00000cd2:	lea ax, [bp-0x2]
00000cd5:	push ax
00000cd6:	push 0x1
00000cd8:	push word 0x7556
00000cdb:	mov al, [bp+0x4]
00000cde:	push ax
00000cdf:	call 0xaa2
00000ce2:	add sp, 0xe
00000ce5:	or al, al
00000ce7:	jnz 0xcf3
00000ce9:	cmp word [bp-0x2], 0x1
00000ced:	jb 0xcf3
00000cef:	mov al, 0x1
00000cf1:	leave
00000cf2:	ret
---ENDPROC---  ; sub_cc8 ; length = 43 bytes ; 1 calls out

lbl_cf3:
00000cf3:	mov byte [0x7557], 0x7f
00000cf8:	push word 0x70de
00000cfb:	call 0x412
00000cfe:	pop bx
00000cff:	xor al, al
00000d01:	leave
00000d02:	ret
00000d03:	db 0x00 
00000d04:	db 0xc8 
00000d05:	db 0x02 
00000d06:	db 0x00 
00000d07:	db 0x00 
00000d08:	db 0x57 W
00000d09:	db 0x56 V
00000d0a:	db 0xc6 
00000d0b:	db 0x46 F
00000d0c:	db 0xfe 
00000d0d:	db 0x01 
00000d0e:	db 0x8b 
00000d0f:	db 0x1e 
00000d10:	db 0x34 4
00000d11:	db 0x75 u
00000d12:	db 0x80 
00000d13:	db 0xbf 
00000d14:	db 0xae 
00000d15:	db 0x07 
00000d16:	db 0x00 
00000d17:	db 0x74 t
00000d18:	db 0x58 X
00000d19:	db 0xff 
00000d1a:	db 0x76 v
00000d1b:	db 0x12 
00000d1c:	db 0x8d 
00000d1d:	db 0x46 F
00000d1e:	db 0x0a 
00000d1f:	db 0x50 P
00000d20:	db 0xe8 
00000d21:	db 0x3d =
00000d22:	db 0x02 
00000d23:	db 0x83 
00000d24:	db 0xc4 
00000d25:	db 0x04 
00000d26:	db 0x0a 
00000d27:	db 0xc0 
00000d28:	db 0x74 t
00000d29:	db 0x05 
00000d2a:	db 0xb0 
00000d2b:	db 0x01 
00000d2c:	db 0xe9 
00000d2d:	db 0x14 
00000d2e:	db 0x01 
00000d2f:	db 0x68 h
00000d30:	db 0x4c L
00000d31:	db 0x75 u
00000d32:	db 0x8d 
00000d33:	db 0x46 F
00000d34:	db 0x0a 
00000d35:	db 0x50 P
00000d36:	db 0xe8 
00000d37:	db 0x33 3
00000d38:	db 0x18 
00000d39:	db 0x83 
00000d3a:	db 0xc4 
00000d3b:	db 0x04 
00000d3c:	db 0x0a 
00000d3d:	db 0xc0 
00000d3e:	db 0x74 t
00000d3f:	db 0x2d -
00000d40:	db 0x68 h
00000d41:	db 0x3a :
00000d42:	db 0x75 u
00000d43:	db 0x8d 
00000d44:	db 0x46 F
00000d45:	db 0x0a 
00000d46:	db 0x50 P
00000d47:	db 0xe8 
00000d48:	db 0x4c L
00000d49:	db 0x18 
00000d4a:	db 0x83 
00000d4b:	db 0xc4 
00000d4c:	db 0x04 
00000d4d:	db 0x0a 
00000d4e:	db 0xc0 
00000d4f:	db 0x74 t
00000d50:	db 0x1c 
00000d51:	db 0x68 h
00000d52:	db 0x4c L
00000d53:	db 0x75 u
00000d54:	db 0x8d 
00000d55:	db 0x46 F
00000d56:	db 0x0a 
00000d57:	db 0x50 P
00000d58:	db 0xe8 
00000d59:	db 0xa9 
00000d5a:	db 0x16 
00000d5b:	db 0x83 
00000d5c:	db 0xc4 
00000d5d:	db 0x04 
00000d5e:	db 0x68 h
00000d5f:	db 0x9e 
00000d60:	db 0x75 u
00000d61:	db 0x8d 
00000d62:	db 0x46 F
00000d63:	db 0x0a 
00000d64:	db 0x50 P
00000d65:	db 0xe8 
00000d66:	db 0xea 
00000d67:	db 0x15 
00000d68:	db 0x83 
00000d69:	db 0xc4 
00000d6a:	db 0x04 
00000d6b:	db 0xeb 
00000d6c:	db 0x04 
00000d6d:	db 0xc6 
00000d6e:	db 0x46 F
00000d6f:	db 0xfe 
00000d70:	db 0x00 
00000d71:	db 0x6a j
00000d72:	db 0x00 
00000d73:	db 0xff 
00000d74:	db 0x76 v
00000d75:	db 0x12 
00000d76:	db 0x8d 
00000d77:	db 0x46 F
00000d78:	db 0x0a 
00000d79:	db 0x50 P
00000d7a:	db 0x8a 
00000d7b:	db 0x46 F
00000d7c:	db 0x08 
00000d7d:	db 0x50 P
00000d7e:	db 0x66 f
00000d7f:	db 0xff 
00000d80:	db 0x76 v
00000d81:	db 0x04 
00000d82:	db 0xe8 
00000d83:	db 0xc1 
00000d84:	db 0xfa 
00000d85:	db 0x83 
00000d86:	db 0xc4 
00000d87:	db 0x0c 
00000d88:	db 0x88 
00000d89:	db 0x46 F
00000d8a:	db 0xff 
00000d8b:	db 0x0a 
00000d8c:	db 0xc0 
00000d8d:	db 0x0f 
00000d8e:	db 0x85 
00000d8f:	db 0xaf 
00000d90:	db 0x00 
00000d91:	db 0x38 8
00000d92:	db 0x46 F
00000d93:	db 0xfe 
00000d94:	db 0x0f 
00000d95:	db 0x84 
00000d96:	db 0xa8 
00000d97:	db 0x00 
00000d98:	db 0x8b 
00000d99:	db 0x1e 
00000d9a:	db 0x34 4
00000d9b:	db 0x75 u
00000d9c:	db 0x38 8
00000d9d:	db 0x87 
00000d9e:	db 0xae 
00000d9f:	db 0x07 
00000da0:	db 0x74 t
00000da1:	db 0x1a 
00000da2:	db 0x68 h
00000da3:	db 0x9e 
00000da4:	db 0x75 u
00000da5:	db 0x8d 
00000da6:	db 0x46 F
00000da7:	db 0x0a 
00000da8:	db 0x50 P
00000da9:	db 0xe8 
00000daa:	db 0x58 X
00000dab:	db 0x16 
00000dac:	db 0x83 
00000dad:	db 0xc4 
00000dae:	db 0x04 
00000daf:	db 0x68 h
00000db0:	db 0x96 
00000db1:	db 0x75 u
00000db2:	db 0x8d 
00000db3:	db 0x46 F
00000db4:	db 0x0a 
00000db5:	db 0x50 P
00000db6:	db 0xe8 
00000db7:	db 0x99 
00000db8:	db 0x15 
00000db9:	db 0x83 
00000dba:	db 0xc4 
00000dbb:	db 0x04 
00000dbc:	db 0xa0 
00000dbd:	db 0x37 7
00000dbe:	db 0x75 u
00000dbf:	db 0x38 8
00000dc0:	db 0x46 F
00000dc1:	db 0x08 
00000dc2:	db 0x75 u
00000dc3:	db 0x7c |
00000dc4:	db 0x8b 
00000dc5:	db 0x76 v
00000dc6:	db 0x06 
00000dc7:	db 0x8b 
00000dc8:	db 0x7e ~
00000dc9:	db 0x04 
00000dca:	db 0x8b 
00000dcb:	db 0x46 F
00000dcc:	db 0x12 
00000dcd:	db 0xff 
00000dce:	db 0x4e N
00000dcf:	db 0x12 
00000dd0:	db 0x0b 
00000dd1:	db 0xc0 
00000dd2:	db 0x74 t
00000dd3:	db 0x6c l
00000dd4:	db 0x8b 
00000dd5:	db 0x1e 
00000dd6:	db 0x34 4
00000dd7:	db 0x75 u
00000dd8:	db 0x80 
00000dd9:	db 0xbf 
00000dda:	db 0xae 
00000ddb:	db 0x07 
00000ddc:	db 0x00 
00000ddd:	db 0x75 u
00000dde:	db 0x22 "
00000ddf:	db 0x68 h
00000de0:	db 0x4c L
00000de1:	db 0x75 u
00000de2:	db 0x8d 
00000de3:	db 0x46 F
00000de4:	db 0x0a 
00000de5:	db 0x50 P
00000de6:	db 0xe8 
00000de7:	db 0x83 
00000de8:	db 0x17 
00000de9:	db 0x83 
00000dea:	db 0xc4 
00000deb:	db 0x04 
00000dec:	db 0x0a 
00000ded:	db 0xc0 
00000dee:	db 0x74 t
00000def:	db 0x42 B
00000df0:	db 0x68 h
00000df1:	db 0x3a :
00000df2:	db 0x75 u
00000df3:	db 0x8d 
00000df4:	db 0x46 F
00000df5:	db 0x0a 
00000df6:	db 0x50 P
00000df7:	db 0xe8 
00000df8:	db 0x9c 
00000df9:	db 0x17 
00000dfa:	db 0x83 
00000dfb:	db 0xc4 
00000dfc:	db 0x04 
00000dfd:	db 0x0a 
00000dfe:	db 0xc0 
00000dff:	db 0x74 t
00000e00:	db 0x31 1
00000e01:	db 0x68 h
00000e02:	db 0x00 
00000e03:	db 0x02 
00000e04:	db 0x68 h
00000e05:	db 0xa6 
00000e06:	db 0x75 u
00000e07:	db 0x56 V
00000e08:	db 0x57 W
00000e09:	db 0xe8 
00000e0a:	db 0xd2 
00000e0b:	db 0x17 
00000e0c:	db 0x83 
00000e0d:	db 0xc4 
00000e0e:	db 0x08 
00000e0f:	db 0xff 
00000e10:	db 0x36 6
00000e11:	db 0x34 4
00000e12:	db 0x75 u
00000e13:	db 0x6a j
00000e14:	db 0x00 
00000e15:	db 0x6a j
00000e16:	db 0x01 
00000e17:	db 0x8d 
00000e18:	db 0x46 F
00000e19:	db 0x0a 
00000e1a:	db 0x50 P
00000e1b:	db 0x68 h
00000e1c:	db 0xa6 
00000e1d:	db 0x75 u
00000e1e:	db 0xe8 
00000e1f:	db 0x89 
00000e20:	db 0x1e 
00000e21:	db 0x83 
00000e22:	db 0xc4 
00000e23:	db 0x0a 
00000e24:	db 0x68 h
00000e25:	db 0x00 
00000e26:	db 0x02 
00000e27:	db 0x56 V
00000e28:	db 0x57 W
00000e29:	db 0x68 h
00000e2a:	db 0xa6 
00000e2b:	db 0x75 u
00000e2c:	db 0xe8 
00000e2d:	db 0x91 
00000e2e:	db 0x17 
00000e2f:	db 0x83 
00000e30:	db 0xc4 
00000e31:	db 0x08 
00000e32:	db 0x8d 
00000e33:	db 0x46 F
00000e34:	db 0x0a 
00000e35:	db 0x50 P
00000e36:	db 0xe8 
00000e37:	db 0x85 
00000e38:	db 0x16 
00000e39:	db 0x5b [
00000e3a:	db 0x81 
00000e3b:	db 0xc6 
00000e3c:	db 0x00 
00000e3d:	db 0x02 
00000e3e:	db 0xeb 
00000e3f:	db 0x8a 
00000e40:	db 0x8a 
00000e41:	db 0x46 F
00000e42:	db 0xff 
00000e43:	db 0x5e ^
00000e44:	db 0x5f _
00000e45:	db 0xc9 
00000e46:	db 0xc3 
00000e47:	db 0x00 
00000e48:	db 0xc8 
00000e49:	db 0x1a 
00000e4a:	db 0x00 
00000e4b:	db 0x00 
00000e4c:	db 0x57 W
00000e4d:	db 0x56 V
00000e4e:	db 0x8d 
00000e4f:	db 0x7e ~
00000e50:	db 0xf6 
00000e51:	db 0x8d 
00000e52:	db 0x76 v
00000e53:	db 0x0a 
00000e54:	db 0x16 
00000e55:	db 0x07 
00000e56:	db 0x66 f
00000e57:	db 0xa5 
00000e58:	db 0x66 f
00000e59:	db 0xa5 
00000e5a:	db 0x66 f
00000e5b:	db 0x2b +
00000e5c:	db 0xc0 
00000e5d:	db 0x66 f
00000e5e:	db 0x89 
00000e5f:	db 0x46 F
00000e60:	db 0xf2 
00000e61:	db 0x66 f
00000e62:	db 0x89 
00000e63:	db 0x46 F
00000e64:	db 0xee 
00000e65:	db 0x8b 
00000e66:	db 0x1e 
00000e67:	db 0x34 4
00000e68:	db 0x75 u
00000e69:	db 0x38 8
00000e6a:	db 0x87 
00000e6b:	db 0xae 
00000e6c:	db 0x07 
00000e6d:	db 0x74 t
00000e6e:	db 0x49 I
00000e6f:	db 0xff 
00000e70:	db 0x76 v
00000e71:	db 0x12 
00000e72:	db 0x8d 
00000e73:	db 0x46 F
00000e74:	db 0x0a 
00000e75:	db 0x50 P
00000e76:	db 0xe8 
00000e77:	db 0xe7 
00000e78:	db 0x00 
00000e79:	db 0x83 
00000e7a:	db 0xc4 
00000e7b:	db 0x04 
00000e7c:	db 0x0a 
00000e7d:	db 0xc0 
00000e7e:	db 0x74 t
00000e7f:	db 0x05 
00000e80:	db 0xb0 
00000e81:	db 0x01 
00000e82:	db 0xe9 
00000e83:	db 0xd6 
00000e84:	db 0x00 
00000e85:	db 0x8d 
00000e86:	db 0x7e ~
00000e87:	db 0xee 
00000e88:	db 0xbe 
00000e89:	db 0x9e 
00000e8a:	db 0x75 u
00000e8b:	db 0x16 
00000e8c:	db 0x07 
00000e8d:	db 0x66 f
00000e8e:	db 0xa5 
00000e8f:	db 0x66 f
00000e90:	db 0xa5 
00000e91:	db 0x68 h
00000e92:	db 0x4c L
00000e93:	db 0x75 u
00000e94:	db 0x8d 
00000e95:	db 0x46 F
00000e96:	db 0xee 
00000e97:	db 0x50 P
00000e98:	db 0xe8 
00000e99:	db 0x69 i
00000e9a:	db 0x15 
00000e9b:	db 0x83 
00000e9c:	db 0xc4 
00000e9d:	db 0x04 
00000e9e:	db 0x68 h
00000e9f:	db 0x4c L
00000ea0:	db 0x75 u
00000ea1:	db 0x8d 
00000ea2:	db 0x46 F
00000ea3:	db 0xf6 
00000ea4:	db 0x50 P
00000ea5:	db 0xe8 
00000ea6:	db 0x5c \
00000ea7:	db 0x15 
00000ea8:	db 0x83 
00000ea9:	db 0xc4 
00000eaa:	db 0x04 
00000eab:	db 0x68 h
00000eac:	db 0x96 
00000ead:	db 0x75 u
00000eae:	db 0x8d 
00000eaf:	db 0x46 F
00000eb0:	db 0xf6 
00000eb1:	db 0x50 P
00000eb2:	db 0xe8 
00000eb3:	db 0x9d 
00000eb4:	db 0x14 
00000eb5:	db 0x83 
00000eb6:	db 0xc4 
00000eb7:	db 0x04 
00000eb8:	db 0x8b 
00000eb9:	db 0x76 v
00000eba:	db 0x06 
00000ebb:	db 0x8b 
00000ebc:	db 0x7e ~
00000ebd:	db 0x12 
00000ebe:	db 0xe9 
00000ebf:	db 0x8e 
00000ec0:	db 0x00 
00000ec1:	db 0x68 h
00000ec2:	db 0x00 
00000ec3:	db 0x02 
00000ec4:	db 0x68 h
00000ec5:	db 0xa6 
00000ec6:	db 0x75 u
00000ec7:	db 0x56 V
00000ec8:	db 0xff 
00000ec9:	db 0x76 v
00000eca:	db 0x04 
00000ecb:	db 0xe8 
00000ecc:	db 0x10 
00000ecd:	db 0x17 
00000ece:	db 0x83 
00000ecf:	db 0xc4 
00000ed0:	db 0x08 
00000ed1:	db 0xa0 
00000ed2:	db 0x37 7
00000ed3:	db 0x75 u
00000ed4:	db 0x38 8
00000ed5:	db 0x46 F
00000ed6:	db 0x08 
00000ed7:	db 0x75 u
00000ed8:	db 0x37 7
00000ed9:	db 0x68 h
00000eda:	db 0x4c L
00000edb:	db 0x75 u
00000edc:	db 0x8d 
00000edd:	db 0x46 F
00000ede:	db 0x0a 
00000edf:	db 0x50 P
00000ee0:	db 0xe8 
00000ee1:	db 0x89 
00000ee2:	db 0x16 
00000ee3:	db 0x83 
00000ee4:	db 0xc4 
00000ee5:	db 0x04 
00000ee6:	db 0x0a 
00000ee7:	db 0xc0 
00000ee8:	db 0x74 t
00000ee9:	db 0x26 &
00000eea:	db 0x68 h
00000eeb:	db 0x3a :
00000eec:	db 0x75 u
00000eed:	db 0x8d 
00000eee:	db 0x46 F
00000eef:	db 0x0a 
00000ef0:	db 0x50 P
00000ef1:	db 0xe8 
00000ef2:	db 0xa2 
00000ef3:	db 0x16 
00000ef4:	db 0x83 
00000ef5:	db 0xc4 
00000ef6:	db 0x04 
00000ef7:	db 0x0a 
00000ef8:	db 0xc0 
00000ef9:	db 0x74 t
00000efa:	db 0x15 
00000efb:	db 0xff 
00000efc:	db 0x36 6
00000efd:	db 0x34 4
00000efe:	db 0x75 u
00000eff:	db 0x6a j
00000f00:	db 0x00 
00000f01:	db 0x6a j
00000f02:	db 0x01 
00000f03:	db 0x8d 
00000f04:	db 0x46 F
00000f05:	db 0xf6 
00000f06:	db 0x50 P
00000f07:	db 0x68 h
00000f08:	db 0xa6 
00000f09:	db 0x75 u
00000f0a:	db 0xe8 
00000f0b:	db 0xa1 
00000f0c:	db 0x1c 
00000f0d:	db 0x83 
00000f0e:	db 0xc4 
00000f0f:	db 0x0a 
00000f10:	db 0x6a j
00000f11:	db 0x00 
00000f12:	db 0x6a j
00000f13:	db 0x01 
00000f14:	db 0x8d 
00000f15:	db 0x46 F
00000f16:	db 0xee 
00000f17:	db 0x50 P
00000f18:	db 0x8d 
00000f19:	db 0x46 F
00000f1a:	db 0x0a 
00000f1b:	db 0x50 P
00000f1c:	db 0x8d 
00000f1d:	db 0x46 F
00000f1e:	db 0xe6 
00000f1f:	db 0x50 P
00000f20:	db 0xe8 
00000f21:	db 0xa3 
00000f22:	db 0x13 
00000f23:	db 0x83 
00000f24:	db 0xc4 
00000f25:	db 0x06 
00000f26:	db 0x50 P
00000f27:	db 0x8a 
00000f28:	db 0x46 F
00000f29:	db 0x08 
00000f2a:	db 0x50 P
00000f2b:	db 0x68 h
00000f2c:	db 0xa6 
00000f2d:	db 0x75 u
00000f2e:	db 0xe8 
00000f2f:	db 0x7d }
00000f30:	db 0xf9 
00000f31:	db 0x83 
00000f32:	db 0xc4 
00000f33:	db 0x0a 
00000f34:	db 0x88 
00000f35:	db 0x46 F
00000f36:	db 0xff 
00000f37:	db 0x0a 
00000f38:	db 0xc0 
00000f39:	db 0x75 u
00000f3a:	db 0x1d 
00000f3b:	db 0x8d 
00000f3c:	db 0x46 F
00000f3d:	db 0x0a 
00000f3e:	db 0x50 P
00000f3f:	db 0xe8 
00000f40:	db 0x7c |
00000f41:	db 0x15 
00000f42:	db 0x5b [
00000f43:	db 0x8d 
00000f44:	db 0x46 F
00000f45:	db 0xf6 
00000f46:	db 0x50 P
00000f47:	db 0xe8 
00000f48:	db 0x74 t
00000f49:	db 0x15 
00000f4a:	db 0x5b [
00000f4b:	db 0x81 
00000f4c:	db 0xc6 
00000f4d:	db 0x00 
00000f4e:	db 0x02 
00000f4f:	db 0x8b 
00000f50:	db 0xc7 
00000f51:	db 0x4f O
00000f52:	db 0x0b 
00000f53:	db 0xc0 
00000f54:	db 0x0f 
00000f55:	db 0x85 
00000f56:	db 0x69 i
00000f57:	db 0xff 
00000f58:	db 0x8a 
00000f59:	db 0x46 F
00000f5a:	db 0xff 
00000f5b:	db 0x5e ^
00000f5c:	db 0x5f _
00000f5d:	db 0xc9 
00000f5e:	db 0xc3 
00000f5f:	db 0x00 
00000f60:	db 0xc8 
00000f61:	db 0x10 
00000f62:	db 0x00 
00000f63:	db 0x00 
00000f64:	db 0x57 W
00000f65:	db 0x56 V
00000f66:	db 0xff 
00000f67:	db 0x4e N
00000f68:	db 0x06 
00000f69:	db 0x6a j
00000f6a:	db 0x00 
00000f6b:	db 0x66 f
00000f6c:	db 0xff 
00000f6d:	db 0x76 v
00000f6e:	db 0x04 
00000f6f:	db 0x8d 
00000f70:	db 0x46 F
00000f71:	db 0xf0 
00000f72:	db 0x50 P
00000f73:	db 0xe8 
00000f74:	db 0xb0 
00000f75:	db 0x13 
00000f76:	db 0x83 
00000f77:	db 0xc4 
00000f78:	db 0x08 
00000f79:	db 0x8d 
00000f7a:	db 0x7e ~
00000f7b:	db 0xf8 
00000f7c:	db 0x8b 
00000f7d:	db 0xf0 
00000f7e:	db 0x16 
00000f7f:	db 0x07 
00000f80:	db 0x66 f
00000f81:	db 0xa5 
00000f82:	db 0x66 f
00000f83:	db 0xa5 
00000f84:	db 0x68 h
00000f85:	db 0x4c L
00000f86:	db 0x75 u
00000f87:	db 0xff 
00000f88:	db 0x76 v
00000f89:	db 0x04 
00000f8a:	db 0xe8 
00000f8b:	db 0xab 
00000f8c:	db 0x15 
00000f8d:	db 0x83 
00000f8e:	db 0xc4 
00000f8f:	db 0x04 
00000f90:	db 0x0a 
00000f91:	db 0xc0 
00000f92:	db 0x74 t
00000f93:	db 0x11 
00000f94:	db 0x68 h
00000f95:	db 0x4c L
00000f96:	db 0x75 u
00000f97:	db 0x8d 
00000f98:	db 0x46 F
00000f99:	db 0xf8 
00000f9a:	db 0x50 P
00000f9b:	db 0xe8 
00000f9c:	db 0xce 
00000f9d:	db 0x15 
00000f9e:	db 0x83 
00000f9f:	db 0xc4 
00000fa0:	db 0x04 
00000fa1:	db 0x0a 
00000fa2:	db 0xc0 
00000fa3:	db 0x75 u
00000fa4:	db 0x21 !
00000fa5:	db 0x68 h
00000fa6:	db 0x4c L
00000fa7:	db 0x75 u
00000fa8:	db 0xff 
00000fa9:	db 0x76 v
00000faa:	db 0x04 
00000fab:	db 0xe8 
00000fac:	db 0xbe 
00000fad:	db 0x15 
00000fae:	db 0x83 
00000faf:	db 0xc4 
00000fb0:	db 0x04 
00000fb1:	db 0x0a 
00000fb2:	db 0xc0 
00000fb3:	db 0x74 t
00000fb4:	db 0x15 
00000fb5:	db 0x68 h
00000fb6:	db 0x3a :
00000fb7:	db 0x75 u
00000fb8:	db 0x8d 
00000fb9:	db 0x46 F
00000fba:	db 0xf8 
00000fbb:	db 0x50 P
00000fbc:	db 0xe8 
00000fbd:	db 0x45 E
00000fbe:	db 0x15 
00000fbf:	db 0x83 
00000fc0:	db 0xc4 
00000fc1:	db 0x04 
00000fc2:	db 0x0a 
00000fc3:	db 0xc0 
00000fc4:	db 0x74 t
00000fc5:	db 0x04 
00000fc6:	db 0xb0 
00000fc7:	db 0x01 
00000fc8:	db 0xeb 
00000fc9:	db 0x02 
00000fca:	db 0x32 2
00000fcb:	db 0xc0 
00000fcc:	db 0x5e ^
00000fcd:	db 0x5f _
00000fce:	db 0xc9 
00000fcf:	db 0xc3 

---STARTPROC---
sub_fd0:
00000fd0:	call 0x3e4
00000fd3:	push word 0x70fa
00000fd6:	call 0x25e
00000fd9:	pop bx
00000fda:	push 0x50
00000fdc:	push -0x24
00000fde:	call 0x38c
00000fe1:	add sp, 0x4
00000fe4:	cmp byte [0x7516], 0x0
00000fe9:	jz 0xff5
00000feb:	call 0x3a8
00000fee:	push word 0x7516
00000ff1:	call 0x25e
00000ff4:	pop bx
lbl_ff5:
00000ff5:	push 0x2
00000ff7:	call 0x3b0
00000ffa:	pop bx
00000ffb:	ret
---ENDPROC---  ; sub_fd0 ; length = 44 bytes ; 6 calls out


---STARTPROC---
sub_ffc:
00000ffc:	cmp byte [0x65a2], 0x0
00001001:	jnz 0x102b
00001003:	push word 0x7118
00001006:	call 0x25e
00001009:	pop bx
0000100a:	push word 0x7132
0000100d:	call 0x25e
00001010:	pop bx
00001011:	test byte [0x750e], 0xc0
00001016:	jz 0x101d
00001018:	mov ax, 0x713e
0000101b:	jmp 0x1020
lbl_101d:
0000101d:	mov ax, 0x7164
lbl_1020:
00001020:	push ax
00001021:	call 0x25e
00001024:	pop bx
00001025:	push 0x3
00001027:	call 0x3b0
0000102a:	pop bx
lbl_102b:
0000102b:	ret
---ENDPROC---  ; sub_ffc ; length = 48 bytes ; 4 calls out


---STARTPROC---
sub_102c:
0000102c:	xor al, al
0000102e:	ret
---ENDPROC---  ; sub_102c ; length = 3 bytes ; 0 calls out

0000102f:	db 0x00 

---STARTPROC---
sub_1030:
00001030:	push bp
00001031:	mov bp, sp
00001033:	push word [bp+0x4]
00001036:	call 0x25e
00001039:	pop bx
0000103a:	push word 0x7188
0000103d:	call 0x25e
00001040:	pop bx
00001041:	jmp 0x105d
lbl_1043:
00001043:	sub ax, 0xb
00001046:	jl 0x105a
00001048:	jo 0x105a
0000104a:	dec ax
0000104b:	jle 0x1072
0000104d:	sub ax, 0x14
00001050:	jz 0x1067
00001052:	sub ax, 0xb
00001055:	jl 0x105a
00001057:	dec ax
00001058:	jle 0x1072
lbl_105a:
0000105a:	call 0x3c6
lbl_105d:
0000105d:	call 0x452
00001060:	sub ah, ah
00001062:	sub ax, 0x4e
00001065:	jnz 0x1043
lbl_1067:
00001067:	push word 0x7196
0000106a:	call 0x25e
0000106d:	pop bx
0000106e:	xor al, al
00001070:	leave
00001071:	ret
---ENDPROC---  ; sub_1030 ; length = 66 bytes ; 5 calls out

lbl_1072:
00001072:	push word 0x7192
00001075:	call 0x25e
00001078:	pop bx
00001079:	mov al, 0x1
0000107b:	leave
0000107c:	ret
0000107d:	db 0x00 

---STARTPROC---
sub_107e:
0000107e:	enter 0x2, 0x0
00001082:	push di
00001083:	push si
00001084:	xor si, si
00001086:	push word 0x71b4
00001089:	call 0x25e
0000108c:	pop bx
0000108d:	cmp byte [0x65a1], 0x0
00001092:	jz 0x1099
00001094:	mov ax, 0x71c4
00001097:	jmp 0x109c
lbl_1099:
00001099:	mov ax, 0x71da
lbl_109c:
0000109c:	push ax
0000109d:	call 0x25e
000010a0:	pop bx
000010a1:	mov di, [bp+0x4]
000010a4:	jmp 0x10f2
lbl_10a6:
000010a6:	sub ax, 0xe
000010a9:	jz 0x1132
000010ad:	cmp byte [bp-0x2], 0x1
000010b1:	jz 0x111e
000010b3:	mov al, [bp-0x2]
000010b6:	push ax
000010b7:	call 0x102c
000010ba:	pop bx
000010bb:	or al, al
000010bd:	jnz 0x111e
000010bf:	mov al, [bp-0x1]
000010c2:	push ax
000010c3:	call 0x4d4
000010c6:	pop bx
000010c7:	or al, al
000010c9:	jz 0x10ef
000010cb:	cmp si, 0x40
000010ce:	jz 0x10ef
000010d0:	mov al, [bp-0x1]
000010d3:	mov bx, si
000010d5:	add bx, di
000010d7:	inc si
000010d8:	mov [bx+0x4], al
000010db:	cmp si, 0x40
000010de:	jae 0x10e8
000010e0:	push 0x2a
000010e2:	call 0x22e
lbl_10e5:
000010e5:	pop bx
000010e6:	jmp 0x10f2
lbl_10e8:
000010e8:	push 0x2a
000010ea:	call 0x244
000010ed:	jmp 0x10e5
lbl_10ef:
000010ef:	call 0x3c6
lbl_10f2:
000010f2:	lea ax, [bp-0x2]
000010f5:	push ax
000010f6:	call 0x45a
000010f9:	pop bx
000010fa:	mov [bp-0x1], al
000010fd:	mov al, [bp-0x2]
00001100:	sub ah, ah
00001102:	sub ax, 0xe
00001105:	jnz 0x10a6
00001107:	or si, si
00001109:	jz 0x10f2
0000110b:	cmp si, 0x40
0000110e:	jae 0x1115
00001110:	call 0x404
00001113:	jmp 0x111b
lbl_1115:
00001115:	push 0x20
00001117:	call 0x244
0000111a:	pop bx
lbl_111b:
0000111b:	dec si
0000111c:	jmp 0x10f2
lbl_111e:
0000111e:	push 0x41
00001120:	lea ax, [di+0x4]
00001123:	push ax
00001124:	call 0x2602
00001127:	add sp, 0x4
0000112a:	call 0x4bc
0000112d:	call 0x3a8
00001130:	jmp 0x113f
lbl_1132:
00001132:	call 0x4bc
00001135:	call 0x3a8
00001138:	mov [di], si
0000113a:	mov word [di+0x2], 0x0
lbl_113f:
0000113f:	mov al, [bp-0x2]
00001142:	pop si
00001143:	pop di
00001144:	leave
00001145:	ret
---ENDPROC---  ; sub_107e ; length = 200 bytes ; 15 calls out


---STARTPROC---
sub_1146:
00001146:	enter 0x4, 0x0
0000114a:	push si
0000114b:	push word 0x71de
0000114e:	call 0x25e
00001151:	pop bx
00001152:	push dword 0x2007c00
00001158:	push 0x0
0000115a:	push word [bp+0x6]
0000115d:	call 0x25c0
00001160:	add sp, 0x8
00001163:	mov byte [0x65a3], 0x1
00001168:	mov dword [bp-0x4], 0x7c00
00001170:	cli
00001171:	mov dl, [bp+0x4]
00001174:	mov dh, 0x0
00001176:	xor ax, ax
00001178:	mov si, ax
0000117a:	mov ds, ax
0000117c:	mov es, ax
0000117e:	mov ss, ax
00001180:	mov sp, 0x7c00
00001183:	sti
00001184:	jmp far word [cs:bp-0x4]
00001188:	db 0x5e ^
00001189:	db 0xc9 
0000118a:	db 0xc3 
0000118b:	db 0x00 

---STARTPROC---
sub_118c:
0000118c:	enter 0x14, 0x0
00001190:	push di
00001191:	push si
00001192:	mov word [bp-0x4], 0x1
lbl_1197:
00001197:	cmp word [bp-0x4], 0x2
0000119b:	jg 0x1274
0000119f:	jnz 0x11a5
000011a1:	mov al, 0x1
000011a3:	jmp 0x11a7
lbl_11a5:
000011a5:	xor al, al
lbl_11a7:
000011a7:	mov [bp-0x1], al
000011aa:	or al, al
000011ac:	jz 0x11f1
000011ae:	cmp byte [bp+0xe], 0x0
000011b2:	jnz 0x1256
000011b6:	mov al, [0x7577]
000011b9:	cmp [bp+0x4], al
000011bc:	jnz 0x1256
000011c0:	push word 0x7564
000011c3:	push word 0x7584
000011c6:	call 0x2596
000011c9:	add sp, 0x4
000011cc:	or al, al
000011ce:	jnz 0x1256
000011d2:	push 0x0
000011d4:	push word 0x80
000011d7:	push word 0x758c
000011da:	lea ax, [bp-0x14]
000011dd:	push ax
000011de:	call 0x2326
000011e1:	add sp, 0x8
000011e4:	lea di, [bp-0xc]
000011e7:	mov si, ax
000011e9:	push ss
000011ea:	pop es
000011eb:	movsd
000011ed:	movsd
000011ef:	jmp 0x1206
lbl_11f1:
000011f1:	cmp byte [bp+0xc], 0x0
000011f5:	jnz 0x1256
000011f7:	sub eax, eax
000011fa:	mov [bp-0x8], eax
000011fe:	mov word [bp-0xc], 0x3e
00001203:	mov [bp-0xa], ax
lbl_1206:
00001206:	push 0x0
00001208:	push 0x1
0000120a:	lea ax, [bp-0xc]
0000120d:	push ax
0000120e:	mov al, [bp+0x4]
00001211:	push ax
00001212:	push word 0x75a6
00001215:	call 0x860
00001218:	add sp, 0xa
0000121b:	or al, al
0000121d:	jnz 0x1256
0000121f:	push 0x0
00001221:	push dword [bp+0x6]
00001225:	push word 0x75a6
00001228:	cmp byte [bp-0x1], 0x1
0000122c:	sbb al, al
0000122e:	neg al
00001230:	push ax
00001231:	call 0x30a8
00001234:	add sp, 0xa
00001237:	or ax, ax
00001239:	jnz 0x1256
0000123b:	cmp byte [bp-0x1], 0x0
0000123f:	jz 0x125c
00001241:	mov bx, [bp+0x8]
00001244:	mov bx, [bx]
00001246:	test byte [bx+0x7c8], 0x1
0000124b:	jnz 0x125c
0000124d:	mov bx, [bp+0x8]
00001250:	push word [bx]
00001252:	call 0x2b26
00001255:	pop bx
lbl_1256:
00001256:	inc word [bp-0x4]
00001259:	jmp 0x1197
lbl_125c:
0000125c:	cmp [bp+0xa], ax
0000125f:	jz 0x1274
00001261:	push 0x40
00001263:	push word 0x75a6
00001266:	call 0x2702
00001269:	mov bx, [bp+0xa]
0000126c:	add sp, 0x4
0000126f:	mov [bx], ax
00001271:	mov [bx+0x2], dx
lbl_1274:
00001274:	cmp word [bp-0x4], 0x3
00001278:	jz 0x127e
0000127a:	mov al, 0x1
0000127c:	jmp 0x1280
lbl_127e:
0000127e:	xor al, al
lbl_1280:
00001280:	pop si
00001281:	pop di
00001282:	leave
00001283:	ret
---ENDPROC---  ; sub_118c ; length = 248 bytes ; 6 calls out


---STARTPROC---
sub_1284:
00001284:	enter 0x4, 0x0
00001288:	mov [bp-0x2], cs
0000128b:	cmp word [bp-0x2], 0x2000
00001290:	jnz 0x12c0
00001292:	push word 0x71ec
00001295:	call 0x42c
00001298:	pop bx
00001299:	push es
0000129a:	xor ax, ax
0000129c:	mov es, ax
0000129e:	mov ax, [es:0x413]
000012a3:	mov [bp-0x4], ax
000012a6:	pop es
000012a7:	push 0x0
000012a9:	push word [bp-0x4]
000012ac:	call 0x27c
000012af:	add sp, 0x4
000012b2:	call 0x3a8
000012b5:	push word 0x720c
000012b8:	call 0x25e
000012bb:	pop bx
000012bc:	xor al, al
000012be:	leave
000012bf:	ret
---ENDPROC---  ; sub_1284 ; length = 60 bytes ; 4 calls out

lbl_12c0:
000012c0:	mov al, 0x1
000012c2:	leave
000012c3:	ret

---STARTPROC---
sub_12c4:
000012c4:	enter 0xa, 0x0
000012c8:	push di
000012c9:	push si
000012ca:	xor di, di
000012cc:	push 0x76
000012ce:	mov ax, 0x10
000012d1:	mov [bp-0x2], ax
000012d4:	push ax
000012d5:	call 0x2602
000012d8:	add sp, 0x4
000012db:	mov si, [bp+0x6]
000012de:	jmp 0x131f
lbl_12e0:
000012e0:	mov al, [bp+0xa]
000012e3:	push ax
000012e4:	mov al, [bp+0x8]
000012e7:	push ax
000012e8:	push 0x1e
000012ea:	push word 0x7534
000012ed:	push 0x22
000012ef:	mov al, [0x7510]
000012f2:	push ax
000012f3:	call 0x118c
000012f6:	add sp, 0xc
000012f9:	or al, al
000012fb:	jnz 0x1330
000012fd:	call 0x442
00001300:	test al, 0x40
00001302:	jz 0x130b
00001304:	push word 0x7248
00001307:	call 0x25e
0000130a:	pop bx
lbl_130b:
0000130b:	push word 0x7264
0000130e:	call 0x25e
00001311:	pop bx
00001312:	inc di
00001313:	cmp di, 0x4
00001316:	jnz 0x131f
00001318:	push word 0x727c
0000131b:	call 0x25e
0000131e:	pop bx
lbl_131f:
0000131f:	push 0x22
00001321:	call 0x107e
00001324:	pop bx
00001325:	mov [si], al
00001327:	cmp al, 0x1c
00001329:	jz 0x12e0
0000132b:	xor al, al
0000132d:	jmp 0x1447
lbl_1330:
00001330:	mov word [0x18], 0x71a
00001336:	mov ax, [0x7534]
00001339:	mov [0x1a], ax
0000133d:	mov word [0x1c], 0x7cc
00001343:	mov bx, [0x7534]
00001347:	cmp byte [bx+0x7ae], 0x0
0000134c:	jz 0x136a
0000134e:	push 0x9
00001350:	push word 0x758c
00001353:	lea ax, [bp-0xa]
00001356:	push ax
00001357:	call 0x247e
0000135a:	add sp, 0x6
0000135d:	mov dx, 0x6a
00001360:	mov di, dx
00001362:	mov si, ax
00001364:	push ds
00001365:	pop es
00001366:	movsd
00001368:	movsd
lbl_136a:
0000136a:	cmp byte [0x65a4], 0x0
0000136f:	jz 0x1376
00001371:	or byte [0x7a], 0x1
lbl_1376:
00001376:	mov byte [0x10], 0x54
0000137b:	mov byte [0x11], 0x52
00001380:	mov byte [0x12], 0x55
00001385:	mov byte [0x13], 0x45
0000138a:	mov byte [0x14], 0x11
0000138f:	mov byte [0x15], 0x23
00001394:	mov byte [0x16], 0x45
00001399:	mov byte [0x17], 0x66
0000139e:	mov bx, [0x7534]
000013a2:	cmp dword [bx+0x7c4], 0x0
000013a8:	jnz 0x13bc
000013aa:	mov ax, [bx+0x7c2]
000013ae:	or ax, [bx+0x7c0]
000013b2:	jnz 0x13bc
000013b4:	mov byte [0x7537], 0x7f
000013b9:	jmp 0x1445
lbl_13bc:
000013bc:	mov al, [0x7510]
000013bf:	mov [0x7537], al
000013c2:	push 0x9
000013c4:	lea ax, [bx+0x7b8]
000013c8:	push ax
000013c9:	lea ax, [bp-0xa]
000013cc:	push ax
000013cd:	call 0x242a
000013d0:	add sp, 0x6
000013d3:	mov dx, 0x754c
000013d6:	mov di, dx
000013d8:	mov si, ax
000013da:	push ds
000013db:	pop es
000013dc:	movsd
000013de:	movsd
000013e0:	mov ax, 0x7596
000013e3:	mov di, ax
000013e5:	mov si, dx
000013e7:	movsd
000013e9:	movsd
000013eb:	mov ax, 0x759e
000013ee:	mov di, ax
000013f0:	mov si, 0x758c
000013f3:	movsd
000013f5:	movsd
000013f7:	push dx
000013f8:	push ax
000013f9:	call 0x2352
000013fc:	add sp, 0x4
000013ff:	push 0x9
00001401:	mov ax, [0x7534]
00001404:	add ax, 0x7c0
00001407:	push ax
00001408:	lea ax, [bp-0xa]
0000140b:	push ax
0000140c:	call 0x242a
0000140f:	add sp, 0x6
00001412:	mov dx, 0x7544
00001415:	mov di, dx
00001417:	mov si, ax
00001419:	push ds
0000141a:	pop es
0000141b:	movsd
0000141d:	movsd
0000141f:	push 0x0
00001421:	push 0x1
00001423:	push dx
00001424:	lea ax, [bp-0xa]
00001427:	push ax
00001428:	call 0x23d8
0000142b:	add sp, 0x8
0000142e:	mov dx, 0x753a
00001431:	mov di, dx
00001433:	mov si, ax
00001435:	push ds
00001436:	pop es
00001437:	movsd
00001439:	movsd
0000143b:	push word 0x754c
0000143e:	push dx
0000143f:	call 0x2352
00001442:	add sp, 0x4
lbl_1445:
00001445:	mov al, 0x1
lbl_1447:
00001447:	pop si
00001448:	pop di
00001449:	leave
0000144a:	ret
---ENDPROC---  ; sub_12c4 ; length = 391 bytes ; 13 calls out

0000144b:	db 0x00 

---STARTPROC---
sub_144c:
0000144c:	enter 0x2, 0x0
00001450:	push di
00001451:	push si
00001452:	mov al, [bp+0x4]
00001455:	push ax
00001456:	call 0xcc8
00001459:	pop bx
0000145a:	or al, al
0000145c:	jz 0x14c1
0000145e:	push 0x0
00001460:	push word 0x7556
00001463:	push 0x0
00001465:	lea ax, [bp-0x2]
00001468:	push ax
00001469:	push 0x1
0000146b:	push word 0x7576
0000146e:	mov al, [bp+0x4]
00001471:	push ax
00001472:	call 0xaa2
00001475:	add sp, 0xe
00001478:	mov ax, [0x756a]
0000147b:	or ax, [0x7568]
0000147f:	jnz 0x14bf
00001481:	cmp dword [0x7564], 0x100000
0000148a:	ja 0x14bf
0000148c:	cmp byte [0x7577], 0x7f
00001491:	jz 0x14bf
00001493:	mov byte [0x65a4], 0x1
00001498:	mov ax, 0x7556
0000149b:	mov di, ax
0000149d:	mov si, 0x7576
000014a0:	push ds
000014a1:	pop es
000014a2:	mov cx, 0x10
000014a5:	rep movsw
000014a7:	push 0x0
000014a9:	push ax
000014aa:	push 0x0
000014ac:	lea ax, [bp-0x2]
000014af:	push ax
000014b0:	push 0x1
000014b2:	push word 0x7576
000014b5:	mov al, [bp+0x4]
000014b8:	push ax
000014b9:	call 0xaa2
000014bc:	add sp, 0xe
lbl_14bf:
000014bf:	mov al, 0x1
lbl_14c1:
000014c1:	pop si
000014c2:	pop di
000014c3:	leave
000014c4:	ret
---ENDPROC---  ; sub_144c ; length = 121 bytes ; 3 calls out

000014c5:	db 0x00 

---STARTPROC---
sub_14c6:
000014c6:	enter 0xc, 0x0
000014ca:	push di
000014cb:	push si
000014cc:	mov word [bp-0x4], 0x10
000014d1:	mov word [0x7534], 0x0
000014d7:	mov al, [0x7510]
000014da:	push ax
000014db:	call 0x144c
000014de:	pop bx
000014df:	or al, al
000014e1:	jz 0x1575
000014e5:	push 0x0
000014e7:	mov al, [0x65a1]
000014ea:	push ax
000014eb:	lea ax, [bp-0x1]
000014ee:	push ax
000014ef:	mov al, [0x7510]
000014f2:	push ax
000014f3:	call 0x12c4
000014f6:	add sp, 0x8
000014f9:	or al, al
000014fb:	jnz 0x1503
000014fd:	mov al, [bp-0x1]
00001500:	jmp 0x15f4
lbl_1503:
00001503:	call 0x1284
00001506:	or al, al
00001508:	jz 0x1575
0000150a:	mov bx, [0x7534]
0000150e:	cmp byte [bx+0x7ae], 0x0
00001513:	jz 0x1540
00001515:	mov ax, 0x7536
00001518:	mov di, ax
0000151a:	mov si, 0x7556
0000151d:	push ds
0000151e:	pop es
0000151f:	mov cx, 0x10
00001522:	rep movsw
00001524:	push 0x9
00001526:	push word 0x756c
00001529:	lea ax, [bp-0xc]
0000152c:	push ax
0000152d:	call 0x247e
00001530:	add sp, 0x6
00001533:	mov dx, 0x72
00001536:	mov di, dx
00001538:	mov si, ax
0000153a:	push ds
0000153b:	pop es
0000153c:	movsd
0000153e:	movsd
lbl_1540:
00001540:	cmp byte [0x65a4], 0x0
00001545:	jz 0x1553
00001547:	mov al, [0x7510]
0000154a:	push ax
0000154b:	call 0xcc8
0000154e:	pop bx
0000154f:	or al, al
00001551:	jz 0x1575
lbl_1553:
00001553:	push 0x0
00001555:	mov al, [0x7557]
00001558:	push ax
00001559:	push 0x0
0000155b:	call 0xa62
0000155e:	add sp, 0x6
00001561:	or al, al
00001563:	jnz 0x1575
00001565:	mov eax, [0x775e]
00001569:	mov [0x7e], eax
0000156e:	call 0x222a
00001571:	or al, al
00001573:	jnz 0x15a6
lbl_1575:
00001575:	cmp word [0x7534], 0x0
0000157a:	jz 0x158a
0000157c:	push word [0x7534]
00001580:	call 0x2b26
00001583:	pop bx
00001584:	mov word [0x7534], 0x0
lbl_158a:
0000158a:	mov byte [0x7537], 0x7f
0000158f:	push 0x76
00001591:	push 0x10
00001593:	call 0x2602
00001596:	add sp, 0x4
00001599:	lea ax, [bp-0x2]
0000159c:	push ax
0000159d:	call 0x45a
000015a0:	pop bx
000015a1:	mov al, [bp-0x2]
000015a4:	jmp 0x15f4
lbl_15a6:
000015a6:	push 0x72
000015a8:	push 0x10
000015aa:	call 0x2702
000015ad:	add sp, 0x4
000015b0:	mov [0x82], ax
000015b4:	mov [0x84], dx
lbl_15b8:
000015b8:	push 0x0
000015ba:	push 0x1
000015bc:	push word 0x756c
000015bf:	mov al, [0x7557]
000015c2:	push ax
000015c3:	push word 0x75a6
000015c6:	call 0x860
000015c9:	add sp, 0xa
000015cc:	or al, al
000015ce:	jnz 0x15ef
000015d0:	cmp word [0x77a4], 0xaa55
000015d6:	jz 0x15e2
000015d8:	push word 0x70de
000015db:	call 0x412
000015de:	pop bx
000015df:	call 0x452
lbl_15e2:
000015e2:	push word 0x75a6
000015e5:	mov al, [0x7557]
000015e8:	push ax
000015e9:	call 0x1146
000015ec:	add sp, 0x4
lbl_15ef:
000015ef:	call 0x452
000015f2:	jmp 0x15b8
lbl_15f4:
000015f4:	pop si
000015f5:	pop di
000015f6:	leave
000015f7:	ret
---ENDPROC---  ; sub_14c6 ; length = 306 bytes ; 16 calls out


---STARTPROC---
sub_15f8:
000015f8:	enter 0x32e, 0x0
000015fc:	push di
000015fd:	push si
000015fe:	xor di, di
00001600:	mov byte [bp-0x7], 0x80
lbl_1604:
00001604:	push 0x1
00001606:	push 0x0
00001608:	push 0x0
0000160a:	lea ax, [bp-0xc]
0000160d:	push ax
0000160e:	push 0x10
00001610:	lea ax, [bp-0x32c]
00001614:	push ax
00001615:	mov al, [bp-0x7]
00001618:	push ax
00001619:	call 0xaa2
0000161c:	add sp, 0xe
0000161f:	or al, al
00001621:	jnz 0x16d6
00001625:	mov [bp-0xa], di
00001628:	mov word [bp-0x6], 0x0
0000162d:	jmp 0x16c9
lbl_1630:
00001630:	push 0x0
00001632:	push 0x1
00001634:	mov si, [bp-0x6]
00001637:	shl si, 0x5
0000163a:	lea ax, [bp+si-0x32c]
0000163e:	mov [bp-0x2], ax
00001641:	add ax, 0x16
00001644:	push ax
00001645:	mov al, [bp-0x7]
00001648:	push ax
00001649:	push word 0x75a6
0000164c:	call 0x860
0000164f:	add sp, 0xa
00001652:	or al, al
00001654:	jnz 0x16c6
00001656:	cmp word [0x77a4], 0xaa55
0000165c:	jnz 0x16c6
0000165e:	mov bx, [bp-0x2]
00001661:	cmp [bx+0x2], al
00001664:	jnz 0x16a1
00001666:	cmp dword [0x75a9], 0x5346544e
0000166f:	jz 0x16c6
00001671:	cmp dword [0x75a9], 0x41465845
0000167a:	jnz 0x1683
0000167c:	cmp byte [0x75ad], 0x54
00001681:	jz 0x16c6
lbl_1683:
00001683:	cmp word [0x75dc], 0x4146
00001689:	jnz 0x1692
0000168b:	cmp byte [0x75de], 0x54
00001690:	jz 0x16c6
lbl_1692:
00001692:	cmp word [0x75f8], 0x4146
00001698:	jnz 0x16a1
0000169a:	cmp byte [0x75fa], 0x54
0000169f:	jz 0x16c6
lbl_16a1:
000016a1:	cmp word [bp-0xa], 0x9
000016a5:	jae 0x16c6
000016a7:	mov si, [bp-0xa]
000016aa:	shl si, 0x5
000016ad:	lea ax, [bp+si-0x12c]
000016b1:	mov [bp-0x4], ax
000016b4:	inc word [bp-0xa]
000016b7:	mov ax, [bp-0x2]
000016ba:	mov si, ax
000016bc:	push ds
000016bd:	pop es
000016be:	mov di, [bp-0x4]
000016c1:	mov cx, 0x10
000016c4:	rep movsw
lbl_16c6:
000016c6:	inc word [bp-0x6]
lbl_16c9:
000016c9:	mov ax, [bp-0xc]
000016cc:	cmp [bp-0x6], ax
000016cf:	jb 0x1630
000016d3:	mov di, [bp-0xa]
lbl_16d6:
000016d6:	inc byte [bp-0x7]
000016d9:	cmp byte [bp-0x7], 0x8f
000016dd:	jbe 0x1604
000016e1:	cmp di, 0x1
000016e4:	jae 0x16f3
000016e6:	push word 0x70de
000016e9:	call 0x412
000016ec:	pop bx
000016ed:	call 0x452
000016f0:	jmp 0x1814
lbl_16f3:
000016f3:	mov [bp-0xa], di
lbl_16f6:
000016f6:	call 0xfd0
000016f9:	push word 0x731a
000016fc:	call 0x25e
000016ff:	pop bx
00001700:	push 0x14
00001702:	push -0x3c
00001704:	call 0x38c
00001707:	add sp, 0x4
0000170a:	push word 0x7088
0000170d:	call 0x25e
00001710:	pop bx
00001711:	xor si, si
00001713:	jmp 0x1791
lbl_1715:
00001715:	mov ax, si
00001717:	shl ax, 0x5
0000171a:	lea cx, [bp-0x12c]
0000171e:	add ax, cx
00001720:	mov [bp-0x2], ax
00001723:	push word 0x719a
00001726:	mov [bp-0x32e], ax
0000172a:	call 0x25e
0000172d:	pop bx
0000172e:	lea ax, [si+0x1]
00001731:	push 0x0
00001733:	push ax
00001734:	call 0x27c
00001737:	add sp, 0x4
0000173a:	push word 0x719c
0000173d:	call 0x25e
00001740:	pop bx
00001741:	push word 0x7332
00001744:	call 0x25e
00001747:	pop bx
00001748:	mov bx, [bp-0x32e]
0000174c:	sub ah, ah
0000174e:	mov al, [bx+0x1]
00001751:	sub ax, 0x80
00001754:	cwd
00001755:	push dx
00001756:	push ax
00001757:	call 0x27c
0000175a:	add sp, 0x4
0000175d:	push word 0x733a
00001760:	call 0x25e
00001763:	pop bx
00001764:	mov bx, [bp-0x32e]
00001768:	sub ah, ah
0000176a:	mov al, [bx]
0000176c:	inc ax
0000176d:	cwd
0000176e:	push dx
0000176f:	push ax
00001770:	call 0x27c
00001773:	add sp, 0x4
00001776:	push word 0x7348
00001779:	call 0x25e
0000177c:	pop bx
0000177d:	mov ax, [bp-0x32e]
00001781:	add ax, 0xe
00001784:	push ax
00001785:	call 0x62e
00001788:	pop bx
00001789:	call 0x3a8
0000178c:	lea ax, [si+0x1]
0000178f:	mov si, ax
lbl_1791:
00001791:	cmp si, di
00001793:	jb 0x1715
00001797:	cmp di, 0x1
0000179a:	jnz 0x17a2
0000179c:	mov byte [bp-0x8], 0x31
000017a0:	jmp 0x17d4
lbl_17a2:
000017a2:	push word 0x71a2
000017a5:	call 0x25e
000017a8:	pop bx
000017a9:	push word 0x7352
000017ac:	call 0x25e
000017af:	pop bx
000017b0:	push 0x1
000017b2:	lea ax, [bp-0x8]
000017b5:	push ax
000017b6:	call 0x4ec
000017b9:	add sp, 0x4
000017bc:	or ax, ax
000017be:	jz 0x1814
000017c0:	call 0x3a8
000017c3:	cmp byte [bp-0x8], 0x31
000017c7:	jl 0x180e
000017c9:	mov al, [bp-0x8]
000017cc:	cbw
000017cd:	lea cx, [di+0x30]
000017d0:	cmp cx, ax
000017d2:	jb 0x180e
lbl_17d4:
000017d4:	mov al, [bp-0x8]
000017d7:	cbw
000017d8:	mov si, ax
000017da:	shl si, 0x5
000017dd:	lea ax, [bp-0x74c]
000017e1:	add si, ax
000017e3:	push 0x0
000017e5:	push 0x1
000017e7:	lea ax, [si+0x16]
000017ea:	push ax
000017eb:	mov al, [si+0x1]
000017ee:	push ax
000017ef:	push word 0x75a6
000017f2:	call 0x860
000017f5:	add sp, 0xa
000017f8:	or al, al
000017fa:	jnz 0x16f6
000017fe:	push word 0x75a6
00001801:	mov al, [si+0x1]
00001804:	push ax
00001805:	call 0x1146
00001808:	add sp, 0x4
0000180b:	jmp 0x16f6
lbl_180e:
0000180e:	call 0x3c6
00001811:	jmp 0x16f6
lbl_1814:
00001814:	pop si
00001815:	pop di
00001816:	leave
00001817:	ret
---ENDPROC---  ; sub_15f8 ; length = 544 bytes ; 25 calls out


---STARTPROC---
sub_1818:
00001818:	enter 0x30, 0x0
0000181c:	push di
0000181d:	push si
0000181e:	mov byte [bp-0x5], 0x0
00001822:	sub eax, eax
00001825:	mov [bp-0x20], eax
00001829:	mov [bp-0x1c], eax
0000182d:	mov word [bp-0x4], 0x7f
00001832:	call 0x1284
00001835:	or al, al
00001837:	jz 0x1845
00001839:	mov al, [bp+0x4]
0000183c:	push ax
0000183d:	call 0x144c
00001840:	pop bx
00001841:	or al, al
00001843:	jnz 0x1848
lbl_1845:
00001845:	jmp 0x1abb
lbl_1848:
00001848:	cmp byte [0x7577], 0x7f
0000184d:	jnz 0x1856
0000184f:	push word 0x254
00001852:	call 0x26ec
00001855:	pop bx
lbl_1856:
00001856:	push 0x0
00001858:	push 0x1
0000185a:	push 0x0
0000185c:	push word 0xfe
0000185f:	push word 0x757a
00001862:	lea ax, [bp-0x28]
00001865:	push ax
00001866:	call 0x23d8
00001869:	add sp, 0x8
0000186c:	push ax
0000186d:	mov al, [0x7577]
00001870:	push ax
00001871:	push word 0x75a6
00001874:	call 0x860
00001877:	add sp, 0xa
0000187a:	or al, al
0000187c:	jnz 0x1896
0000187e:	push word 0x200
00001881:	push word 0x75a6
00001884:	call 0x2702
00001887:	add sp, 0x4
0000188a:	cmp ax, [0x7530]
0000188e:	jnz 0x1896
00001890:	cmp dx, [0x7532]
00001894:	jz 0x1899
lbl_1896:
00001896:	jmp 0x1a91
lbl_1899:
00001899:	push 0x0
0000189b:	push 0x1
0000189d:	push word [bp+0x6]
000018a0:	mov al, [bp+0x4]
000018a3:	push ax
000018a4:	call 0x12c4
000018a7:	add sp, 0x8
000018aa:	or al, al
000018ac:	jz 0x1ad1
000018b0:	lea di, [bp-0x18]
000018b3:	mov si, 0x7544
000018b6:	push ss
000018b7:	pop es
000018b8:	movsd
000018ba:	movsd
000018bc:	push word 0x7564
000018bf:	lea ax, [bp-0x18]
000018c2:	push ax
000018c3:	call 0x24de
000018c6:	add sp, 0x4
000018c9:	or al, al
000018cb:	jnz 0x18d4
000018cd:	push word 0x26d
000018d0:	call 0x26ec
000018d3:	pop bx
lbl_18d4:
000018d4:	call 0xfd0
000018d7:	push word 0x73c0
000018da:	call 0x25e
lbl_18dd:
000018dd:	pop bx
lbl_18de:
000018de:	cmp dword [bp-0x14], 0x0
000018e3:	jnz 0x18ee
000018e5:	cmp dword [bp-0x18], 0x0
000018ea:	jz 0x1a58
lbl_18ee:
000018ee:	call 0x49a
000018f1:	or al, al
000018f3:	jz 0x1909
000018f5:	push word 0x73fc
000018f8:	call 0x25e
000018fb:	pop bx
000018fc:	push word 0x7450
000018ff:	call 0x1030
00001902:	pop bx
00001903:	or al, al
00001905:	jnz 0x1a58
lbl_1909:
00001909:	cmp dword [bp-0x14], 0x0
0000190e:	jnz 0x1921
00001910:	movsx eax, word [bp-0x4]
00001915:	cmp eax, [bp-0x18]
00001919:	jbe 0x1921
0000191b:	mov ax, [bp-0x18]
0000191e:	mov [bp-0x4], ax
lbl_1921:
00001921:	push 0x0
00001923:	push word [bp-0x4]
00001926:	lea ax, [bp-0x20]
00001929:	push ax
0000192a:	push word 0x756c
0000192d:	lea ax, [bp-0x28]
00001930:	push ax
00001931:	call 0x22c6
00001934:	add sp, 0x6
00001937:	push ax
00001938:	mov al, [bp+0x4]
0000193b:	push ax
0000193c:	push 0x0
0000193e:	push word 0x4000
00001941:	push 0x0
00001943:	call 0x81c
00001946:	add sp, 0xe
00001949:	or al, al
0000194b:	jnz 0x1a81
0000194f:	mov word [bp-0x2], 0x0
00001954:	jmp 0x19c5
lbl_1956:
00001956:	push word 0x200
00001959:	push word 0x75a6
0000195c:	mov ax, [bp-0x2]
0000195f:	shl ax, 0x9
00001962:	push ax
00001963:	push word 0x4000
00001966:	mov si, ax
00001968:	call 0x25de
0000196b:	add sp, 0x8
0000196e:	mov ax, [bp-0x2]
00001971:	cwd
00001972:	push dx
00001973:	push ax
00001974:	lea ax, [bp-0x20]
00001977:	push ax
00001978:	push word 0x7596
0000197b:	lea ax, [bp-0x28]
0000197e:	push ax
0000197f:	call 0x22c6
00001982:	add sp, 0x6
00001985:	push ax
00001986:	lea ax, [bp-0x30]
00001989:	push ax
0000198a:	call 0x2326
0000198d:	add sp, 0x8
00001990:	push si
00001991:	lea di, [bp-0x10]
00001994:	mov si, ax
00001996:	push ss
00001997:	pop es
00001998:	movsd
0000199a:	movsd
0000199c:	pop si
0000199d:	push word [0x7534]
000019a1:	push 0x0
000019a3:	push 0x1
000019a5:	lea ax, [bp-0x10]
000019a8:	push ax
000019a9:	push word 0x75a6
000019ac:	call 0x2bae
000019af:	add sp, 0xa
000019b2:	push word 0x200
000019b5:	push si
000019b6:	push word 0x4000
000019b9:	push word 0x75a6
000019bc:	call 0x25c0
000019bf:	add sp, 0x8
000019c2:	inc word [bp-0x2]
lbl_19c5:
000019c5:	mov ax, [bp-0x4]
000019c8:	cmp [bp-0x2], ax
000019cb:	jl 0x1956
000019cd:	push 0x0
000019cf:	push ax
000019d0:	lea ax, [bp-0x20]
000019d3:	push ax
000019d4:	push word 0x759e
000019d7:	lea ax, [bp-0x30]
000019da:	push ax
000019db:	call 0x22c6
000019de:	add sp, 0x6
000019e1:	push ax
000019e2:	mov al, [bp+0x4]
000019e5:	push ax
000019e6:	push 0x0
000019e8:	push word 0x4000
000019eb:	push 0x1
000019ed:	call 0x81c
000019f0:	add sp, 0xe
000019f3:	or al, al
000019f5:	jnz 0x1a88
000019f9:	mov ax, [bp-0x4]
000019fc:	cwd
000019fd:	push dx
000019fe:	push ax
000019ff:	lea cx, [bp-0x18]
00001a02:	push cx
00001a03:	lea bx, [bp-0x28]
00001a06:	push bx
00001a07:	mov si, ax
00001a09:	mov di, dx
00001a0b:	call 0x23d8
00001a0e:	add sp, 0x8
00001a11:	push si
00001a12:	push di
00001a13:	lea di, [bp-0x18]
00001a16:	mov si, ax
00001a18:	push ss
00001a19:	pop es
00001a1a:	movsd
00001a1c:	movsd
00001a1e:	pop di
00001a1f:	pop si
00001a20:	push di
00001a21:	push si
00001a22:	lea ax, [bp-0x20]
00001a25:	push ax
00001a26:	lea cx, [bp-0x30]
00001a29:	push cx
00001a2a:	call 0x2326
00001a2d:	add sp, 0x8
00001a30:	lea di, [bp-0x20]
00001a33:	mov si, ax
00001a35:	push ss
00001a36:	pop es
00001a37:	movsd
00001a39:	movsd
00001a3b:	mov ax, [bp-0x8]
00001a3e:	inc word [bp-0x8]
00001a41:	test al, 0xf
00001a43:	jnz 0x18de
00001a47:	push word 0x74a8
00001a4a:	call 0x25e
00001a4d:	pop bx
00001a4e:	lea ax, [bp-0x18]
00001a51:	push ax
00001a52:	call 0x62e
00001a55:	jmp 0x18dd
lbl_1a58:
00001a58:	push word [0x7534]
00001a5c:	call 0x2b26
00001a5f:	pop bx
00001a60:	cmp dword [bp-0x14], 0x0
00001a65:	jnz 0x1a79
00001a67:	cmp dword [bp-0x18], 0x0
00001a6c:	jnz 0x1a79
00001a6e:	mov byte [bp-0x5], 0x1
00001a72:	push word 0x74b6
00001a75:	call 0x25e
00001a78:	pop bx
lbl_1a79:
00001a79:	push 0x2
00001a7b:	call 0x3b0
00001a7e:	pop bx
00001a7f:	jmp 0x1ac4
lbl_1a81:
00001a81:	push word 0x7456
00001a84:	call 0x25e
00001a87:	pop bx
lbl_1a88:
00001a88:	push word [0x7534]
00001a8c:	call 0x2b26
00001a8f:	jmp 0x1aba
lbl_1a91:
00001a91:	push word 0x7372
00001a94:	call 0x42c
00001a97:	pop bx
00001a98:	mov al, [0x7577]
00001a9b:	push ax
00001a9c:	call 0x540
00001a9f:	pop bx
00001aa0:	or al, al
00001aa2:	jz 0x1aa9
00001aa4:	mov ax, 0x739a
00001aa7:	jmp 0x1aac
lbl_1aa9:
00001aa9:	mov ax, 0x73a8
lbl_1aac:
00001aac:	push ax
00001aad:	call 0x25e
00001ab0:	pop bx
00001ab1:	call 0x3a8
00001ab4:	push word 0x720c
00001ab7:	call 0x25e
lbl_1aba:
00001aba:	pop bx
lbl_1abb:
00001abb:	mov bx, [bp+0x6]
00001abe:	mov byte [bx], 0x1
00001ac1:	call 0x452
lbl_1ac4:
00001ac4:	push 0x76
00001ac6:	push 0x10
00001ac8:	call 0x2602
00001acb:	add sp, 0x4
00001ace:	mov al, [bp-0x5]
lbl_1ad1:
00001ad1:	pop si
00001ad2:	pop di
00001ad3:	leave
00001ad4:	ret
---ENDPROC---  ; sub_1818 ; length = 701 bytes ; 39 calls out

00001ad5:	db 0x00 
00001ad6:	db 0xc3 
00001ad7:	db 0x00 
lbl_1ad8:
00001ad8:	enter 0x4, 0x0
00001adc:	mov [0x750f], dl
00001ae0:	mov [0x750e], dh
00001ae4:	call 0x19e
00001ae7:	call 0x3ce
00001aea:	call 0xfd0
00001aed:	mov al, [0x750f]
00001af0:	mov [0x7510], al
00001af3:	cmp al, 0x80
00001af5:	jae 0x1afc
00001af7:	mov byte [0x7510], 0x80
lbl_1afc:
00001afc:	push 0x0
00001afe:	push word 0x7512
00001b01:	mov al, [0x7510]
00001b04:	push ax
00001b05:	call 0x8c8
00001b08:	add sp, 0x6
00001b0b:	or al, al
00001b0d:	jz 0x1b29
00001b0f:	push 0x0
00001b11:	push word 0x7512
00001b14:	mov al, 0x80
00001b16:	mov [0x7510], al
00001b19:	push ax
00001b1a:	call 0x8c8
00001b1d:	add sp, 0x6
00001b20:	or al, al
00001b22:	jz 0x1b29
00001b24:	call 0x452
00001b27:	jmp 0x1b2e
lbl_1b29:
00001b29:	mov byte [0x65a0], 0x1
lbl_1b2e:
00001b2e:	call 0xfd0
00001b31:	mov al, [0x750e]
00001b34:	and al, 0xc0
00001b36:	mov [bp-0x4], al
00001b39:	or al, al
00001b3b:	jz 0x1b79
00001b3d:	mov byte [0x65a1], 0x1
00001b42:	call 0xffc
00001b45:	cmp byte [bp-0x4], 0x40
00001b49:	jnz 0x1b7c
00001b4b:	lea ax, [bp-0x2]
00001b4e:	push ax
00001b4f:	mov al, [0x7510]
00001b52:	push ax
00001b53:	call 0x1818
00001b56:	add sp, 0x4
00001b59:	or al, al
00001b5b:	jz 0x1b71
00001b5d:	mov al, [0x750e]
00001b60:	and al, 0x3f
00001b62:	or al, 0x80
00001b64:	mov [0x750e], al
00001b67:	mov al, [0x750f]
00001b6a:	push ax
00001b6b:	call 0x1f6
00001b6e:	pop bx
00001b6f:	jmp 0x1b7c
lbl_1b71:
00001b71:	cmp byte [bp-0x2], 0x1
00001b75:	jnz 0x1b2e
00001b77:	jmp 0x1b82
lbl_1b79:
00001b79:	call 0xffc
lbl_1b7c:
00001b7c:	call 0x14c6
00001b7f:	mov [bp-0x2], al
lbl_1b82:
00001b82:	cmp byte [0x65a2], 0x0
00001b87:	jnz 0x1b2e
00001b89:	call 0x15f8
00001b8c:	jmp 0x1b2e

---STARTPROC---
sub_1b8e:
00001b8e:	enter 0xa, 0x0
00001b92:	push di
00001b93:	mov byte [bp-0x2], 0x0
00001b97:	push es
00001b98:	lea di, [0x7502]
00001b9c:	mov eax, [di]
00001b9f:	lea di, [0x77a8]
00001ba3:	mov ebx, [di]
00001ba6:	lea di, [0x750a]
00001baa:	mov ecx, [di]
00001bad:	lea di, [0x7506]
00001bb1:	mov edx, [di]
00001bb4:	lea di, [0x77a8]
00001bb8:	mov [di], ecx
00001bbb:	push word 0x6000
00001bbe:	pop es
00001bbf:	mov di, 0x0
00001bc2:	int 0x15
00001bc4:	jae 0x1bca
00001bc6:	mov byte [bp-0x2], 0x1
lbl_1bca:
00001bca:	lea di, [bp-0x6]
00001bcd:	mov [di], eax
00001bd0:	lea di, [0x77a8]
00001bd4:	mov [di], ebx
00001bd7:	lea di, [bp-0xa]
00001bda:	mov [di], ecx
00001bdd:	pop es
00001bde:	push 0x14
00001be0:	push word [bp+0x4]
00001be3:	push 0x0
00001be5:	push word 0x6000
00001be8:	call 0x25de
00001beb:	add sp, 0x8
00001bee:	cmp byte [bp-0x2], 0x0
00001bf2:	jz 0x1bfb
00001bf4:	sub eax, eax
00001bf7:	mov [0x77a8], eax
lbl_1bfb:
00001bfb:	cmp dword [bp-0x6], 0x534d4150
00001c03:	jnz 0x1c11
00001c05:	cmp dword [bp-0xa], 0x14
00001c0a:	jnz 0x1c11
00001c0c:	mov al, 0x1
00001c0e:	pop di
00001c0f:	leave
00001c10:	ret
---ENDPROC---  ; sub_1b8e ; length = 131 bytes ; 1 calls out

lbl_1c11:
00001c11:	xor al, al
00001c13:	pop di
00001c14:	leave
00001c15:	ret

---STARTPROC---
sub_1c16:
00001c16:	push bp
00001c17:	mov bp, sp
00001c19:	mov dword [0x77a8], 0x0
00001c22:	push word [bp+0x4]
00001c25:	call 0x1b8e
00001c28:	pop bx
00001c29:	leave
00001c2a:	ret
---ENDPROC---  ; sub_1c16 ; length = 21 bytes ; 1 calls out

00001c2b:	db 0x00 

---STARTPROC---
sub_1c2c:
00001c2c:	push bp
00001c2d:	mov bp, sp
00001c2f:	mov ax, [0x77aa]
00001c32:	or ax, [0x77a8]
00001c36:	jnz 0x1c3c
00001c38:	xor al, al
00001c3a:	leave
00001c3b:	ret
---ENDPROC---  ; sub_1c2c ; length = 16 bytes ; 0 calls out

lbl_1c3c:
00001c3c:	push word [bp+0x4]
00001c3f:	call 0x1b8e
00001c42:	pop bx
00001c43:	leave
00001c44:	ret
00001c45:	db 0x00 
00001c46:	db 0xc8 
00001c47:	db 0x42 B
00001c48:	db 0x00 
00001c49:	db 0x00 
00001c4a:	db 0x6a j
00001c4b:	db 0x1c 
00001c4c:	db 0x68 h
00001c4d:	db 0xb4 
00001c4e:	db 0x77 w
00001c4f:	db 0x8d 
00001c50:	db 0x46 F
00001c51:	db 0xe4 
00001c52:	db 0x50 P
00001c53:	db 0xe8 
00001c54:	db 0xda 
00001c55:	db 0xe3 
00001c56:	db 0x83 
00001c57:	db 0xc4 
00001c58:	db 0x06 
00001c59:	db 0xfb 
00001c5a:	db 0xff 
00001c5b:	db 0x06 
00001c5c:	db 0xaa 
00001c5d:	db 0x65 e
00001c5e:	db 0xc6 
00001c5f:	db 0x46 F
00001c60:	db 0xe0 
00001c61:	db 0x01 
00001c62:	db 0x8a 
00001c63:	db 0x46 F
00001c64:	db 0xe7 
00001c65:	db 0x88 
00001c66:	db 0x46 F
00001c67:	db 0xe2 
00001c68:	db 0x2a *
00001c69:	db 0xe4 
00001c6a:	db 0x48 H
00001c6b:	db 0x48 H
00001c6c:	db 0x7c |
00001c6d:	db 0x02 
00001c6e:	db 0x71 q
00001c6f:	db 0x03 
00001c70:	db 0xe9 
00001c71:	db 0x7f 
00001c72:	db 0x01 
00001c73:	db 0x48 H
00001c74:	db 0x7e ~
00001c75:	db 0x0f 
00001c76:	db 0x2d -
00001c77:	db 0x3f ?
00001c78:	db 0x00 
00001c79:	db 0x0f 
00001c7a:	db 0x8c 
00001c7b:	db 0x75 u
00001c7c:	db 0x01 
00001c7d:	db 0x48 H
00001c7e:	db 0x0f 
00001c7f:	db 0x8e 
00001c80:	db 0xdb 
00001c81:	db 0x00 
00001c82:	db 0xe9 
00001c83:	db 0x6d m
00001c84:	db 0x01 
00001c85:	db 0x8a 
00001c86:	db 0x46 F
00001c87:	db 0xf2 
00001c88:	db 0x88 
00001c89:	db 0x46 F
00001c8a:	db 0xde 
00001c8b:	db 0x8a 
00001c8c:	db 0x4e N
00001c8d:	db 0xee 
00001c8e:	db 0x81 
00001c8f:	db 0xe1 
00001c90:	db 0xc0 
00001c91:	db 0x00 
00001c92:	db 0xc1 
00001c93:	db 0xe1 
00001c94:	db 0x02 
00001c95:	db 0x8a 
00001c96:	db 0x56 V
00001c97:	db 0xef 
00001c98:	db 0x2a *
00001c99:	db 0xf6 
00001c9a:	db 0x0b 
00001c9b:	db 0xca 
00001c9c:	db 0x89 
00001c9d:	db 0x4e N
00001c9e:	db 0xda 
00001c9f:	db 0x8a 
00001ca0:	db 0x4e N
00001ca1:	db 0xf3 
00001ca2:	db 0x88 
00001ca3:	db 0x4e N
00001ca4:	db 0xdc 
00001ca5:	db 0x8a 
00001ca6:	db 0x4e N
00001ca7:	db 0xee 
00001ca8:	db 0x80 
00001ca9:	db 0xe1 
00001caa:	db 0x3f ?
00001cab:	db 0x88 
00001cac:	db 0x4e N
00001cad:	db 0xdd 
00001cae:	db 0x8a 
00001caf:	db 0x4e N
00001cb0:	db 0xe6 
00001cb1:	db 0x88 
00001cb2:	db 0x4e N
00001cb3:	db 0xd8 
00001cb4:	db 0x3a :
00001cb5:	db 0x06 
00001cb6:	db 0x10 
00001cb7:	db 0x75 u
00001cb8:	db 0x75 u
00001cb9:	db 0x1d 
00001cba:	db 0x38 8
00001cbb:	db 0x36 6
00001cbc:	db 0xa0 
00001cbd:	db 0x65 e
00001cbe:	db 0x75 u
00001cbf:	db 0x06 
00001cc0:	db 0x6a j
00001cc1:	db 0x50 P
00001cc2:	db 0xe8 
00001cc3:	db 0x27 '
00001cc4:	db 0x0a 
00001cc5:	db 0x5b [
00001cc6:	db 0x8d 
00001cc7:	db 0x46 F
00001cc8:	db 0xd0 
00001cc9:	db 0x50 P
00001cca:	db 0x8d 
00001ccb:	db 0x46 F
00001ccc:	db 0xda 
00001ccd:	db 0x50 P
00001cce:	db 0x68 h
00001ccf:	db 0x12 
00001cd0:	db 0x75 u
00001cd1:	db 0xe8 
00001cd2:	db 0x7c |
00001cd3:	db 0xec 
00001cd4:	db 0x83 
00001cd5:	db 0xc4 
00001cd6:	db 0x06 
00001cd7:	db 0x83 
00001cd8:	db 0x3e >
00001cd9:	db 0xaa 
00001cda:	db 0x65 e
00001cdb:	db 0x00 
00001cdc:	db 0x75 u
00001cdd:	db 0x08 
00001cde:	db 0xa0 
00001cdf:	db 0x37 7
00001ce0:	db 0x75 u
00001ce1:	db 0x38 8
00001ce2:	db 0x46 F
00001ce3:	db 0xde 
00001ce4:	db 0x74 t
00001ce5:	db 0x03 
00001ce6:	db 0xe9 
00001ce7:	db 0x09 
00001ce8:	db 0x01 
00001ce9:	db 0x80 
00001cea:	db 0x7e ~
00001ceb:	db 0xe2 
00001cec:	db 0x03 
00001ced:	db 0x75 u
00001cee:	db 0x1d 
00001cef:	db 0x8a 
00001cf0:	db 0x46 F
00001cf1:	db 0xd8 
00001cf2:	db 0x2a *
00001cf3:	db 0xe4 
00001cf4:	db 0x50 P
00001cf5:	db 0x66 f
00001cf6:	db 0xff 
00001cf7:	db 0x76 v
00001cf8:	db 0xd4 
00001cf9:	db 0x66 f
00001cfa:	db 0xff 
00001cfb:	db 0x76 v
00001cfc:	db 0xd0 
00001cfd:	db 0x8a 
00001cfe:	db 0x46 F
00001cff:	db 0xde 
00001d00:	db 0x50 P
00001d01:	db 0xff 
00001d02:	db 0x76 v
00001d03:	db 0xea 
00001d04:	db 0xff 
00001d05:	db 0x76 v
00001d06:	db 0xfc 
00001d07:	db 0xe8 
00001d08:	db 0x3e >
00001d09:	db 0xf1 
00001d0a:	db 0xeb 
00001d0b:	db 0x1b 
00001d0c:	db 0x8a 
00001d0d:	db 0x46 F
00001d0e:	db 0xd8 
00001d0f:	db 0x2a *
00001d10:	db 0xe4 
00001d11:	db 0x50 P
00001d12:	db 0x66 f
00001d13:	db 0xff 
00001d14:	db 0x76 v
00001d15:	db 0xd4 
00001d16:	db 0x66 f
00001d17:	db 0xff 
00001d18:	db 0x76 v
00001d19:	db 0xd0 
00001d1a:	db 0x8a 
00001d1b:	db 0x46 F
00001d1c:	db 0xde 
00001d1d:	db 0x50 P
00001d1e:	db 0xff 
00001d1f:	db 0x76 v
00001d20:	db 0xea 
00001d21:	db 0xff 
00001d22:	db 0x76 v
00001d23:	db 0xfc 
00001d24:	db 0xe8 
00001d25:	db 0xdd 
00001d26:	db 0xef 
00001d27:	db 0x83 
00001d28:	db 0xc4 
00001d29:	db 0x10 
00001d2a:	db 0x88 
00001d2b:	db 0x46 F
00001d2c:	db 0xce 
00001d2d:	db 0xfa 
00001d2e:	db 0x6a j
00001d2f:	db 0x1c 
00001d30:	db 0x8d 
00001d31:	db 0x46 F
00001d32:	db 0xe4 
00001d33:	db 0x50 P
00001d34:	db 0x68 h
00001d35:	db 0xb4 
00001d36:	db 0x77 w
00001d37:	db 0xe8 
00001d38:	db 0xf6 
00001d39:	db 0xe2 
00001d3a:	db 0x83 
00001d3b:	db 0xc4 
00001d3c:	db 0x06 
00001d3d:	db 0x8a 
00001d3e:	db 0x66 f
00001d3f:	db 0xce 
00001d40:	db 0x2a *
00001d41:	db 0xc0 
00001d42:	db 0xa3 
00001d43:	db 0xb6 
00001d44:	db 0x77 w
00001d45:	db 0x0a 
00001d46:	db 0xe4 
00001d47:	db 0x0f 
00001d48:	db 0x85 
00001d49:	db 0x9e 
00001d4a:	db 0x00 
00001d4b:	db 0x8a 
00001d4c:	db 0x4e N
00001d4d:	db 0xd8 
00001d4e:	db 0x2a *
00001d4f:	db 0xed 
00001d50:	db 0x0b 
00001d51:	db 0xc1 
00001d52:	db 0xa3 
00001d53:	db 0xb6 
00001d54:	db 0x77 w
00001d55:	db 0x80 
00001d56:	db 0x26 &
00001d57:	db 0xb4 
00001d58:	db 0x77 w
00001d59:	db 0xfe 
00001d5a:	db 0xe9 
00001d5b:	db 0x91 
00001d5c:	db 0x00 
00001d5d:	db 0x8a 
00001d5e:	db 0x46 F
00001d5f:	db 0xf2 
00001d60:	db 0x88 
00001d61:	db 0x46 F
00001d62:	db 0xce 
00001d63:	db 0x6a j
00001d64:	db 0x10 
00001d65:	db 0x8d 
00001d66:	db 0x46 F
00001d67:	db 0xbe 
00001d68:	db 0x50 P
00001d69:	db 0xff 
00001d6a:	db 0x76 v
00001d6b:	db 0xf8 
00001d6c:	db 0xff 
00001d6d:	db 0x76 v
00001d6e:	db 0xfa 
00001d6f:	db 0xe8 
00001d70:	db 0x6c l
00001d71:	db 0x08 
00001d72:	db 0x83 
00001d73:	db 0xc4 
00001d74:	db 0x08 
00001d75:	db 0x83 
00001d76:	db 0x3e >
00001d77:	db 0xaa 
00001d78:	db 0x65 e
00001d79:	db 0x00 
00001d7a:	db 0x75 u
00001d7b:	db 0x76 v
00001d7c:	db 0xa0 
00001d7d:	db 0x37 7
00001d7e:	db 0x75 u
00001d7f:	db 0x38 8
00001d80:	db 0x46 F
00001d81:	db 0xce 
00001d82:	db 0x75 u
00001d83:	db 0x6e n
00001d84:	db 0x8b 
00001d85:	db 0x46 F
00001d86:	db 0xc4 
00001d87:	db 0x89 
00001d88:	db 0x46 F
00001d89:	db 0xd8 
00001d8a:	db 0x8b 
00001d8b:	db 0x46 F
00001d8c:	db 0xc2 
00001d8d:	db 0x89 
00001d8e:	db 0x46 F
00001d8f:	db 0xda 
00001d90:	db 0x80 
00001d91:	db 0x7e ~
00001d92:	db 0xe2 
00001d93:	db 0x43 C
00001d94:	db 0x75 u
00001d95:	db 0x18 
00001d96:	db 0xff 
00001d97:	db 0x76 v
00001d98:	db 0xc0 
00001d99:	db 0x66 f
00001d9a:	db 0xff 
00001d9b:	db 0x76 v
00001d9c:	db 0xca 
00001d9d:	db 0x66 f
00001d9e:	db 0xff 
00001d9f:	db 0x76 v
00001da0:	db 0xc6 
00001da1:	db 0x8a 
00001da2:	db 0x46 F
00001da3:	db 0xce 
00001da4:	db 0x50 P
00001da5:	db 0x66 f
00001da6:	db 0xff 
00001da7:	db 0x76 v
00001da8:	db 0xd8 
00001da9:	db 0xe8 
00001daa:	db 0x9c 
00001dab:	db 0xf0 
00001dac:	db 0xeb 
00001dad:	db 0x16 
00001dae:	db 0xff 
00001daf:	db 0x76 v
00001db0:	db 0xc0 
00001db1:	db 0x66 f
00001db2:	db 0xff 
00001db3:	db 0x76 v
00001db4:	db 0xca 
00001db5:	db 0x66 f
00001db6:	db 0xff 
00001db7:	db 0x76 v
00001db8:	db 0xc6 
00001db9:	db 0x8a 
00001dba:	db 0x46 F
00001dbb:	db 0xce 
00001dbc:	db 0x50 P
00001dbd:	db 0x66 f
00001dbe:	db 0xff 
00001dbf:	db 0x76 v
00001dc0:	db 0xd8 
00001dc1:	db 0xe8 
00001dc2:	db 0x40 @
00001dc3:	db 0xef 
00001dc4:	db 0x83 
00001dc5:	db 0xc4 
00001dc6:	db 0x10 
00001dc7:	db 0x88 
00001dc8:	db 0x46 F
00001dc9:	db 0xd0 
00001dca:	db 0xfa 
00001dcb:	db 0x6a j
00001dcc:	db 0x1c 
00001dcd:	db 0x8d 
00001dce:	db 0x46 F
00001dcf:	db 0xe4 
00001dd0:	db 0x50 P
00001dd1:	db 0x68 h
00001dd2:	db 0xb4 
00001dd3:	db 0x77 w
00001dd4:	db 0xe8 
00001dd5:	db 0x59 Y
00001dd6:	db 0xe2 
00001dd7:	db 0x83 
00001dd8:	db 0xc4 
00001dd9:	db 0x06 
00001dda:	db 0xa0 
00001ddb:	db 0xb6 
00001ddc:	db 0x77 w
00001ddd:	db 0x8a 
00001dde:	db 0x66 f
00001ddf:	db 0xd0 
00001de0:	db 0xa3 
00001de1:	db 0xb6 
00001de2:	db 0x77 w
00001de3:	db 0x0a 
00001de4:	db 0xe4 
00001de5:	db 0x0f 
00001de6:	db 0x84 
00001de7:	db 0x6c l
00001de8:	db 0xff 
00001de9:	db 0x80 
00001dea:	db 0x0e 
00001deb:	db 0xb4 
00001dec:	db 0x77 w
00001ded:	db 0x01 
00001dee:	db 0xc6 
00001def:	db 0x46 F
00001df0:	db 0xe0 
00001df1:	db 0x00 
00001df2:	db 0xff 
00001df3:	db 0x0e 
00001df4:	db 0xaa 
00001df5:	db 0x65 e
00001df6:	db 0x8a 
00001df7:	db 0x46 F
00001df8:	db 0xe0 
00001df9:	db 0xc9 
00001dfa:	db 0xc3 
00001dfb:	db 0x00 

---STARTPROC---
sub_1dfc:
00001dfc:	push bp
00001dfd:	mov bp, sp
00001dff:	mov bx, [bp+0x4]
00001e02:	mov dword [bx+0x10], 0x2
00001e0a:	mov dword [bx+0x4], 0x0
00001e12:	mov eax, [bp+0x6]
00001e16:	mov [bx], eax
00001e19:	sub eax, eax
00001e1c:	mov [bx+0xc], eax
00001e20:	mov word [bx+0x8], 0xa800
00001e25:	mov [bx+0xa], ax
00001e28:	leave
00001e29:	ret
---ENDPROC---  ; sub_1dfc ; length = 46 bytes ; 0 calls out


---STARTPROC---
sub_1e2a:
00001e2a:	enter 0x40, 0x0
00001e2e:	push di
00001e2f:	push si
00001e30:	mov word [0x7e10], 0x0
00001e36:	mov word [bp-0x16], 0x77d0
00001e3b:	mov word [bp-0x18], 0x7e10
00001e40:	sub eax, eax
00001e43:	mov [bp-0x1c], eax
00001e47:	mov [bp-0x22], cs
00001e4a:	push 0x0
00001e4c:	push word [bp-0x22]
00001e4f:	call 0x2612
00001e52:	add sp, 0x4
00001e55:	mov [bp-0x20], ax
00001e58:	mov [bp-0x1e], dx
00001e5b:	mov dword [bp-0x26], 0x0
00001e63:	mov ax, [bp-0x20]
00001e66:	add ah, 0xa8
00001e69:	adc dx, 0x0
00001e6c:	mov [bp-0x2a], ax
00001e6f:	mov [bp-0x28], dx
00001e72:	mov byte [bp-0x2c], 0x0
00001e76:	lea ax, [bp-0x14]
00001e79:	push ax
00001e7a:	call 0x1c16
00001e7d:	pop bx
00001e7e:	or al, al
00001e80:	jz 0x1ffe
lbl_1e84:
00001e84:	lea ax, [bp-0xc]
00001e87:	push ax
00001e88:	lea ax, [bp-0x14]
00001e8b:	push ax
00001e8c:	lea cx, [bp-0x3e]
00001e8f:	push cx
00001e90:	call 0x22c6
00001e93:	add sp, 0x6
00001e96:	lea di, [bp-0x36]
00001e99:	mov si, ax
00001e9b:	push ss
00001e9c:	pop es
00001e9d:	movsd
00001e9f:	movsd
00001ea1:	cmp dword [bp-0x4], 0x1
00001ea6:	jnz 0x1fa1
00001eaa:	push 0x0
00001eac:	push 0x1
00001eae:	lea ax, [bp-0x36]
00001eb1:	push ax
00001eb2:	lea ax, [bp-0x3e]
00001eb5:	push ax
00001eb6:	call 0x23d8
00001eb9:	add sp, 0x8
00001ebc:	push ax
00001ebd:	lea ax, [bp-0x14]
00001ec0:	push ax
00001ec1:	push 0x0
00001ec3:	push word 0xa800
00001ec6:	lea cx, [bp-0x20]
00001ec9:	push cx
00001eca:	call 0x2628
00001ecd:	add sp, 0xa
00001ed0:	or al, al
00001ed2:	jz 0x1fa1
00001ed6:	lea ax, [bp-0x20]
00001ed9:	push ax
00001eda:	lea ax, [bp-0x14]
00001edd:	push ax
00001ede:	call 0x2538
00001ee1:	add sp, 0x4
00001ee4:	or al, al
00001ee6:	jz 0x1f29
00001ee8:	mov ax, [bp-0x16]
00001eeb:	cmp [bp-0x18], ax
00001eee:	ja 0x1ef8
lbl_1ef0:
00001ef0:	mov word [bp-0x2e], 0x0
00001ef5:	jmp 0x2014
lbl_1ef8:
00001ef8:	lea si, [bp-0x14]
00001efb:	push ds
00001efc:	pop es
00001efd:	mov di, [bp-0x16]
00001f00:	mov cx, 0xa
00001f03:	rep movsw
00001f05:	lea ax, [bp-0x14]
00001f08:	push ax
00001f09:	lea ax, [bp-0x20]
00001f0c:	push ax
00001f0d:	lea ax, [bp-0x3e]
00001f10:	push ax
00001f11:	call 0x2378
00001f14:	add sp, 0x6
00001f17:	mov bx, [bp-0x16]
00001f1a:	lea di, [bx+0x8]
00001f1d:	mov si, ax
00001f1f:	push ds
00001f20:	pop es
00001f21:	movsd
00001f23:	movsd
00001f25:	add word [bp-0x16], 0x14
lbl_1f29:
00001f29:	cmp byte [bp-0x2c], 0x0
00001f2d:	jnz 0x1f4a
00001f2f:	mov ax, [bp-0x16]
00001f32:	cmp [bp-0x18], ax
00001f35:	jbe 0x1ef0
00001f37:	push dword [bp-0x20]
00001f3b:	push ax
00001f3c:	call 0x1dfc
00001f3f:	add sp, 0x6
00001f42:	add word [bp-0x16], 0x14
00001f46:	mov byte [bp-0x2c], 0x1
lbl_1f4a:
00001f4a:	lea ax, [bp-0x36]
00001f4d:	push ax
00001f4e:	lea ax, [bp-0x2a]
00001f51:	push ax
00001f52:	call 0x2538
00001f55:	add sp, 0x4
00001f58:	or al, al
00001f5a:	jz 0x1ff0
00001f5e:	mov ax, [bp-0x16]
00001f61:	cmp [bp-0x18], ax
00001f64:	jbe 0x1fa9
00001f66:	mov bx, ax
00001f68:	mov dword [bx+0x10], 0x1
00001f70:	mov di, ax
00001f72:	lea si, [bp-0x2a]
00001f75:	push ds
00001f76:	pop es
00001f77:	movsd
00001f79:	movsd
00001f7b:	lea ax, [bp-0x2a]
00001f7e:	push ax
00001f7f:	lea ax, [bp-0x36]
00001f82:	push ax
00001f83:	lea ax, [bp-0x3e]
00001f86:	push ax
00001f87:	call 0x2378
00001f8a:	add sp, 0x6
00001f8d:	mov bx, [bp-0x16]
00001f90:	lea di, [bx+0x8]
00001f93:	mov si, ax
00001f95:	push ds
00001f96:	pop es
00001f97:	movsd
00001f99:	movsd
00001f9b:	add word [bp-0x16], 0x14
00001f9f:	jmp 0x1ff0
lbl_1fa1:
00001fa1:	mov ax, [bp-0x16]
00001fa4:	cmp [bp-0x18], ax
00001fa7:	ja 0x1fac
lbl_1fa9:
00001fa9:	jmp 0x1ef0
lbl_1fac:
00001fac:	cmp byte [bp-0x2c], 0x0
00001fb0:	jnz 0x1fd9
00001fb2:	lea ax, [bp-0x20]
00001fb5:	push ax
00001fb6:	lea cx, [bp-0x14]
00001fb9:	push cx
00001fba:	call 0x2504
00001fbd:	add sp, 0x4
00001fc0:	or al, al
00001fc2:	jz 0x1fd9
00001fc4:	push dword [bp-0x20]
00001fc8:	push word [bp-0x16]
00001fcb:	call 0x1dfc
00001fce:	add sp, 0x6
00001fd1:	add word [bp-0x16], 0x14
00001fd5:	mov byte [bp-0x2c], 0x1
lbl_1fd9:
00001fd9:	mov ax, [bp-0x16]
00001fdc:	add word [bp-0x16], 0x14
00001fe0:	mov [bp-0x40], ax
00001fe3:	lea si, [bp-0x14]
00001fe6:	push ds
00001fe7:	pop es
00001fe8:	mov di, [bp-0x40]
00001feb:	mov cx, 0xa
00001fee:	rep movsw
lbl_1ff0:
00001ff0:	lea ax, [bp-0x14]
00001ff3:	push ax
00001ff4:	call 0x1c2c
00001ff7:	pop bx
00001ff8:	or al, al
00001ffa:	jnz 0x1e84
lbl_1ffe:
00001ffe:	mov ax, [bp-0x16]
00002001:	sub ax, 0x77d0
00002004:	mov cx, 0x14
00002007:	cwd
00002008:	idiv cx
0000200a:	mov [0x7e10], ax
0000200d:	mov al, 0x1
0000200f:	jmp 0x2037
lbl_2011:
00002011:	inc word [bp-0x2e]
lbl_2014:
00002014:	lea ax, [bp-0x14]
00002017:	push ax
00002018:	call 0x1c2c
0000201b:	pop bx
0000201c:	or al, al
0000201e:	jnz 0x2011
00002020:	push word 0x74ca
00002023:	call 0x42c
00002026:	pop bx
00002027:	push 0x0
00002029:	push word [bp-0x2e]
0000202c:	call 0x27c
0000202f:	add sp, 0x4
00002032:	call 0x3a8
00002035:	xor al, al
lbl_2037:
00002037:	pop si
00002038:	pop di
00002039:	leave
0000203a:	ret
---ENDPROC---  ; sub_1e2a ; length = 529 bytes ; 17 calls out

0000203b:	db 0x00 
0000203c:	db 0x55 U
0000203d:	db 0x8b 
0000203e:	db 0xec 
0000203f:	db 0x57 W
00002040:	db 0x56 V
00002041:	db 0xa1 
00002042:	db 0x10 
00002043:	db 0x7e ~
00002044:	db 0x2b +
00002045:	db 0xd2 
00002046:	db 0x3b ;
00002047:	db 0x16 
00002048:	db 0xbc 
00002049:	db 0x77 w
0000204a:	db 0x77 w
0000204b:	db 0x1c 
0000204c:	db 0x72 r
0000204d:	db 0x06 
0000204e:	db 0x3b ;
0000204f:	db 0x06 
00002050:	db 0xba 
00002051:	db 0x77 w
00002052:	db 0x77 w
00002053:	db 0x14 
00002054:	db 0x80 
00002055:	db 0x0e 
00002056:	db 0xb4 
00002057:	db 0x77 w
00002058:	db 0x01 
00002059:	db 0x66 f
0000205a:	db 0x2b +
0000205b:	db 0xc0 
0000205c:	db 0x66 f
0000205d:	db 0xa3 
0000205e:	db 0xba 
0000205f:	db 0x77 w
00002060:	db 0xc7 
00002061:	db 0x06 
00002062:	db 0xb6 
00002063:	db 0x77 w
00002064:	db 0xff 
00002065:	db 0xff 
00002066:	db 0xeb 
00002067:	db 0x52 R
00002068:	db 0x6a j
00002069:	db 0x14 
0000206a:	db 0xff 
0000206b:	db 0x36 6
0000206c:	db 0xc6 
0000206d:	db 0x77 w
0000206e:	db 0xff 
0000206f:	db 0x36 6
00002070:	db 0xcc 
00002071:	db 0x77 w
00002072:	db 0x6b k
00002073:	db 0x06 
00002074:	db 0xba 
00002075:	db 0x77 w
00002076:	db 0x14 
00002077:	db 0x05 
00002078:	db 0xd0 
00002079:	db 0x77 w
0000207a:	db 0x50 P
0000207b:	db 0xe8 
0000207c:	db 0x42 B
0000207d:	db 0x05 
0000207e:	db 0x83 
0000207f:	db 0xc4 
00002080:	db 0x08 
00002081:	db 0x80 
00002082:	db 0x26 &
00002083:	db 0xb4 
00002084:	db 0x77 w
00002085:	db 0xfe 
00002086:	db 0x66 f
00002087:	db 0xc7 
00002088:	db 0x06 
00002089:	db 0xb6 
0000208a:	db 0x77 w
0000208b:	db 0x50 P
0000208c:	db 0x41 A
0000208d:	db 0x4d M
0000208e:	db 0x53 S
0000208f:	db 0x66 f
00002090:	db 0xff 
00002091:	db 0x06 
00002092:	db 0xba 
00002093:	db 0x77 w
00002094:	db 0xa1 
00002095:	db 0x10 
00002096:	db 0x7e ~
00002097:	db 0x2b +
00002098:	db 0xd2 
00002099:	db 0x3b ;
0000209a:	db 0x16 
0000209b:	db 0xbc 
0000209c:	db 0x77 w
0000209d:	db 0x77 w
0000209e:	db 0x11 
0000209f:	db 0x72 r
000020a0:	db 0x06 
000020a1:	db 0x3b ;
000020a2:	db 0x06 
000020a3:	db 0xba 
000020a4:	db 0x77 w
000020a5:	db 0x77 w
000020a6:	db 0x09 
000020a7:	db 0x66 f
000020a8:	db 0xc7 
000020a9:	db 0x06 
000020aa:	db 0xba 
000020ab:	db 0x77 w
000020ac:	db 0x00 
000020ad:	db 0x00 
000020ae:	db 0x00 
000020af:	db 0x00 
000020b0:	db 0xc7 
000020b1:	db 0x06 
000020b2:	db 0xbe 
000020b3:	db 0x77 w
000020b4:	db 0x14 
000020b5:	db 0x00 
000020b6:	db 0x89 
000020b7:	db 0x16 
000020b8:	db 0xc0 
000020b9:	db 0x77 w
000020ba:	db 0xa1 
000020bb:	db 0xbc 
000020bc:	db 0x77 w
000020bd:	db 0x0b 
000020be:	db 0x06 
000020bf:	db 0xba 
000020c0:	db 0x77 w
000020c1:	db 0x75 u
000020c2:	db 0x2d -
000020c3:	db 0xf6 
000020c4:	db 0x06 
000020c5:	db 0x0e 
000020c6:	db 0x75 u
000020c7:	db 0x04 
000020c8:	db 0x75 u
000020c9:	db 0x26 &
000020ca:	db 0xff 
000020cb:	db 0x06 
000020cc:	db 0xac 
000020cd:	db 0x65 e
000020ce:	db 0x83 
000020cf:	db 0x3e >
000020d0:	db 0xac 
000020d1:	db 0x65 e
000020d2:	db 0x03 
000020d3:	db 0x7c |
000020d4:	db 0x1b 
000020d5:	db 0xfa 
000020d6:	db 0x06 
000020d7:	db 0x8d 
000020d8:	db 0x36 6
000020d9:	db 0xb0 
000020da:	db 0x77 w
000020db:	db 0x33 3
000020dc:	db 0xc0 
000020dd:	db 0x8e 
000020de:	db 0xc0 
000020df:	db 0xbf 
000020e0:	db 0x54 T
000020e1:	db 0x00 
000020e2:	db 0x8b 
000020e3:	db 0x04 
000020e4:	db 0x26 &
000020e5:	db 0x89 
000020e6:	db 0x05 
000020e7:	db 0x8b 
000020e8:	db 0x44 D
000020e9:	db 0x02 
000020ea:	db 0x26 &
000020eb:	db 0x89 
000020ec:	db 0x45 E
000020ed:	db 0x02 
000020ee:	db 0x07 
000020ef:	db 0xfb 
000020f0:	db 0x32 2
000020f1:	db 0xc0 
000020f2:	db 0x5e ^
000020f3:	db 0x5f _
000020f4:	db 0xc9 
000020f5:	db 0xc3 
000020f6:	db 0x55 U
000020f7:	db 0x8b 
000020f8:	db 0xec 
000020f9:	db 0x57 W
000020fa:	db 0x56 V
000020fb:	db 0x9c 
000020fc:	db 0x66 f
000020fd:	db 0x60 `
000020fe:	db 0xfa 
000020ff:	db 0x2e .
00002100:	db 0x89 
00002101:	db 0x3e >
00002102:	db 0xc6 
00002103:	db 0x77 w
00002104:	db 0x2e .
00002105:	db 0x8d 
00002106:	db 0x3e >
00002107:	db 0xb6 
00002108:	db 0x77 w
00002109:	db 0x66 f
0000210a:	db 0x2e .
0000210b:	db 0x89 
0000210c:	db 0x05 
0000210d:	db 0x2e .
0000210e:	db 0x8d 
0000210f:	db 0x3e >
00002110:	db 0xba 
00002111:	db 0x77 w
00002112:	db 0x66 f
00002113:	db 0x2e .
00002114:	db 0x89 
00002115:	db 0x1d 
00002116:	db 0x2e .
00002117:	db 0x8d 
00002118:	db 0x3e >
00002119:	db 0xbe 
0000211a:	db 0x77 w
0000211b:	db 0x66 f
0000211c:	db 0x2e .
0000211d:	db 0x89 
0000211e:	db 0x0d 
0000211f:	db 0x2e .
00002120:	db 0x8d 
00002121:	db 0x3e >
00002122:	db 0xc2 
00002123:	db 0x77 w
00002124:	db 0x66 f
00002125:	db 0x2e .
00002126:	db 0x89 
00002127:	db 0x15 
00002128:	db 0x8b 
00002129:	db 0x46 F
0000212a:	db 0x08 
0000212b:	db 0x2e .
0000212c:	db 0xa3 
0000212d:	db 0xb4 
0000212e:	db 0x77 w
0000212f:	db 0x2e .
00002130:	db 0x89 
00002131:	db 0x36 6
00002132:	db 0xc8 
00002133:	db 0x77 w
00002134:	db 0x8b 
00002135:	db 0x76 v
00002136:	db 0x02 
00002137:	db 0x2e .
00002138:	db 0x8c 
00002139:	db 0x1e 
0000213a:	db 0xca 
0000213b:	db 0x77 w
0000213c:	db 0x2e .
0000213d:	db 0x8c 
0000213e:	db 0x06 
0000213f:	db 0xcc 
00002140:	db 0x77 w
00002141:	db 0x2e .
00002142:	db 0x8c 
00002143:	db 0x16 
00002144:	db 0xce 
00002145:	db 0x77 w
00002146:	db 0x8c 
00002147:	db 0xd0 
00002148:	db 0x8c 
00002149:	db 0xcb 
0000214a:	db 0x3b ;
0000214b:	db 0xc3 
0000214c:	db 0x74 t
0000214d:	db 0x11 
0000214e:	db 0x2e .
0000214f:	db 0x89 
00002150:	db 0x26 &
00002151:	db 0x12 
00002152:	db 0x7e ~
00002153:	db 0x2e .
00002154:	db 0x8c 
00002155:	db 0x16 
00002156:	db 0x14 
00002157:	db 0x7e ~
00002158:	db 0x8c 
00002159:	db 0xc8 
0000215a:	db 0x8e 
0000215b:	db 0xd0 
0000215c:	db 0xbc 
0000215d:	db 0xfc 
0000215e:	db 0xa7 
0000215f:	db 0x1e 
00002160:	db 0x06 
00002161:	db 0x8c 
00002162:	db 0xc8 
00002163:	db 0x8e 
00002164:	db 0xd8 
00002165:	db 0x8e 
00002166:	db 0xc0 
00002167:	db 0x56 V
00002168:	db 0x83 
00002169:	db 0xfe 
0000216a:	db 0x15 
0000216b:	db 0x74 t
0000216c:	db 0x0b 
0000216d:	db 0x83 
0000216e:	db 0xfe 
0000216f:	db 0x13 
00002170:	db 0x75 u
00002171:	db 0xfe 
00002172:	db 0xe8 
00002173:	db 0xd1 
00002174:	db 0xfa 
00002175:	db 0xe9 
00002176:	db 0x03 
00002177:	db 0x00 
00002178:	db 0xe8 
00002179:	db 0xc1 
0000217a:	db 0xfe 
0000217b:	db 0x5e ^
0000217c:	db 0x07 
0000217d:	db 0x1f 
0000217e:	db 0xfa 
0000217f:	db 0xbb 
00002180:	db 0xfc 
00002181:	db 0xa7 
00002182:	db 0x3b ;
00002183:	db 0xdc 
00002184:	db 0x75 u
00002185:	db 0x0a 
00002186:	db 0x2e .
00002187:	db 0x8e 
00002188:	db 0x16 
00002189:	db 0x14 
0000218a:	db 0x7e ~
0000218b:	db 0x2e .
0000218c:	db 0x8b 
0000218d:	db 0x26 &
0000218e:	db 0x12 
0000218f:	db 0x7e ~
00002190:	db 0x85 
00002191:	db 0xc0 
00002192:	db 0x75 u
00002193:	db 0x48 H
00002194:	db 0x66 f
00002195:	db 0x61 a
00002196:	db 0x9d 
00002197:	db 0x2e .
00002198:	db 0xa1 
00002199:	db 0xb4 
0000219a:	db 0x77 w
0000219b:	db 0x89 
0000219c:	db 0x46 F
0000219d:	db 0x08 
0000219e:	db 0xc9 
0000219f:	db 0x2e .
000021a0:	db 0x8d 
000021a1:	db 0x3e >
000021a2:	db 0xb6 
000021a3:	db 0x77 w
000021a4:	db 0x66 f
000021a5:	db 0x2e .
000021a6:	db 0x8b 
000021a7:	db 0x05 
000021a8:	db 0x2e .
000021a9:	db 0x8d 
000021aa:	db 0x3e >
000021ab:	db 0xba 
000021ac:	db 0x77 w
000021ad:	db 0x66 f
000021ae:	db 0x2e .
000021af:	db 0x8b 
000021b0:	db 0x1d 
000021b1:	db 0x2e .
000021b2:	db 0x8d 
000021b3:	db 0x3e >
000021b4:	db 0xbe 
000021b5:	db 0x77 w
000021b6:	db 0x66 f
000021b7:	db 0x2e .
000021b8:	db 0x8b 
000021b9:	db 0x0d 
000021ba:	db 0x2e .
000021bb:	db 0x8d 
000021bc:	db 0x3e >
000021bd:	db 0xc2 
000021be:	db 0x77 w
000021bf:	db 0x66 f
000021c0:	db 0x2e .
000021c1:	db 0x8b 
000021c2:	db 0x15 
000021c3:	db 0x2e .
000021c4:	db 0x8b 
000021c5:	db 0x3e >
000021c6:	db 0xc6 
000021c7:	db 0x77 w
000021c8:	db 0x2e .
000021c9:	db 0x8b 
000021ca:	db 0x36 6
000021cb:	db 0xc8 
000021cc:	db 0x77 w
000021cd:	db 0x2e .
000021ce:	db 0x8e 
000021cf:	db 0x06 
000021d0:	db 0xcc 
000021d1:	db 0x77 w
000021d2:	db 0x2e .
000021d3:	db 0x8e 
000021d4:	db 0x1e 
000021d5:	db 0xca 
000021d6:	db 0x77 w
000021d7:	db 0xfb 
000021d8:	db 0x83 
000021d9:	db 0xc4 
000021da:	db 0x02 
000021db:	db 0xcf 
000021dc:	db 0xfb 
000021dd:	db 0x83 
000021de:	db 0xfe 
000021df:	db 0x15 
000021e0:	db 0x74 t
000021e1:	db 0x11 
000021e2:	db 0x83 
000021e3:	db 0xfe 
000021e4:	db 0x13 
000021e5:	db 0x75 u
000021e6:	db 0xfe 
000021e7:	db 0x66 f
000021e8:	db 0x61 a
000021e9:	db 0x9d 
000021ea:	db 0xc9 
000021eb:	db 0x83 
000021ec:	db 0xc4 
000021ed:	db 0x02 
000021ee:	db 0x2e .
000021ef:	db 0xff 
000021f0:	db 0x2e .
000021f1:	db 0xac 
000021f2:	db 0x77 w
000021f3:	db 0x66 f
000021f4:	db 0x61 a
000021f5:	db 0x9d 
000021f6:	db 0xc9 
000021f7:	db 0x83 
000021f8:	db 0xc4 
000021f9:	db 0x02 
000021fa:	db 0x2e .
000021fb:	db 0xff 
000021fc:	db 0x2e .
000021fd:	db 0xb0 
000021fe:	db 0x77 w
000021ff:	db 0xeb 
00002200:	db 0x00 
00002201:	db 0x5e ^
00002202:	db 0x5f _
00002203:	db 0xc9 
00002204:	db 0xc3 
00002205:	db 0x00 
00002206:	db 0x55 U
00002207:	db 0x8b 
00002208:	db 0xec 
00002209:	db 0xc9 
0000220a:	db 0x6a j
0000220b:	db 0x13 
0000220c:	db 0xe9 
0000220d:	db 0xe7 
0000220e:	db 0xfe 
0000220f:	db 0xc9 
00002210:	db 0xc3 
00002211:	db 0x00 
00002212:	db 0x55 U
00002213:	db 0x8b 
00002214:	db 0xec 
00002215:	db 0x9c 
00002216:	db 0x3d =
00002217:	db 0x20 
00002218:	db 0xe8 
00002219:	db 0x74 t
0000221a:	db 0x07 
0000221b:	db 0x9d 
0000221c:	db 0xc9 
0000221d:	db 0x2e .
0000221e:	db 0xff 
0000221f:	db 0x2e .
00002220:	db 0xb0 
00002221:	db 0x77 w
00002222:	db 0xc9 
00002223:	db 0x6a j
00002224:	db 0x15 
00002225:	db 0xe9 
00002226:	db 0xce 
00002227:	db 0xfe 
00002228:	db 0xc9 
00002229:	db 0xc3 

---STARTPROC---
sub_222a:
0000222a:	enter 0x4, 0x0
0000222e:	push di
0000222f:	push si
00002230:	push 0x4
00002232:	lea ax, [bp-0x4]
00002235:	push ax
00002236:	push 0x4c
00002238:	push 0x0
0000223a:	call 0x25de
0000223d:	add sp, 0x8
00002240:	mov ax, 0x2306
00002243:	mov cx, cs
00002245:	cmp ax, [bp-0x4]
00002248:	jnz 0x2264
0000224a:	cmp cx, [bp-0x2]
0000224d:	jnz 0x2264
0000224f:	push word 0x74d0
00002252:	call 0x412
00002255:	pop bx
00002256:	push word 0x720c
00002259:	call 0x25e
0000225c:	pop bx
0000225d:	call 0x452
lbl_2260:
00002260:	mov al, 0x1
00002262:	jmp 0x22c2
lbl_2264:
00002264:	call 0x1e2a
00002267:	or al, al
00002269:	jz 0x22c2
0000226b:	cli
0000226c:	push es
0000226d:	xor ax, ax
0000226f:	mov es, ax
00002271:	mov si, 0x4c
00002274:	lea di, [0x77ac]
00002278:	mov ax, [es:si]
0000227b:	mov [di], ax
0000227d:	mov ax, [es:si+0x2]
00002281:	mov [di+0x2], ax
00002284:	lea ax, [0x2306]
00002288:	mov [es:si], ax
0000228b:	mov [es:si+0x2], cs
0000228f:	mov si, 0x54
00002292:	lea di, [0x77b0]
00002296:	mov ax, [es:si]
00002299:	mov [di], ax
0000229b:	mov ax, [es:si+0x2]
0000229f:	mov [di+0x2], ax
000022a2:	lea ax, [0x2312]
000022a6:	mov [es:si], ax
000022a9:	mov [es:si+0x2], cs
000022ad:	cmp word [0x7e10], 0x1
000022b2:	jg 0x22be
000022b4:	mov ax, cs
000022b6:	shr ax, 0x6
000022b9:	mov [es:0x413], ax
lbl_22be:
000022be:	pop es
000022bf:	sti
000022c0:	jmp 0x2260
lbl_22c2:
000022c2:	pop si
000022c3:	pop di
000022c4:	leave
000022c5:	ret
---ENDPROC---  ; sub_222a ; length = 156 bytes ; 5 calls out


---STARTPROC---
sub_22c6:
000022c6:	enter 0xa, 0x0
000022ca:	push di
000022cb:	push si
000022cc:	mov si, [bp+0x4]
000022cf:	mov word [bp-0x2], 0x0
000022d4:	mov bx, [bp+0x8]
000022d7:	mov eax, [bx]
000022da:	mov bx, [bp+0x6]
000022dd:	add eax, [bx]
000022e0:	mov [bp-0xa], eax
000022e4:	jae 0x22eb
000022e6:	mov word [bp-0x2], 0x1
lbl_22eb:
000022eb:	mov edx, eax
000022ee:	shr edx, 0x10
000022f2:	mov ax, [bp-0x2]
000022f5:	cwd
000022f6:	mov bx, [bp+0x8]
000022f9:	mov cx, [bx+0x4]
000022fc:	mov di, [bx+0x6]
000022ff:	mov bx, [bp+0x6]
00002302:	add cx, [bx+0x4]
00002305:	adc di, [bx+0x6]
00002308:	add cx, ax
0000230a:	adc di, dx
0000230c:	mov [bp-0x6], cx
0000230f:	mov [bp-0x4], di
00002312:	push si
00002313:	mov di, si
00002315:	lea si, [bp-0xa]
00002318:	push ds
00002319:	pop es
0000231a:	movsd
0000231c:	movsd
0000231e:	pop si
0000231f:	mov ax, si
00002321:	pop si
00002322:	pop di
00002323:	leave
00002324:	ret
---ENDPROC---  ; sub_22c6 ; length = 95 bytes ; 0 calls out

00002325:	db 0x00 

---STARTPROC---
sub_2326:
00002326:	enter 0x8, 0x0
0000232a:	push si
0000232b:	mov si, [bp+0x4]
0000232e:	mov dword [bp-0x4], 0x0
00002336:	mov eax, [bp+0x8]
0000233a:	mov [bp-0x8], eax
0000233e:	lea ax, [bp-0x8]
00002341:	push ax
00002342:	push word [bp+0x6]
00002345:	push si
00002346:	call 0x22c6
00002349:	add sp, 0x6
0000234c:	mov ax, si
0000234e:	pop si
0000234f:	leave
00002350:	ret
---ENDPROC---  ; sub_2326 ; length = 43 bytes ; 1 calls out

00002351:	db 0x00 

---STARTPROC---
sub_2352:
00002352:	enter 0x8, 0x0
00002356:	push di
00002357:	push si
00002358:	push dword [bp+0x4]
0000235c:	lea ax, [bp-0x8]
0000235f:	push ax
00002360:	call 0x22c6
00002363:	add sp, 0x6
00002366:	mov si, ax
00002368:	push ds
00002369:	pop es
0000236a:	mov di, [bp+0x4]
0000236d:	movsd
0000236f:	movsd
00002371:	mov ax, [bp+0x4]
00002374:	pop si
00002375:	pop di
00002376:	leave
00002377:	ret
---ENDPROC---  ; sub_2352 ; length = 38 bytes ; 1 calls out


---STARTPROC---
sub_2378:
00002378:	enter 0xa, 0x0
0000237c:	push di
0000237d:	push si
0000237e:	mov si, [bp+0x4]
00002381:	mov word [bp-0x2], 0x0
00002386:	mov bx, [bp+0x6]
00002389:	mov eax, [bx]
0000238c:	mov bx, [bp+0x8]
0000238f:	sub eax, [bx]
00002392:	mov [bp-0xa], eax
00002396:	jae 0x239d
00002398:	mov word [bp-0x2], 0x1
lbl_239d:
0000239d:	mov edx, eax
000023a0:	shr edx, 0x10
000023a4:	mov ax, [bp-0x2]
000023a7:	cwd
000023a8:	mov bx, [bp+0x6]
000023ab:	mov cx, [bx+0x4]
000023ae:	mov di, [bx+0x6]
000023b1:	mov bx, [bp+0x8]
000023b4:	sub cx, [bx+0x4]
000023b7:	sbb di, [bx+0x6]
000023ba:	sub cx, ax
000023bc:	sbb di, dx
000023be:	mov [bp-0x6], cx
000023c1:	mov [bp-0x4], di
000023c4:	push si
000023c5:	mov di, si
000023c7:	lea si, [bp-0xa]
000023ca:	push ds
000023cb:	pop es
000023cc:	movsd
000023ce:	movsd
000023d0:	pop si
000023d1:	mov ax, si
000023d3:	pop si
000023d4:	pop di
000023d5:	leave
000023d6:	ret
---ENDPROC---  ; sub_2378 ; length = 95 bytes ; 0 calls out

000023d7:	db 0x00 

---STARTPROC---
sub_23d8:
000023d8:	enter 0x8, 0x0
000023dc:	push si
000023dd:	mov si, [bp+0x4]
000023e0:	mov dword [bp-0x4], 0x0
000023e8:	mov eax, [bp+0x8]
000023ec:	mov [bp-0x8], eax
000023f0:	lea ax, [bp-0x8]
000023f3:	push ax
000023f4:	push word [bp+0x6]
000023f7:	push si
000023f8:	call 0x2378
000023fb:	add sp, 0x6
000023fe:	mov ax, si
00002400:	pop si
00002401:	leave
00002402:	ret
---ENDPROC---  ; sub_23d8 ; length = 43 bytes ; 1 calls out

00002403:	db 0x00 
00002404:	db 0xc8 
00002405:	db 0x08 
00002406:	db 0x00 
00002407:	db 0x00 
00002408:	db 0x57 W
00002409:	db 0x56 V
0000240a:	db 0x66 f
0000240b:	db 0xff 
0000240c:	db 0x76 v
0000240d:	db 0x04 
0000240e:	db 0x8d 
0000240f:	db 0x46 F
00002410:	db 0xf8 
00002411:	db 0x50 P
00002412:	db 0xe8 
00002413:	db 0x63 c
00002414:	db 0xff 
00002415:	db 0x83 
00002416:	db 0xc4 
00002417:	db 0x06 
00002418:	db 0x8b 
00002419:	db 0xf0 
0000241a:	db 0x1e 
0000241b:	db 0x07 
0000241c:	db 0x8b 
0000241d:	db 0x7e ~
0000241e:	db 0x04 
0000241f:	db 0x66 f
00002420:	db 0xa5 
00002421:	db 0x66 f
00002422:	db 0xa5 
00002423:	db 0x8b 
00002424:	db 0x46 F
00002425:	db 0x04 
00002426:	db 0x5e ^
00002427:	db 0x5f _
00002428:	db 0xc9 
00002429:	db 0xc3 

---STARTPROC---
sub_242a:
0000242a:	enter 0x8, 0x0
0000242e:	push di
0000242f:	push si
00002430:	mov ax, [bp+0x6]
00002433:	lea di, [bp-0x8]
00002436:	mov si, ax
00002438:	push ss
00002439:	pop es
0000243a:	movsd
0000243c:	movsd
0000243e:	mov si, [bp+0x8]
00002441:	jmp 0x2463
lbl_2443:
00002443:	mov eax, [bp-0x8]
00002447:	shr eax, 0x1
0000244a:	mov [bp-0x8], eax
0000244e:	test byte [bp-0x4], 0x1
00002452:	jz 0x2458
00002454:	or byte [bp-0x5], 0x80
lbl_2458:
00002458:	mov eax, [bp-0x4]
0000245c:	shr eax, 0x1
0000245f:	mov [bp-0x4], eax
lbl_2463:
00002463:	mov ax, si
00002465:	dec si
00002466:	or ax, ax
00002468:	jnz 0x2443
0000246a:	mov dx, [bp+0x4]
0000246d:	mov di, dx
0000246f:	lea si, [bp-0x8]
00002472:	push ds
00002473:	pop es
00002474:	movsd
00002476:	movsd
00002478:	mov ax, dx
0000247a:	pop si
0000247b:	pop di
0000247c:	leave
0000247d:	ret
---ENDPROC---  ; sub_242a ; length = 84 bytes ; 0 calls out


---STARTPROC---
sub_247e:
0000247e:	enter 0x8, 0x0
00002482:	push di
00002483:	push si
00002484:	mov ax, [bp+0x6]
00002487:	lea di, [bp-0x8]
0000248a:	mov si, ax
0000248c:	push ss
0000248d:	pop es
0000248e:	movsd
00002490:	movsd
00002492:	mov si, [bp+0x8]
00002495:	jmp 0x24a2
lbl_2497:
00002497:	lea ax, [bp-0x8]
0000249a:	push ax
0000249b:	push ax
0000249c:	call 0x2352
0000249f:	add sp, 0x4
lbl_24a2:
000024a2:	mov ax, si
000024a4:	dec si
000024a5:	or ax, ax
000024a7:	jnz 0x2497
000024a9:	mov dx, [bp+0x4]
000024ac:	mov di, dx
000024ae:	lea si, [bp-0x8]
000024b1:	push ds
000024b2:	pop es
000024b3:	movsd
000024b5:	movsd
000024b7:	mov ax, dx
000024b9:	pop si
000024ba:	pop di
000024bb:	leave
000024bc:	ret
---ENDPROC---  ; sub_247e ; length = 63 bytes ; 1 calls out

000024bd:	db 0x00 
000024be:	db 0xc8 
000024bf:	db 0x08 
000024c0:	db 0x00 
000024c1:	db 0x00 
000024c2:	db 0x66 f
000024c3:	db 0x2b +
000024c4:	db 0xc0 
000024c5:	db 0x66 f
000024c6:	db 0x89 
000024c7:	db 0x46 F
000024c8:	db 0xfc 
000024c9:	db 0xc7 
000024ca:	db 0x46 F
000024cb:	db 0xf8 
000024cc:	db 0x01 
000024cd:	db 0x00 
000024ce:	db 0x89 
000024cf:	db 0x46 F
000024d0:	db 0xfa 
000024d1:	db 0x8d 
000024d2:	db 0x46 F
000024d3:	db 0xf8 
000024d4:	db 0x50 P
000024d5:	db 0xff 
000024d6:	db 0x76 v
000024d7:	db 0x04 
000024d8:	db 0xe8 
000024d9:	db 0x77 w
000024da:	db 0xfe 
000024db:	db 0xc9 
000024dc:	db 0xc3 
000024dd:	db 0x00 

---STARTPROC---
sub_24de:
000024de:	push bp
000024df:	mov bp, sp
000024e1:	push di
000024e2:	mov bx, [bp+0x4]
000024e5:	mov di, [bp+0x6]
000024e8:	mov eax, [bx+0x4]
000024ec:	cmp [di+0x4], eax
000024f0:	jnz 0x24ff
000024f2:	mov eax, [bx]
000024f5:	cmp [di], eax
000024f8:	jnz 0x24ff
000024fa:	mov al, 0x1
000024fc:	pop di
000024fd:	leave
000024fe:	ret
---ENDPROC---  ; sub_24de ; length = 33 bytes ; 0 calls out

lbl_24ff:
000024ff:	xor al, al
00002501:	pop di
00002502:	leave
00002503:	ret

---STARTPROC---
sub_2504:
00002504:	push bp
00002505:	mov bp, sp
00002507:	push di
00002508:	mov bx, [bp+0x4]
0000250b:	mov di, [bp+0x6]
0000250e:	mov eax, [bx+0x4]
00002512:	mov dx, [bx+0x6]
00002515:	cmp [di+0x4], eax
00002519:	jb 0x2532
0000251b:	cmp [di+0x4], ax
0000251e:	jnz 0x252d
00002520:	cmp [di+0x6], dx
00002523:	jnz 0x252d
00002525:	mov eax, [bx]
00002528:	cmp [di], eax
0000252b:	jb 0x2532
lbl_252d:
0000252d:	xor al, al
0000252f:	pop di
00002530:	leave
00002531:	ret
---ENDPROC---  ; sub_2504 ; length = 46 bytes ; 0 calls out

lbl_2532:
00002532:	mov al, 0x1
00002534:	pop di
00002535:	leave
00002536:	ret
00002537:	db 0x00 

---STARTPROC---
sub_2538:
00002538:	push bp
00002539:	mov bp, sp
0000253b:	push di
0000253c:	mov bx, [bp+0x4]
0000253f:	mov di, [bp+0x6]
00002542:	mov eax, [bx+0x4]
00002546:	mov dx, [bx+0x6]
00002549:	cmp [di+0x4], eax
0000254d:	ja 0x2566
0000254f:	cmp [di+0x4], ax
00002552:	jnz 0x2561
00002554:	cmp [di+0x6], dx
00002557:	jnz 0x2561
00002559:	mov eax, [bx]
0000255c:	cmp [di], eax
0000255f:	ja 0x2566
lbl_2561:
00002561:	xor al, al
00002563:	pop di
00002564:	leave
00002565:	ret
---ENDPROC---  ; sub_2538 ; length = 46 bytes ; 0 calls out

lbl_2566:
00002566:	mov al, 0x1
00002568:	pop di
00002569:	leave
0000256a:	ret
0000256b:	db 0x00 

---STARTPROC---
sub_256c:
0000256c:	push bp
0000256d:	mov bp, sp
0000256f:	push di
00002570:	push si
00002571:	mov di, [bp+0x6]
00002574:	mov si, [bp+0x4]
00002577:	push di
00002578:	push si
00002579:	call 0x2504
0000257c:	add sp, 0x4
0000257f:	or al, al
00002581:	jnz 0x258f
00002583:	push di
00002584:	push si
00002585:	call 0x24de
00002588:	add sp, 0x4
0000258b:	or al, al
0000258d:	jz 0x2591
lbl_258f:
0000258f:	mov al, 0x1
lbl_2591:
00002591:	pop si
00002592:	pop di
00002593:	leave
00002594:	ret
---ENDPROC---  ; sub_256c ; length = 41 bytes ; 2 calls out

00002595:	db 0x00 

---STARTPROC---
sub_2596:
00002596:	push bp
00002597:	mov bp, sp
00002599:	push di
0000259a:	push si
0000259b:	mov di, [bp+0x6]
0000259e:	mov si, [bp+0x4]
000025a1:	push di
000025a2:	push si
000025a3:	call 0x2538
000025a6:	add sp, 0x4
000025a9:	or al, al
000025ab:	jnz 0x25b9
000025ad:	push di
000025ae:	push si
000025af:	call 0x24de
000025b2:	add sp, 0x4
000025b5:	or al, al
000025b7:	jz 0x25bb
lbl_25b9:
000025b9:	mov al, 0x1
lbl_25bb:
000025bb:	pop si
000025bc:	pop di
000025bd:	leave
000025be:	ret
---ENDPROC---  ; sub_2596 ; length = 41 bytes ; 2 calls out

000025bf:	db 0x00 

---STARTPROC---
sub_25c0:
000025c0:	push bp
000025c1:	mov bp, sp
000025c3:	push di
000025c4:	push si
000025c5:	push es
000025c6:	mov si, [bp+0x4]
000025ca:	mov es, [bp+0x6]
000025ce:	mov di, [bp+0x8]
000025d2:	mov cx, [bp+0xa]
000025d6:	cld
000025d7:	rep movsb
000025d9:	pop es
000025da:	pop si
000025db:	pop di
000025dc:	leave
000025dd:	ret
---ENDPROC---  ; sub_25c0 ; length = 30 bytes ; 0 calls out


---STARTPROC---
sub_25de:
000025de:	push bp
000025df:	mov bp, sp
000025e1:	push di
000025e2:	push si
000025e3:	push ds
000025e4:	push es
000025e5:	mov ax, ds
000025e7:	mov es, ax
000025e9:	mov di, [bp+0x8]
000025ed:	mov si, [bp+0x6]
000025f1:	mov cx, [bp+0xa]
000025f5:	mov ds, [bp+0x4]
000025f9:	cld
000025fa:	rep movsb
000025fc:	pop es
000025fd:	pop ds
000025fe:	pop si
000025ff:	pop di
00002600:	leave
00002601:	ret
---ENDPROC---  ; sub_25de ; length = 36 bytes ; 0 calls out


---STARTPROC---
sub_2602:
00002602:	push bp
00002603:	mov bp, sp
00002605:	push word [bp+0x6]
00002608:	push 0x0
0000260a:	push word [bp+0x4]
0000260d:	call 0x5c
00002610:	leave
00002611:	ret
---ENDPROC---  ; sub_2602 ; length = 16 bytes ; 1 calls out


---STARTPROC---
sub_2612:
00002612:	push bp
00002613:	mov bp, sp
00002615:	sub dx, dx
00002617:	mov ax, [bp+0x4]
0000261a:	mov cl, 0x4
0000261c:	call 0xbc
0000261f:	add ax, [bp+0x6]
00002622:	adc dx, 0x0
00002625:	leave
00002626:	ret
---ENDPROC---  ; sub_2612 ; length = 21 bytes ; 1 calls out

00002627:	db 0x00 

---STARTPROC---
sub_2628:
00002628:	enter 0x2c, 0x0
0000262c:	push di
0000262d:	push si
0000262e:	push 0x0
00002630:	push 0x1
00002632:	push dword [bp+0x6]
00002636:	push word [bp+0x4]
00002639:	lea ax, [bp-0x14]
0000263c:	push ax
0000263d:	call 0x2326
00002640:	add sp, 0x8
00002643:	push ax
00002644:	lea ax, [bp-0x1c]
00002647:	push ax
00002648:	call 0x23d8
0000264b:	add sp, 0x8
0000264e:	lea di, [bp-0xc]
00002651:	mov si, ax
00002653:	push ss
00002654:	pop es
00002655:	movsd
00002657:	movsd
00002659:	push word [bp+0xc]
0000265c:	lea ax, [bp-0xc]
0000265f:	push ax
00002660:	call 0x2596
00002663:	add sp, 0x4
00002666:	or al, al
00002668:	jz 0x266f
0000266a:	lea ax, [bp-0xc]
0000266d:	jmp 0x2672
lbl_266f:
0000266f:	mov ax, [bp+0xc]
lbl_2672:
00002672:	mov [bp-0x2], ax
00002675:	lea di, [bp-0x24]
00002678:	mov si, ax
0000267a:	push ss
0000267b:	pop es
0000267c:	movsd
0000267e:	movsd
00002680:	push word [bp+0xa]
00002683:	push word [bp+0x4]
00002686:	call 0x256c
00002689:	add sp, 0x4
0000268c:	or al, al
0000268e:	jz 0x2695
00002690:	mov ax, [bp+0x4]
00002693:	jmp 0x2698
lbl_2695:
00002695:	mov ax, [bp+0xa]
lbl_2698:
00002698:	mov [bp-0x4], ax
0000269b:	lea di, [bp-0x2c]
0000269e:	mov si, ax
000026a0:	push ss
000026a1:	pop es
000026a2:	movsd
000026a4:	movsd
000026a6:	lea ax, [bp-0x24]
000026a9:	push ax
000026aa:	lea ax, [bp-0x2c]
000026ad:	push ax
000026ae:	call 0x2504
000026b1:	add sp, 0x4
000026b4:	or al, al
000026b6:	jnz 0x26e6
000026b8:	lea ax, [bp-0x2c]
000026bb:	push ax
000026bc:	push 0x0
000026be:	push 0x1
000026c0:	lea ax, [bp-0x24]
000026c3:	push ax
000026c4:	lea ax, [bp-0x1c]
000026c7:	push ax
000026c8:	call 0x2326
000026cb:	add sp, 0x8
000026ce:	push ax
000026cf:	lea ax, [bp-0x14]
000026d2:	push ax
000026d3:	call 0x2378
000026d6:	mov bx, ax
000026d8:	add sp, 0x6
000026db:	mov ax, [bx+0x2]
000026de:	or ax, [bx]
000026e0:	jz 0x26e6
000026e2:	mov al, 0x1
000026e4:	jmp 0x26e8
lbl_26e6:
000026e6:	xor al, al
lbl_26e8:
000026e8:	pop si
000026e9:	pop di
000026ea:	leave
000026eb:	ret
---ENDPROC---  ; sub_2628 ; length = 196 bytes ; 7 calls out


---STARTPROC---
sub_26ec:
000026ec:	push bp
000026ed:	mov bp, sp
000026ef:	push 0x23
000026f1:	call 0x22e
000026f4:	pop bx
000026f5:	mov ax, [bp+0x4]
000026f8:	cwd
000026f9:	push dx
000026fa:	push ax
000026fb:	call 0x27c
000026fe:	mov sp, bp
lbl_2700:
00002700:	jmp 0x2700

---STARTPROC---
sub_2702:
00002702:	enter 0x8, 0x0
00002706:	push di
00002707:	push si
00002708:	mov dword [bp-0x6], 0xffffffff
00002710:	xor si, si
00002712:	mov di, [bp+0x4]
00002715:	jmp 0x2768
lbl_2717:
00002717:	mov bx, si
00002719:	add bx, di
0000271b:	sub ah, ah
0000271d:	mov al, [bx]
0000271f:	sub dx, dx
00002721:	xor [bp-0x6], ax
00002724:	xor [bp-0x4], dx
00002727:	mov [bp-0x8], si
0000272a:	mov si, dx
0000272c:	jmp 0x275f
lbl_272e:
0000272e:	test byte [bp-0x6], 0x1
00002732:	jz 0x274e
00002734:	mov eax, [bp-0x6]
00002738:	xor eax, 0x248ef9be
0000273e:	shr eax, 0x1
00002741:	mov edx, eax
00002744:	shr edx, 0x10
00002748:	not ax
0000274a:	not dx
0000274c:	jmp 0x2758
lbl_274e:
0000274e:	mov ax, [bp-0x6]
00002751:	mov dx, [bp-0x4]
00002754:	shr dx, 0x1
00002756:	rcr ax, 0x1
lbl_2758:
00002758:	mov [bp-0x6], ax
0000275b:	mov [bp-0x4], dx
0000275e:	inc si
lbl_275f:
0000275f:	cmp si, 0x8
00002762:	jl 0x272e
00002764:	mov si, [bp-0x8]
00002767:	inc si
lbl_2768:
00002768:	cmp [bp+0x6], si
0000276b:	jg 0x2717
0000276d:	mov ax, [bp-0x6]
00002770:	mov dx, [bp-0x4]
00002773:	not ax
00002775:	not dx
00002777:	pop si
00002778:	pop di
00002779:	leave
0000277a:	ret
---ENDPROC---  ; sub_2702 ; length = 121 bytes ; 0 calls out

0000277b:	db 0x00 

---STARTPROC---
sub_277c:
0000277c:	enter 0x2, 0x0
00002780:	mov ax, [bp+0x4]
00002783:	dec ax
00002784:	jz 0x2791
00002786:	dec ax
00002787:	jz 0x27aa
00002789:	dec ax
0000278a:	jz 0x27c2
lbl_278c:
0000278c:	mov ax, 0x11
0000278f:	leave
00002790:	ret
---ENDPROC---  ; sub_277c ; length = 21 bytes ; 0 calls out

lbl_2791:
00002791:	push word [bp+0x8]
00002794:	push 0x1
00002796:	call 0x2896
00002799:	pop bx
0000279a:	push ax
0000279b:	push word [bp+0x6]
0000279e:	call 0x4000
000027a1:	add sp, 0x6
000027a4:	or al, al
000027a6:	jz 0x27d7
000027a8:	jmp 0x278c
lbl_27aa:
000027aa:	push word [bp+0x8]
000027ad:	push 0x2
000027af:	call 0x2896
000027b2:	pop bx
000027b3:	shl ax, 0x3
000027b6:	push ax
000027b7:	push word [bp+0x6]
000027ba:	call 0x491c
000027bd:	add sp, 0x6
000027c0:	jmp 0x27d7
lbl_27c2:
000027c2:	push 0x3
000027c4:	call 0x2896
000027c7:	pop bx
000027c8:	shl ax, 0x3
000027cb:	cwd
000027cc:	push dx
000027cd:	push ax
000027ce:	push word [bp+0x6]
000027d1:	push word [bp+0x8]
000027d4:	call 0x5f58
lbl_27d7:
000027d7:	xor ax, ax
000027d9:	leave
000027da:	ret
000027db:	db 0x00 

---STARTPROC---
sub_27dc:
000027dc:	push bp
000027dd:	mov bp, sp
000027df:	push si
000027e0:	mov ax, [bp+0x4]
000027e3:	dec ax
000027e4:	jz 0x27f6
000027e6:	dec ax
000027e7:	jz 0x2803
000027e9:	dec ax
000027ea:	jz 0x2810
000027ec:	push word 0xc4
000027ef:	call 0x26ec
000027f2:	pop bx
000027f3:	pop si
000027f4:	leave
000027f5:	ret
---ENDPROC---  ; sub_27dc ; length = 26 bytes ; 1 calls out

lbl_27f6:
000027f6:	mov si, [bp+0x6]
000027f9:	push word [bp+0x8]
000027fc:	push si
000027fd:	push si
000027fe:	call 0x4184
00002801:	jmp 0x281b
lbl_2803:
00002803:	mov si, [bp+0x6]
00002806:	push word [bp+0x8]
00002809:	push si
0000280a:	push si
0000280b:	call 0x4e60
0000280e:	jmp 0x281b
lbl_2810:
00002810:	mov si, [bp+0x6]
00002813:	push si
00002814:	push si
00002815:	push word [bp+0x8]
00002818:	call 0x60ea
lbl_281b:
0000281b:	add sp, 0x6
0000281e:	pop si
0000281f:	leave
00002820:	ret
00002821:	db 0x00 

---STARTPROC---
sub_2822:
00002822:	push bp
00002823:	mov bp, sp
00002825:	push si
00002826:	mov ax, [bp+0x4]
00002829:	dec ax
0000282a:	jz 0x283c
0000282c:	dec ax
0000282d:	jz 0x2849
0000282f:	dec ax
00002830:	jz 0x2856
00002832:	push word 0x109
00002835:	call 0x26ec
00002838:	pop bx
00002839:	pop si
0000283a:	leave
0000283b:	ret
---ENDPROC---  ; sub_2822 ; length = 26 bytes ; 1 calls out

lbl_283c:
0000283c:	mov si, [bp+0x6]
0000283f:	push word [bp+0x8]
00002842:	push si
00002843:	push si
00002844:	call 0x4208
00002847:	jmp 0x2861
lbl_2849:
00002849:	mov si, [bp+0x6]
0000284c:	push word [bp+0x8]
0000284f:	push si
00002850:	push si
00002851:	call 0x528a
00002854:	jmp 0x2861
lbl_2856:
00002856:	mov si, [bp+0x6]
00002859:	push si
0000285a:	push si
0000285b:	push word [bp+0x8]
0000285e:	call 0x62d0
lbl_2861:
00002861:	add sp, 0x6
00002864:	pop si
00002865:	leave
00002866:	ret
00002867:	db 0x00 

---STARTPROC---
sub_2868:
00002868:	push bp
00002869:	mov bp, sp
0000286b:	push di
0000286c:	push si
0000286d:	xor bx, bx
0000286f:	mov di, [bp+0x4]
lbl_2872:
00002872:	imul si, bx, 0xa
00002875:	cmp word [si+0x65ae], 0x0
0000287a:	jz 0x2890
0000287c:	imul si, bx, 0xa
0000287f:	cmp [si+0x65ae], di
00002883:	jz 0x2888
00002885:	inc bx
00002886:	jmp 0x2872
lbl_2888:
00002888:	imul ax, bx, 0xa
0000288b:	add ax, 0x65ae
0000288e:	jmp 0x2892
lbl_2890:
00002890:	xor ax, ax
lbl_2892:
00002892:	pop si
00002893:	pop di
00002894:	leave
00002895:	ret
---ENDPROC---  ; sub_2868 ; length = 46 bytes ; 0 calls out


---STARTPROC---
sub_2896:
00002896:	push bp
00002897:	mov bp, sp
00002899:	push word [bp+0x4]
0000289c:	call 0x2868
0000289f:	pop bx
000028a0:	mov bx, ax
000028a2:	mov ax, [bx+0x6]
000028a5:	leave
000028a6:	ret
---ENDPROC---  ; sub_2896 ; length = 17 bytes ; 1 calls out

000028a7:	db 0x00 

---STARTPROC---
sub_28a8:
000028a8:	push bp
000028a9:	mov bp, sp
000028ab:	push word [bp+0x4]
000028ae:	call 0x2868
000028b1:	pop bx
000028b2:	mov bx, ax
000028b4:	mov ax, [bx+0x8]
000028b7:	leave
000028b8:	ret
---ENDPROC---  ; sub_28a8 ; length = 17 bytes ; 1 calls out

000028b9:	db 0x00 

---STARTPROC---
sub_28ba:
000028ba:	mov ax, 0x1
000028bd:	ret
---ENDPROC---  ; sub_28ba ; length = 4 bytes ; 0 calls out


---STARTPROC---
sub_28be:
000028be:	push bp
000028bf:	mov bp, sp
000028c1:	push si
000028c2:	mov bx, [bp+0x4]
000028c5:	inc bx
000028c6:	imul si, bx, 0xe
000028c9:	cmp word [si+0x65d6], 0x0
000028ce:	jz 0x28d5
000028d0:	mov ax, bx
000028d2:	pop si
000028d3:	leave
000028d4:	ret
---ENDPROC---  ; sub_28be ; length = 23 bytes ; 0 calls out

lbl_28d5:
000028d5:	xor ax, ax
000028d7:	pop si
000028d8:	leave
000028d9:	ret

---STARTPROC---
sub_28da:
000028da:	enter 0x2, 0x0
000028de:	push di
000028df:	push si
000028e0:	mov di, [bp+0x4]
000028e3:	mov word [bp-0x2], 0x0
000028e8:	or di, di
000028ea:	jnz 0x28f1
lbl_28ec:
000028ec:	mov ax, 0x11
000028ef:	jmp 0x2937
lbl_28f1:
000028f1:	push di
000028f2:	call 0x2a1e
000028f5:	pop bx
000028f6:	mov si, ax
000028f8:	mov di, [bp+0x8]
000028fb:	jmp 0x2930
lbl_28fd:
000028fd:	push di
000028fe:	push word [bp+0x6]
00002901:	push si
00002902:	call 0x277c
00002905:	add sp, 0x6
00002908:	sub ax, 0x11
0000290b:	jz 0x28ec
0000290d:	dec ax
0000290e:	jnz 0x2915
00002910:	mov word [bp-0x2], 0x12
lbl_2915:
00002915:	push si
00002916:	call 0x2896
00002919:	pop bx
0000291a:	add [bp+0x6], ax
0000291d:	push si
0000291e:	call 0x28a8
00002921:	pop bx
00002922:	add di, ax
00002924:	push si
00002925:	push word [bp+0x4]
00002928:	call 0x2a54
0000292b:	add sp, 0x4
0000292e:	mov si, ax
lbl_2930:
00002930:	or si, ax
00002932:	jnz 0x28fd
00002934:	mov ax, [bp-0x2]
lbl_2937:
00002937:	pop si
00002938:	pop di
00002939:	leave
0000293a:	ret
---ENDPROC---  ; sub_28da ; length = 97 bytes ; 5 calls out

0000293b:	db 0x00 

---STARTPROC---
sub_293c:
0000293c:	push bp
0000293d:	mov bp, sp
0000293f:	push di
00002940:	push si
00002941:	push word [bp+0x4]
00002944:	call 0x2a1e
00002947:	pop bx
00002948:	mov si, ax
0000294a:	push ax
0000294b:	call 0x2896
0000294e:	pop bx
0000294f:	mov di, ax
00002951:	jmp 0x295a
lbl_2953:
00002953:	push ax
00002954:	call 0x2896
00002957:	pop bx
00002958:	add di, ax
lbl_295a:
0000295a:	push si
0000295b:	push word [bp+0x4]
0000295e:	call 0x2a54
00002961:	add sp, 0x4
00002964:	mov si, ax
00002966:	or si, ax
00002968:	jnz 0x2953
0000296a:	mov ax, di
0000296c:	pop si
0000296d:	pop di
0000296e:	leave
0000296f:	ret
---ENDPROC---  ; sub_293c ; length = 52 bytes ; 4 calls out

00002970:	db 0x55 U
00002971:	db 0x8b 
00002972:	db 0xec 
00002973:	db 0x6b k
00002974:	db 0x5e ^
00002975:	db 0x04 
00002976:	db 0x0e 
00002977:	db 0x8b 
00002978:	db 0x87 
00002979:	db 0xde 
0000297a:	db 0x65 e
0000297b:	db 0xc9 
0000297c:	db 0xc3 
0000297d:	db 0x00 
0000297e:	db 0x55 U
0000297f:	db 0x8b 
00002980:	db 0xec 
00002981:	db 0x57 W
00002982:	db 0x33 3
00002983:	db 0xff 
00002984:	db 0x6b k
00002985:	db 0x5e ^
00002986:	db 0x04 
00002987:	db 0x07 
00002988:	db 0x03 
00002989:	db 0xdf 
0000298a:	db 0x03 
0000298b:	db 0xdb 
0000298c:	db 0x47 G
0000298d:	db 0x8b 
0000298e:	db 0x9f 
0000298f:	db 0xde 
00002990:	db 0x65 e
00002991:	db 0x0b 
00002992:	db 0xdb 
00002993:	db 0x74 t
00002994:	db 0x14 
00002995:	db 0x3b ;
00002996:	db 0x5e ^
00002997:	db 0x06 
00002998:	db 0x75 u
00002999:	db 0xea 
0000299a:	db 0x6b k
0000299b:	db 0x5e ^
0000299c:	db 0x04 
0000299d:	db 0x07 
0000299e:	db 0x03 
0000299f:	db 0xdf 
000029a0:	db 0x03 
000029a1:	db 0xdb 
000029a2:	db 0x8b 
000029a3:	db 0x87 
000029a4:	db 0xde 
000029a5:	db 0x65 e
000029a6:	db 0x5f _
000029a7:	db 0xc9 
000029a8:	db 0xc3 
000029a9:	db 0x33 3
000029aa:	db 0xc0 
000029ab:	db 0x5f _
000029ac:	db 0xc9 
000029ad:	db 0xc3 

---STARTPROC---
sub_29ae:
000029ae:	push bp
000029af:	mov bp, sp
000029b1:	push di
000029b2:	push si
000029b3:	push word [bp+0x4]
000029b6:	call 0x2a1e
000029b9:	pop bx
000029ba:	mov si, ax
000029bc:	push ax
000029bd:	call 0x28a8
000029c0:	pop bx
000029c1:	mov di, ax
000029c3:	jmp 0x29cc
lbl_29c5:
000029c5:	push ax
000029c6:	call 0x28a8
000029c9:	pop bx
000029ca:	add di, ax
lbl_29cc:
000029cc:	push si
000029cd:	push word [bp+0x4]
000029d0:	call 0x2a54
000029d3:	add sp, 0x4
000029d6:	mov si, ax
000029d8:	or si, ax
000029da:	jnz 0x29c5
000029dc:	mov ax, di
000029de:	pop si
000029df:	pop di
000029e0:	leave
000029e1:	ret
---ENDPROC---  ; sub_29ae ; length = 52 bytes ; 4 calls out

000029e2:	db 0x55 U
000029e3:	db 0x8b 
000029e4:	db 0xec 
000029e5:	db 0x57 W
000029e6:	db 0x56 V
000029e7:	db 0x33 3
000029e8:	db 0xff 
000029e9:	db 0xe8 
000029ea:	db 0xce 
000029eb:	db 0xfe 
000029ec:	db 0xeb 
000029ed:	db 0x23 #
000029ee:	db 0xff 
000029ef:	db 0x76 v
000029f0:	db 0x04 
000029f1:	db 0x56 V
000029f2:	db 0xe8 
000029f3:	db 0xcd 
000029f4:	db 0x00 
000029f5:	db 0x83 
000029f6:	db 0xc4 
000029f7:	db 0x04 
000029f8:	db 0x0a 
000029f9:	db 0xc0 
000029fa:	db 0x74 t
000029fb:	db 0x10 
000029fc:	db 0x56 V
000029fd:	db 0xe8 
000029fe:	db 0x3c <
000029ff:	db 0xff 
00002a00:	db 0x5b [
00002a01:	db 0x3b ;
00002a02:	db 0xc7 
00002a03:	db 0x7c |
00002a04:	db 0x07 
00002a05:	db 0x56 V
00002a06:	db 0xe8 
00002a07:	db 0x33 3
00002a08:	db 0xff 
00002a09:	db 0x5b [
00002a0a:	db 0x8b 
00002a0b:	db 0xf8 
00002a0c:	db 0x56 V
00002a0d:	db 0xe8 
00002a0e:	db 0xae 
00002a0f:	db 0xfe 
00002a10:	db 0x5b [
00002a11:	db 0x8b 
00002a12:	db 0xf0 
00002a13:	db 0x0b 
00002a14:	db 0xf0 
00002a15:	db 0x75 u
00002a16:	db 0xd7 
00002a17:	db 0x8b 
00002a18:	db 0xc7 
00002a19:	db 0x5e ^
00002a1a:	db 0x5f _
00002a1b:	db 0xc9 
00002a1c:	db 0xc3 
00002a1d:	db 0x00 

---STARTPROC---
sub_2a1e:
00002a1e:	push bp
00002a1f:	mov bp, sp
00002a21:	imul bx, [bp+0x4], 0xe
00002a25:	mov ax, [bx+0x65d6]
00002a29:	leave
00002a2a:	ret
---ENDPROC---  ; sub_2a1e ; length = 13 bytes ; 0 calls out

00002a2b:	db 0x00 

---STARTPROC---
sub_2a2c:
00002a2c:	push bp
00002a2d:	mov bp, sp
00002a2f:	push di
00002a30:	push si
00002a31:	xor bx, bx
lbl_2a33:
00002a33:	imul si, [bp+0x4], 0x7
00002a37:	add si, bx
00002a39:	add si, si
00002a3b:	inc bx
00002a3c:	mov di, [si+0x65d6]
00002a40:	or di, di
00002a42:	jnz 0x2a33
00002a44:	imul si, [bp+0x4], 0x7
00002a48:	add si, bx
00002a4a:	add si, si
00002a4c:	mov ax, [si+0x65d2]
00002a50:	pop si
00002a51:	pop di
00002a52:	leave
00002a53:	ret
---ENDPROC---  ; sub_2a2c ; length = 40 bytes ; 0 calls out


---STARTPROC---
sub_2a54:
00002a54:	push bp
00002a55:	mov bp, sp
00002a57:	push di
00002a58:	xor di, di
lbl_2a5a:
00002a5a:	imul bx, [bp+0x4], 0x7
00002a5e:	add bx, di
00002a60:	add bx, bx
00002a62:	inc di
00002a63:	mov bx, [bx+0x65d6]
00002a67:	or bx, bx
00002a69:	jz 0x2a7f
00002a6b:	cmp bx, [bp+0x6]
00002a6e:	jnz 0x2a5a
00002a70:	imul bx, [bp+0x4], 0x7
00002a74:	add bx, di
00002a76:	add bx, bx
00002a78:	mov ax, [bx+0x65d6]
00002a7c:	pop di
00002a7d:	leave
00002a7e:	ret
---ENDPROC---  ; sub_2a54 ; length = 43 bytes ; 0 calls out

lbl_2a7f:
00002a7f:	xor ax, ax
00002a81:	pop di
00002a82:	leave
00002a83:	ret

---STARTPROC---
sub_2a84:
00002a84:	push bp
00002a85:	mov bp, sp
00002a87:	push di
00002a88:	mov di, 0x1
00002a8b:	mov ax, [bp+0x6]
00002a8e:	imul bx, [bp+0x4], 0xe
00002a92:	cmp [bx+0x65d6], ax
00002a96:	jz 0x2abd
lbl_2a98:
00002a98:	imul bx, [bp+0x4], 0x7
00002a9c:	add bx, di
00002a9e:	add bx, bx
00002aa0:	inc di
00002aa1:	mov bx, [bx+0x65d6]
00002aa5:	or bx, bx
00002aa7:	jz 0x2abd
00002aa9:	cmp bx, [bp+0x6]
00002aac:	jnz 0x2a98
00002aae:	imul bx, [bp+0x4], 0x7
00002ab2:	add bx, di
00002ab4:	add bx, bx
00002ab6:	mov ax, [bx+0x65d2]
00002aba:	pop di
00002abb:	leave
00002abc:	ret
---ENDPROC---  ; sub_2a84 ; length = 57 bytes ; 0 calls out

lbl_2abd:
00002abd:	xor ax, ax
00002abf:	pop di
00002ac0:	leave
00002ac1:	ret
00002ac2:	db 0x55 U
00002ac3:	db 0x8b 
00002ac4:	db 0xec 
00002ac5:	db 0x57 W
00002ac6:	db 0x56 V
00002ac7:	db 0x8b 
00002ac8:	db 0x7e ~
00002ac9:	db 0x04 
00002aca:	db 0x57 W
00002acb:	db 0xe8 
00002acc:	db 0xa2 
00002acd:	db 0xfe 
00002ace:	db 0x5b [
00002acf:	db 0x8b 
00002ad0:	db 0xf0 
00002ad1:	db 0x0b 
00002ad2:	db 0xf0 
00002ad3:	db 0x74 t
00002ad4:	db 0x13 
00002ad5:	db 0x39 9
00002ad6:	db 0x76 v
00002ad7:	db 0x06 
00002ad8:	db 0x74 t
00002ad9:	db 0x0a 
00002ada:	db 0x56 V
00002adb:	db 0x57 W
00002adc:	db 0xe8 
00002add:	db 0x9f 
00002ade:	db 0xfe 
00002adf:	db 0x83 
00002ae0:	db 0xc4 
00002ae1:	db 0x04 
00002ae2:	db 0xeb 
00002ae3:	db 0xeb 
00002ae4:	db 0xb0 
00002ae5:	db 0x01 
00002ae6:	db 0xeb 
00002ae7:	db 0x02 
00002ae8:	db 0x32 2
00002ae9:	db 0xc0 
00002aea:	db 0x5e ^
00002aeb:	db 0x5f _
00002aec:	db 0xc9 
00002aed:	db 0xc3 
00002aee:	db 0x55 U
00002aef:	db 0x8b 
00002af0:	db 0xec 
00002af1:	db 0x57 W
00002af2:	db 0x56 V
00002af3:	db 0x33 3
00002af4:	db 0xdb 
00002af5:	db 0x8b 
00002af6:	db 0x7e ~
00002af7:	db 0x04 
00002af8:	db 0x6b k
00002af9:	db 0xf3 
00002afa:	db 0x06 
00002afb:	db 0x83 
00002afc:	db 0xbc 
00002afd:	db 0x62 b
00002afe:	db 0x66 f
00002aff:	db 0x00 
00002b00:	db 0x74 t
00002b01:	db 0x14 
00002b02:	db 0x6b k
00002b03:	db 0xf3 
00002b04:	db 0x06 
00002b05:	db 0x39 9
00002b06:	db 0xbc 
00002b07:	db 0x62 b
00002b08:	db 0x66 f
00002b09:	db 0x74 t
00002b0a:	db 0x03 
00002b0b:	db 0x43 C
00002b0c:	db 0xeb 
00002b0d:	db 0xea 
00002b0e:	db 0x6b k
00002b0f:	db 0xc3 
00002b10:	db 0x06 
00002b11:	db 0x05 
00002b12:	db 0x62 b
00002b13:	db 0x66 f
00002b14:	db 0xeb 
00002b15:	db 0x02 
00002b16:	db 0x33 3
00002b17:	db 0xc0 
00002b18:	db 0x5e ^
00002b19:	db 0x5f _
00002b1a:	db 0xc9 
00002b1b:	db 0xc3 

---STARTPROC---
sub_2b1c:
00002b1c:	mov byte [0x666e], 0x1
00002b21:	mov ax, 0x9060
00002b24:	ret
---ENDPROC---  ; sub_2b1c ; length = 9 bytes ; 0 calls out

00002b25:	db 0x00 

---STARTPROC---
sub_2b26:
00002b26:	push word 0x7cc
00002b29:	push word 0x9060
00002b2c:	call 0x2602
00002b2f:	add sp, 0x4
00002b32:	mov byte [0x666e], 0x0
00002b37:	ret
---ENDPROC---  ; sub_2b26 ; length = 18 bytes ; 1 calls out


---STARTPROC---
sub_2b38:
00002b38:	enter 0xc, 0x0
00002b3c:	push di
00002b3d:	push si
00002b3e:	mov si, [bp+0xa]
00002b41:	mov ax, [si+0x2]
00002b44:	dec ax
00002b45:	jz 0x2b50
00002b47:	push word 0x536
00002b4a:	call 0x26ec
00002b4d:	pop bx
00002b4e:	jmp 0x2ba9
lbl_2b50:
00002b50:	lea di, [si+0x4]
00002b53:	lea ax, [si+0x3d9]
00002b57:	mov [bp-0x4], ax
00002b5a:	sub eax, eax
00002b5d:	mov [bp-0xc], eax
00002b61:	mov [bp-0x8], eax
00002b65:	push word [si]
00002b67:	call 0x2a1e
00002b6a:	pop bx
00002b6b:	mov [bp-0x2], ax
lbl_2b6e:
00002b6e:	mov si, ax
00002b70:	or si, ax
00002b72:	jz 0x2ba9
00002b74:	push si
00002b75:	push word [bp-0x4]
00002b78:	push di
00002b79:	push 0x0
00002b7b:	lea ax, [bp-0xc]
00002b7e:	push ax
00002b7f:	push dword [bp+0x6]
00002b83:	push word [bp+0x4]
00002b86:	call 0x3542
00002b89:	add sp, 0x10
00002b8c:	push si
00002b8d:	call 0x28a8
00002b90:	pop bx
00002b91:	add di, ax
00002b93:	push si
00002b94:	call 0x28a8
00002b97:	pop bx
00002b98:	add [bp-0x4], ax
00002b9b:	push si
00002b9c:	mov bx, [bp+0xa]
00002b9f:	push word [bx]
00002ba1:	call 0x2a54
00002ba4:	add sp, 0x4
00002ba7:	jmp 0x2b6e
lbl_2ba9:
00002ba9:	pop si
00002baa:	pop di
00002bab:	leave
00002bac:	ret
---ENDPROC---  ; sub_2b38 ; length = 117 bytes ; 6 calls out

00002bad:	db 0x00 

---STARTPROC---
sub_2bae:
00002bae:	enter 0x6, 0x0
00002bb2:	push di
00002bb3:	push si
00002bb4:	mov si, [bp+0xc]
00002bb7:	mov di, [si]
00002bb9:	lea ax, [si+0x4]
00002bbc:	mov [bp-0x4], ax
00002bbf:	lea ax, [si+0x3d9]
00002bc3:	mov [bp-0x6], ax
00002bc6:	mov ax, [si+0x2]
00002bc9:	dec ax
00002bca:	jz 0x2bd5
00002bcc:	push word 0x5cf
00002bcf:	call 0x26ec
00002bd2:	pop bx
00002bd3:	jmp 0x2c20
lbl_2bd5:
00002bd5:	push di
00002bd6:	call 0x2a1e
00002bd9:	pop bx
00002bda:	mov si, ax
00002bdc:	mov [bp-0x2], di
00002bdf:	mov di, [bp-0x6]
lbl_2be2:
00002be2:	or si, ax
00002be4:	jz 0x2c20
00002be6:	push si
00002be7:	push di
00002be8:	push word [bp-0x4]
00002beb:	push 0x0
00002bed:	push word [bp+0x6]
00002bf0:	mov eax, [bp+0x8]
00002bf4:	shl eax, 0x9
00002bf8:	push eax
00002bfa:	push word [bp+0x4]
00002bfd:	call 0x3542
00002c00:	add sp, 0x10
00002c03:	push si
00002c04:	call 0x28a8
00002c07:	pop bx
00002c08:	add [bp-0x4], ax
00002c0b:	push si
00002c0c:	call 0x28a8
00002c0f:	pop bx
00002c10:	add di, ax
00002c12:	push si
00002c13:	push word [bp-0x2]
00002c16:	call 0x2a54
00002c19:	add sp, 0x4
00002c1c:	mov si, ax
00002c1e:	jmp 0x2be2
lbl_2c20:
00002c20:	pop si
00002c21:	pop di
00002c22:	leave
00002c23:	ret
---ENDPROC---  ; sub_2bae ; length = 118 bytes ; 6 calls out


---STARTPROC---
sub_2c24:
00002c24:	enter 0xc, 0x0
00002c28:	push di
00002c29:	push si
00002c2a:	mov si, [bp+0xa]
00002c2d:	mov ax, [si+0x2]
00002c30:	dec ax
00002c31:	jz 0x2c3c
00002c33:	push word 0x632
00002c36:	call 0x26ec
00002c39:	pop bx
00002c3a:	jmp 0x2ca6
lbl_2c3c:
00002c3c:	push word [si]
00002c3e:	call 0x29ae
00002c41:	pop bx
00002c42:	mov di, ax
00002c44:	add di, si
00002c46:	add di, 0x4
00002c49:	push word [si]
00002c4b:	call 0x29ae
00002c4e:	pop bx
00002c4f:	add ax, si
00002c51:	add ax, 0x3d9
00002c54:	mov [bp-0x4], ax
00002c57:	sub eax, eax
00002c5a:	mov [bp-0xc], eax
00002c5e:	mov [bp-0x8], eax
00002c62:	push word [si]
00002c64:	call 0x2a2c
00002c67:	pop bx
00002c68:	mov [bp-0x2], ax
lbl_2c6b:
00002c6b:	mov si, ax
00002c6d:	or si, ax
00002c6f:	jz 0x2ca6
00002c71:	push si
00002c72:	call 0x28a8
00002c75:	pop bx
00002c76:	sub di, ax
00002c78:	push si
00002c79:	push si
00002c7a:	call 0x28a8
00002c7d:	pop bx
00002c7e:	sub [bp-0x4], ax
00002c81:	push word [bp-0x4]
00002c84:	push di
00002c85:	push 0x0
00002c87:	lea ax, [bp-0xc]
00002c8a:	push ax
00002c8b:	push dword [bp+0x6]
00002c8f:	push word [bp+0x4]
00002c92:	call 0x355c
00002c95:	add sp, 0x10
00002c98:	push si
00002c99:	mov bx, [bp+0xa]
00002c9c:	push word [bx]
00002c9e:	call 0x2a84
00002ca1:	add sp, 0x4
00002ca4:	jmp 0x2c6b
lbl_2ca6:
00002ca6:	pop si
00002ca7:	pop di
00002ca8:	leave
00002ca9:	ret
---ENDPROC---  ; sub_2c24 ; length = 134 bytes ; 8 calls out

00002caa:	db 0xc8 
00002cab:	db 0x08 
00002cac:	db 0x00 
00002cad:	db 0x00 
00002cae:	db 0x57 W
00002caf:	db 0x56 V
00002cb0:	db 0x8b 
00002cb1:	db 0x76 v
00002cb2:	db 0x0c 
00002cb3:	db 0x8b 
00002cb4:	db 0x3c <
00002cb5:	db 0x8d 
00002cb6:	db 0x4c L
00002cb7:	db 0x04 
00002cb8:	db 0x8d 
00002cb9:	db 0x84 
00002cba:	db 0xd9 
00002cbb:	db 0x03 
00002cbc:	db 0x89 
00002cbd:	db 0x46 F
00002cbe:	db 0xfa 
00002cbf:	db 0x8b 
00002cc0:	db 0x44 D
00002cc1:	db 0x02 
00002cc2:	db 0x48 H
00002cc3:	db 0x74 t
00002cc4:	db 0x09 
00002cc5:	db 0x68 h
00002cc6:	db 0xb2 
00002cc7:	db 0x06 
00002cc8:	db 0xe8 
00002cc9:	db 0x21 !
00002cca:	db 0xfa 
00002ccb:	db 0x5b [
00002ccc:	db 0xeb 
00002ccd:	db 0x5f _
00002cce:	db 0x8b 
00002ccf:	db 0xf1 
00002cd0:	db 0x57 W
00002cd1:	db 0xe8 
00002cd2:	db 0xda 
00002cd3:	db 0xfc 
00002cd4:	db 0x5b [
00002cd5:	db 0x03 
00002cd6:	db 0xf0 
00002cd7:	db 0x57 W
00002cd8:	db 0xe8 
00002cd9:	db 0xd3 
00002cda:	db 0xfc 
00002cdb:	db 0x5b [
00002cdc:	db 0x01 
00002cdd:	db 0x46 F
00002cde:	db 0xfa 
00002cdf:	db 0x57 W
00002ce0:	db 0xe8 
00002ce1:	db 0x49 I
00002ce2:	db 0xfd 
00002ce3:	db 0x5b [
00002ce4:	db 0x89 
00002ce5:	db 0x7e ~
00002ce6:	db 0xf8 
00002ce7:	db 0x89 
00002ce8:	db 0x76 v
00002ce9:	db 0xfc 
00002cea:	db 0x8b 
00002ceb:	db 0xf0 
00002cec:	db 0x8b 
00002ced:	db 0x7e ~
00002cee:	db 0xfc 
00002cef:	db 0x0b 
00002cf0:	db 0xf0 
00002cf1:	db 0x74 t
00002cf2:	db 0x3a :
00002cf3:	db 0x56 V
00002cf4:	db 0xe8 
00002cf5:	db 0xb1 
00002cf6:	db 0xfb 
00002cf7:	db 0x5b [
00002cf8:	db 0x2b +
00002cf9:	db 0xf8 
00002cfa:	db 0x56 V
00002cfb:	db 0x56 V
00002cfc:	db 0xe8 
00002cfd:	db 0xa9 
00002cfe:	db 0xfb 
00002cff:	db 0x5b [
00002d00:	db 0x29 )
00002d01:	db 0x46 F
00002d02:	db 0xfa 
00002d03:	db 0xff 
00002d04:	db 0x76 v
00002d05:	db 0xfa 
00002d06:	db 0x57 W
00002d07:	db 0x6a j
00002d08:	db 0x00 
00002d09:	db 0xff 
00002d0a:	db 0x76 v
00002d0b:	db 0x06 
00002d0c:	db 0x66 f
00002d0d:	db 0x8b 
00002d0e:	db 0x46 F
00002d0f:	db 0x08 
00002d10:	db 0x66 f
00002d11:	db 0xc1 
00002d12:	db 0xe0 
00002d13:	db 0x09 
00002d14:	db 0x66 f
00002d15:	db 0x50 P
00002d16:	db 0xff 
00002d17:	db 0x76 v
00002d18:	db 0x04 
00002d19:	db 0xe8 
00002d1a:	db 0x40 @
00002d1b:	db 0x08 
00002d1c:	db 0x83 
00002d1d:	db 0xc4 
00002d1e:	db 0x10 
00002d1f:	db 0x56 V
00002d20:	db 0xff 
00002d21:	db 0x76 v
00002d22:	db 0xf8 
00002d23:	db 0xe8 
00002d24:	db 0x5e ^
00002d25:	db 0xfd 
00002d26:	db 0x83 
00002d27:	db 0xc4 
00002d28:	db 0x04 
00002d29:	db 0x8b 
00002d2a:	db 0xf0 
00002d2b:	db 0xeb 
00002d2c:	db 0xc2 
00002d2d:	db 0x5e ^
00002d2e:	db 0x5f _
00002d2f:	db 0xc9 
00002d30:	db 0xc3 
00002d31:	db 0x00 

---STARTPROC---
sub_2d32:
00002d32:	push bp
00002d33:	mov bp, sp
00002d35:	mov dx, [bp+0x4]
00002d38:	mov ax, dx
00002d3a:	mov cx, dx
00002d3c:	mov ah, al
00002d3e:	mov al, ch
00002d40:	leave
00002d41:	ret
---ENDPROC---  ; sub_2d32 ; length = 16 bytes ; 0 calls out


---STARTPROC---
sub_2d42:
00002d42:	enter 0x8, 0x0
00002d46:	push di
00002d47:	push si
00002d48:	mov al, [bp+0x6]
00002d4b:	sub ah, ah
00002d4d:	mov cl, [bp+0x4]
00002d50:	sub ch, ch
00002d52:	sub bx, bx
00002d54:	mov dx, cx
00002d56:	mov cl, 0x8
00002d58:	call 0xbc
00002d5b:	mov cx, ax
00002d5d:	mov bx, dx
00002d5f:	mov dx, [bp+0x6]
00002d62:	mov si, ax
00002d64:	mov cl, 0x8
00002d66:	mov ax, dx
00002d68:	shr ax, 0x8
00002d6b:	sub ah, ah
00002d6d:	sub dx, dx
00002d6f:	mov cx, dx
00002d71:	mov cl, 0x8
00002d73:	mov [bp-0x4], ax
00002d76:	mov [bp-0x2], dx
00002d79:	mov ax, [bp+0x4]
00002d7c:	mov dx, [bp+0x6]
00002d7f:	mov di, bx
00002d81:	call 0x192
00002d84:	sub ah, ah
00002d86:	mov [bp-0x6], ax
00002d89:	mov ax, si
00002d8b:	mov dx, di
00002d8d:	or dx, [bp-0x6]
00002d90:	or ax, [bp-0x4]
00002d93:	or dx, [bp-0x2]
00002d96:	pop si
00002d97:	pop di
00002d98:	leave
00002d99:	ret
---ENDPROC---  ; sub_2d42 ; length = 88 bytes ; 2 calls out


---STARTPROC---
sub_2d9a:
00002d9a:	enter 0x146, 0x0
00002d9e:	push di
00002d9f:	push si
00002da0:	mov si, [bp+0x6]
00002da3:	mov di, [bp+0x4]
00002da6:	cmp si, 0x40
00002da9:	jle 0x2de7
00002dab:	lea ax, [bp-0xf0]
00002daf:	push ax
00002db0:	call 0x3576
00002db3:	pop bx
00002db4:	mov ax, si
00002db6:	cwd
00002db7:	push dx
00002db8:	push si
00002db9:	push di
00002dba:	lea ax, [bp-0xf0]
00002dbe:	push ax
00002dbf:	call 0x35b2
00002dc2:	add sp, 0x8
00002dc5:	lea ax, [bp-0xf0]
00002dc9:	push ax
00002dca:	lea cx, [bp-0x16]
00002dcd:	push cx
00002dce:	call 0x36c2
00002dd1:	add sp, 0x4
00002dd4:	lea di, [bp-0x16]
00002dd7:	mov si, 0x14
00002dda:	push 0x56
00002ddc:	lea ax, [bp-0xf0]
00002de0:	push ax
00002de1:	call 0x2602
00002de4:	add sp, 0x4
lbl_2de7:
00002de7:	push 0x41
00002de9:	push 0x36
00002deb:	lea ax, [bp-0x58]
00002dee:	push ax
00002def:	call 0x5c
00002df2:	add sp, 0x6
00002df5:	push 0x41
00002df7:	push 0x5c
00002df9:	lea ax, [bp-0x9a]
00002dfd:	push ax
00002dfe:	call 0x5c
00002e01:	add sp, 0x6
00002e04:	mov word [bp-0x2], 0x0
00002e09:	mov [bp+0x4], di
00002e0c:	mov [bp+0x6], si
00002e0f:	mov si, [bp-0x2]
00002e12:	mov dx, [bp+0x6]
00002e15:	jmp 0x2e27
lbl_2e17:
00002e17:	mov bx, si
00002e19:	add bx, di
00002e1b:	mov al, [bx]
00002e1d:	xor [bp+si-0x58], al
00002e20:	mov al, [bx]
00002e22:	xor [bp+si-0x9a], al
00002e26:	inc si
lbl_2e27:
00002e27:	cmp si, dx
00002e29:	jl 0x2e17
00002e2b:	mov si, [bp+0xc]
00002e2e:	lea ax, [bp-0x146]
00002e32:	push ax
00002e33:	call 0x3576
00002e36:	pop bx
00002e37:	push 0x0
00002e39:	push 0x40
00002e3b:	lea ax, [bp-0x58]
00002e3e:	push ax
00002e3f:	lea cx, [bp-0x146]
00002e43:	push cx
00002e44:	call 0x35b2
00002e47:	add sp, 0x8
00002e4a:	mov ax, [bp+0xa]
00002e4d:	cwd
00002e4e:	push dx
00002e4f:	push ax
00002e50:	push word [bp+0x8]
00002e53:	lea ax, [bp-0x146]
00002e57:	push ax
00002e58:	call 0x35b2
00002e5b:	add sp, 0x8
00002e5e:	lea ax, [bp-0x146]
00002e62:	push ax
00002e63:	push si
00002e64:	call 0x36c2
00002e67:	add sp, 0x4
00002e6a:	lea ax, [bp-0x146]
00002e6e:	push ax
00002e6f:	call 0x3576
00002e72:	pop bx
00002e73:	push 0x0
00002e75:	push 0x40
00002e77:	lea ax, [bp-0x9a]
00002e7b:	push ax
00002e7c:	lea cx, [bp-0x146]
00002e80:	push cx
00002e81:	call 0x35b2
00002e84:	add sp, 0x8
00002e87:	push 0x0
00002e89:	push 0x14
00002e8b:	push si
00002e8c:	lea ax, [bp-0x146]
00002e90:	push ax
00002e91:	call 0x35b2
00002e94:	add sp, 0x8
00002e97:	lea ax, [bp-0x146]
00002e9b:	push ax
00002e9c:	push si
00002e9d:	call 0x36c2
00002ea0:	add sp, 0x4
00002ea3:	push 0x41
00002ea5:	lea ax, [bp-0x58]
00002ea8:	push ax
00002ea9:	call 0x2602
00002eac:	add sp, 0x4
00002eaf:	push 0x41
00002eb1:	lea ax, [bp-0x9a]
00002eb5:	push ax
00002eb6:	call 0x2602
00002eb9:	add sp, 0x4
00002ebc:	push 0x14
00002ebe:	lea ax, [bp-0x16]
00002ec1:	push ax
00002ec2:	call 0x2602
00002ec5:	add sp, 0x4
00002ec8:	push 0x56
00002eca:	lea ax, [bp-0x146]
00002ece:	push ax
00002ecf:	call 0x2602
00002ed2:	add sp, 0x4
00002ed5:	pop si
00002ed6:	pop di
00002ed7:	leave
00002ed8:	ret
---ENDPROC---  ; sub_2d9a ; length = 319 bytes ; 18 calls out

00002ed9:	db 0x00 

---STARTPROC---
sub_2eda:
00002eda:	enter 0xb0, 0x0
00002ede:	push di
00002edf:	push si
00002ee0:	mov si, [bp+0xa]
00002ee3:	push 0x4
00002ee5:	push 0x0
00002ee7:	lea ax, [bp-0x8]
00002eea:	push ax
00002eeb:	call 0x5c
00002eee:	add sp, 0x6
00002ef1:	mov al, [bp+0x10]
00002ef4:	mov [bp-0x5], al
00002ef7:	push si
00002ef8:	push word [bp+0x8]
00002efb:	lea ax, [bp-0xb0]
00002eff:	push ax
00002f00:	call 0x30
00002f03:	add sp, 0x6
00002f06:	push 0x4
00002f08:	lea ax, [bp-0x8]
00002f0b:	push ax
00002f0c:	lea ax, [bp+si-0xb0]
00002f10:	push ax
00002f11:	call 0x30
00002f14:	add sp, 0x6
00002f17:	lea ax, [bp-0x1c]
00002f1a:	push ax
00002f1b:	lea cx, [si+0x4]
00002f1e:	push cx
00002f1f:	lea cx, [bp-0xb0]
00002f23:	push cx
00002f24:	push dword [bp+0x4]
00002f28:	call 0x2d9a
00002f2b:	add sp, 0xa
00002f2e:	push 0x14
00002f30:	lea ax, [bp-0x1c]
00002f33:	push ax
00002f34:	push word [bp+0xe]
00002f37:	call 0x30
00002f3a:	add sp, 0x6
00002f3d:	mov word [bp-0x4], 0x1
00002f42:	jmp 0x2f7d
lbl_2f44:
00002f44:	lea ax, [bp-0x30]
00002f47:	push ax
00002f48:	push 0x14
00002f4a:	lea ax, [bp-0x1c]
00002f4d:	push ax
00002f4e:	push dword [bp+0x4]
00002f52:	call 0x2d9a
00002f55:	add sp, 0xa
00002f58:	mov word [bp-0x2], 0x0
00002f5d:	mov si, [bp-0x2]
00002f60:	mov di, [bp+0xe]
00002f63:	jmp 0x2f75
lbl_2f65:
00002f65:	mov al, [bp+si-0x30]
00002f68:	mov bx, si
00002f6a:	add bx, di
00002f6c:	xor [bx], al
00002f6e:	mov al, [bp+si-0x30]
00002f71:	mov [bp+si-0x1c], al
00002f74:	inc si
lbl_2f75:
00002f75:	cmp si, 0x14
00002f78:	jl 0x2f65
00002f7a:	inc word [bp-0x4]
lbl_2f7d:
00002f7d:	mov ax, [bp+0xc]
00002f80:	cmp [bp-0x4], ax
00002f83:	jl 0x2f44
00002f85:	push 0x14
00002f87:	lea ax, [bp-0x1c]
00002f8a:	push ax
00002f8b:	call 0x2602
00002f8e:	add sp, 0x4
00002f91:	push 0x14
00002f93:	lea ax, [bp-0x30]
00002f96:	push ax
00002f97:	call 0x2602
00002f9a:	add sp, 0x4
00002f9d:	pop si
00002f9e:	pop di
00002f9f:	leave
00002fa0:	ret
---ENDPROC---  ; sub_2eda ; length = 199 bytes ; 8 calls out

00002fa1:	db 0x00 

---STARTPROC---
sub_2fa2:
00002fa2:	enter 0x1a, 0x0
00002fa6:	push di
00002fa7:	push si
00002fa8:	mov bx, [bp+0x10]
00002fab:	mov ax, bx
00002fad:	mov cx, 0x14
00002fb0:	cwd
00002fb1:	idiv cx
00002fb3:	or dx, dx
00002fb5:	jz 0x2fbf
00002fb7:	mov ax, bx
00002fb9:	cwd
00002fba:	idiv cx
00002fbc:	inc ax
00002fbd:	jmp 0x2fc4
lbl_2fbf:
00002fbf:	mov ax, bx
00002fc1:	cwd
00002fc2:	idiv cx
lbl_2fc4:
00002fc4:	mov [bp-0x4], ax
00002fc7:	dec ax
00002fc8:	neg ax
00002fca:	imul ax, ax, 0x14
00002fcd:	add ax, bx
00002fcf:	mov [bp-0x6], ax
00002fd2:	mov si, 0x1
00002fd5:	mov di, [bp+0xe]
00002fd8:	jmp 0x3001
lbl_2fda:
00002fda:	push si
00002fdb:	lea ax, [bp-0x1a]
00002fde:	push ax
00002fdf:	push dword [bp+0xa]
00002fe3:	push dword [bp+0x6]
00002fe7:	push word [bp+0x4]
00002fea:	call 0x2eda
00002fed:	add sp, 0xe
00002ff0:	push 0x14
00002ff2:	lea ax, [bp-0x1a]
00002ff5:	push ax
00002ff6:	push di
00002ff7:	call 0x30
00002ffa:	add sp, 0x6
00002ffd:	add di, 0x14
00003000:	inc si
lbl_3001:
00003001:	cmp [bp-0x4], si
00003004:	jg 0x2fda
00003006:	mov [bp-0x2], si
00003009:	push si
0000300a:	lea ax, [bp-0x1a]
0000300d:	push ax
0000300e:	push dword [bp+0xa]
00003012:	push dword [bp+0x6]
00003016:	push word [bp+0x4]
00003019:	call 0x2eda
0000301c:	add sp, 0xe
0000301f:	push word [bp-0x6]
00003022:	lea ax, [bp-0x1a]
00003025:	push ax
00003026:	push di
00003027:	call 0x30
0000302a:	add sp, 0x6
0000302d:	push 0x14
0000302f:	lea ax, [bp-0x1a]
00003032:	push ax
00003033:	call 0x2602
00003036:	add sp, 0x4
00003039:	pop si
0000303a:	pop di
0000303b:	leave
0000303c:	ret
---ENDPROC---  ; sub_2fa2 ; length = 155 bytes ; 5 calls out

0000303d:	db 0x00 

---STARTPROC---
sub_303e:
0000303e:	push bp
0000303f:	mov bp, sp
00003041:	push si
00003042:	mov bx, [bp+0x6]
00003045:	mov si, [bp+0x4]
00003048:	push word [bx+si]
0000304a:	call 0x2d32
0000304d:	pop bx
0000304e:	pop si
0000304f:	leave
00003050:	ret
---ENDPROC---  ; sub_303e ; length = 19 bytes ; 1 calls out

00003051:	db 0x00 

---STARTPROC---
sub_3052:
00003052:	push bp
00003053:	mov bp, sp
00003055:	push si
00003056:	mov bx, [bp+0x6]
00003059:	mov si, [bp+0x4]
0000305c:	push dword [bx+si]
0000305f:	call 0x2d42
00003062:	add sp, 0x4
00003065:	pop si
00003066:	leave
00003067:	ret
---ENDPROC---  ; sub_3052 ; length = 22 bytes ; 1 calls out


---STARTPROC---
sub_3068:
00003068:	enter 0x8, 0x0
0000306c:	push di
0000306d:	push si
0000306e:	mov bx, [bp+0x6]
00003071:	mov si, [bp+0x4]
00003074:	push dword [bx+si]
00003077:	call 0x2d42
0000307a:	add sp, 0x4
0000307d:	mov [bp-0x4], ax
00003080:	mov [bp-0x2], dx
00003083:	add si, [bp+0x6]
00003086:	push dword [si+0x4]
0000308a:	call 0x2d42
0000308d:	add sp, 0x4
00003090:	mov [bp-0x8], ax
00003093:	mov [bp-0x6], dx
00003096:	mov ax, 0x982c
00003099:	mov di, ax
0000309b:	lea si, [bp-0x8]
0000309e:	push ds
0000309f:	pop es
000030a0:	movsd
000030a2:	movsd
000030a4:	pop si
000030a5:	pop di
000030a6:	leave
000030a7:	ret
---ENDPROC---  ; sub_3068 ; length = 64 bytes ; 2 calls out


---STARTPROC---
sub_30a8:
000030a8:	enter 0x18c, 0x0
000030ac:	push di
000030ad:	push si
000030ae:	cmp word [bp+0xc], 0x0
000030b2:	jz 0x30b9
000030b4:	mov si, [bp+0xc]
000030b7:	jmp 0x30c3
lbl_30b9:
000030b9:	call 0x2b1c
000030bc:	mov bx, [bp+0xa]
000030bf:	mov si, ax
000030c1:	mov [bx], ax
lbl_30c3:
000030c3:	push word 0xc0
000030c6:	lea ax, [bp-0xc4]
000030ca:	push ax
000030cb:	cmp byte [bp+0x4], 0x1
000030cf:	sbb ax, ax
000030d1:	and ax, 0x3e8
000030d4:	add ax, 0x3e8
000030d7:	push ax
000030d8:	push 0x40
000030da:	push word [bp+0x6]
000030dd:	mov bx, [bp+0x8]
000030e0:	push word [bx]
000030e2:	lea ax, [bx+0x4]
000030e5:	push ax
000030e6:	call 0x2fa2
000030e9:	add sp, 0xe
000030ec:	mov word [si+0x2], 0x1
000030f1:	call 0x28ba
000030f4:	mov [si], ax
000030f6:	mov di, [bp+0x6]
000030f9:	mov [bp-0x2], si
lbl_30fc:
000030fc:	cmp word [si], 0x0
000030ff:	jz 0x3301
00003103:	lea ax, [si+0x4]
00003106:	push ax
00003107:	lea ax, [bp-0xc4]
0000310b:	push ax
0000310c:	push word [si]
0000310e:	call 0x28da
00003111:	add sp, 0x6
00003114:	mov [bp-0x4], ax
00003117:	cmp ax, 0x11
0000311a:	jz 0x31db
0000311e:	lea ax, [si+0x3d9]
00003122:	push ax
00003123:	push word [si]
00003125:	call 0x293c
00003128:	pop bx
00003129:	lea cx, [bp-0xc4]
0000312d:	add ax, cx
0000312f:	push ax
00003130:	push word [si]
00003132:	call 0x28da
00003135:	add sp, 0x6
00003138:	push si
00003139:	push 0x0
0000313b:	push word 0x1c0
0000313e:	lea ax, [di+0x40]
00003141:	push ax
00003142:	call 0x2c24
00003145:	add sp, 0x8
00003148:	push 0x40
0000314a:	push di
0000314b:	call 0x3052
0000314e:	add sp, 0x4
00003151:	cmp ax, 0x5545
00003154:	jnz 0x31c0
00003156:	cmp dx, 0x5452
0000315a:	jnz 0x31c0
0000315c:	push 0x44
0000315e:	push di
0000315f:	call 0x303e
00003162:	add sp, 0x4
00003165:	cmp ax, 0x4
00003168:	jb 0x3195
0000316a:	push word 0xbc
0000316d:	lea ax, [di+0x40]
00003170:	push ax
00003171:	call 0x2702
00003174:	add sp, 0x4
00003177:	push word 0xfc
0000317a:	push di
0000317b:	mov [bp-0x188], ax
0000317f:	mov [bp-0x186], dx
00003183:	call 0x3052
00003186:	add sp, 0x4
00003189:	cmp [bp-0x188], ax
0000318d:	jnz 0x31c0
0000318f:	cmp [bp-0x186], dx
00003193:	jnz 0x31c0
lbl_3195:
00003195:	push 0x48
00003197:	push di
00003198:	call 0x3052
0000319b:	add sp, 0x4
0000319e:	push word 0x100
000031a1:	lea cx, [di+0x100]
000031a5:	push cx
000031a6:	mov [bp-0x18c], ax
000031aa:	mov [bp-0x18a], dx
000031ae:	call 0x2702
000031b1:	add sp, 0x4
000031b4:	cmp [bp-0x18c], ax
000031b8:	jnz 0x31c0
000031ba:	cmp [bp-0x18a], dx
000031be:	jz 0x31e0
lbl_31c0:
000031c0:	push si
000031c1:	push 0x0
000031c3:	push word 0x1c0
000031c6:	lea ax, [di+0x40]
000031c9:	push ax
000031ca:	call 0x2b38
000031cd:	add sp, 0x8
000031d0:	push word [si]
000031d2:	call 0x28be
000031d5:	pop bx
000031d6:	mov [si], ax
000031d8:	jmp 0x30fc
lbl_31db:
000031db:	mov di, ax
000031dd:	jmp 0x3304
lbl_31e0:
000031e0:	mov word [bp-0x4], 0x0
000031e5:	push 0x5c
000031e7:	push word [bp+0x6]
000031ea:	call 0x3068
000031ed:	add sp, 0x4
000031f0:	mov dx, [bp-0x2]
000031f3:	add dx, 0x7b0
000031f7:	mov di, dx
000031f9:	mov si, ax
000031fb:	push ds
000031fc:	pop es
000031fd:	movsd
000031ff:	movsd
00003201:	mov bx, dx
00003203:	cmp dword [bx], 0x0
00003207:	jnz 0x321b
00003209:	mov bx, [bp-0x2]
0000320c:	cmp dword [bx+0x7b4], 0x0
00003212:	jnz 0x321b
00003214:	mov byte [bx+0x7ae], 0x0
00003219:	jmp 0x3223
lbl_321b:
0000321b:	mov bx, [bp-0x2]
0000321e:	mov byte [bx+0x7ae], 0x1
lbl_3223:
00003223:	push 0x64
00003225:	push word [bp+0x6]
00003228:	call 0x3068
0000322b:	add sp, 0x4
0000322e:	mov bx, [bp-0x2]
00003231:	lea di, [bx+0x7b0]
00003235:	mov si, ax
00003237:	push ds
00003238:	pop es
00003239:	movsd
0000323b:	movsd
0000323d:	push 0x6c
0000323f:	push word [bp+0x6]
00003242:	call 0x3068
00003245:	add sp, 0x4
00003248:	mov bx, [bp-0x2]
0000324b:	lea di, [bx+0x7b8]
0000324f:	mov si, ax
00003251:	push ds
00003252:	pop es
00003253:	movsd
00003255:	movsd
00003257:	push 0x74
00003259:	push word [bp+0x6]
0000325c:	call 0x3068
0000325f:	add sp, 0x4
00003262:	mov bx, [bp-0x2]
00003265:	lea di, [bx+0x7c0]
00003269:	mov si, ax
0000326b:	push ds
0000326c:	pop es
0000326d:	movsd
0000326f:	movsd
00003271:	push 0x7c
00003273:	push word [bp+0x6]
00003276:	call 0x3052
00003279:	mov bx, [bp-0x2]
0000327c:	add sp, 0x4
0000327f:	mov [bx+0x7c8], ax
00003283:	mov [bx+0x7ca], dx
00003287:	push word 0xc0
0000328a:	mov ax, [bp+0x6]
0000328d:	add ah, 0x1
00003290:	push ax
00003291:	lea ax, [bp-0x184]
00003295:	push ax
00003296:	call 0x30
00003299:	add sp, 0x6
0000329c:	push word [bp-0x2]
0000329f:	push 0x0
000032a1:	push word 0x1c0
000032a4:	mov ax, [bp+0x6]
000032a7:	add ax, 0x40
000032aa:	push ax
000032ab:	call 0x2b38
000032ae:	add sp, 0x8
000032b1:	mov di, [bp-0x4]
000032b4:	cmp word [bp+0xc], 0x0
000032b8:	jnz 0x3315
000032ba:	mov ax, [bp-0x2]
000032bd:	add ax, 0x4
000032c0:	push ax
000032c1:	lea ax, [bp-0x184]
000032c5:	push ax
000032c6:	mov bx, [bp-0x2]
000032c9:	push word [bx]
000032cb:	call 0x28da
000032ce:	add sp, 0x6
000032d1:	mov di, ax
000032d3:	cmp di, 0x11
000032d6:	jz 0x32fc
000032d8:	mov ax, [bp-0x2]
000032db:	add ax, 0x3d9
000032de:	push ax
000032df:	mov bx, [bp-0x2]
000032e2:	push word [bx]
000032e4:	call 0x293c
000032e7:	pop bx
000032e8:	mov si, ax
000032ea:	lea ax, [bp+si-0x184]
000032ee:	push ax
000032ef:	mov bx, [bp-0x2]
000032f2:	push word [bx]
000032f4:	call 0x28da
000032f7:	add sp, 0x6
000032fa:	jmp 0x3315
lbl_32fc:
000032fc:	mov si, [bp-0x2]
000032ff:	jmp 0x3304
lbl_3301:
00003301:	mov di, 0x3
lbl_3304:
00003304:	cmp [bp+0xc], si
00003307:	jz 0x3315
00003309:	push si
0000330a:	call 0x2b26
0000330d:	pop bx
0000330e:	mov bx, [bp+0xa]
00003311:	mov word [bx], 0x0
lbl_3315:
00003315:	push word 0xc0
00003318:	lea ax, [bp-0xc4]
0000331c:	push ax
0000331d:	call 0x2602
00003320:	add sp, 0x4
00003323:	push word 0xc0
00003326:	lea ax, [bp-0x184]
0000332a:	push ax
0000332b:	call 0x2602
0000332e:	add sp, 0x4
00003331:	mov ax, di
00003333:	pop si
00003334:	pop di
00003335:	leave
00003336:	ret
---ENDPROC---  ; sub_30a8 ; length = 655 bytes ; 28 calls out

00003337:	db 0x00 

---STARTPROC---
sub_3338:
00003338:	push bp
00003339:	mov bp, sp
0000333b:	mov bx, [bp+0x4]
0000333e:	mov eax, [bp+0xa]
00003342:	mov [bx], eax
00003345:	mov eax, [bp+0x6]
00003349:	mov [bx+0x4], eax
0000334d:	add bx, 0x4
00003350:	sub eax, eax
00003353:	mov [bx+0x4], eax
00003357:	add bx, 0x4
0000335a:	mov [bx+0x6], ax
0000335d:	mov [bx+0x4], ax
00003360:	leave
00003361:	ret
---ENDPROC---  ; sub_3338 ; length = 42 bytes ; 0 calls out


---STARTPROC---
sub_3362:
00003362:	enter 0x36, 0x0
00003366:	push di
00003367:	push si
00003368:	mov ax, [bp+0x4]
0000336b:	mov [bp-0xe], ax
0000336e:	lea ax, [bp-0x1a]
00003371:	mov [bp-0x2], ax
00003374:	mov bx, [bp+0xa]
00003377:	mov eax, [bx+0x4]
0000337b:	mov [bp-0x12], eax
0000337f:	mov eax, [bx]
00003382:	mov [bp-0x16], eax
00003386:	mov eax, [bp+0x6]
0000338a:	shr eax, 0x4
0000338e:	mov [bp-0x8], eax
00003392:	push dword [bp-0x16]
00003396:	push dword [bp-0x12]
0000339a:	lea cx, [bp-0x36]
0000339d:	push cx
0000339e:	call 0x3338
000033a1:	add sp, 0xa
000033a4:	cmp dword [bp-0x8], 0x0
000033a9:	jz 0x351c
000033ad:	mov di, [bp+0xc]
lbl_33b0:
000033b0:	push 0x10
000033b2:	lea ax, [bp-0x36]
000033b5:	push ax
000033b6:	lea ax, [bp-0x26]
000033b9:	push ax
000033ba:	call 0x30
000033bd:	add sp, 0x6
000033c0:	push word [bp+0x10]
000033c3:	lea ax, [bp-0x26]
000033c6:	push ax
000033c7:	push word [bp+0x12]
000033ca:	call 0x27dc
000033cd:	add sp, 0x6
000033d0:	mov word [bp-0xa], 0x0
000033d5:	cmp dword [bp-0x8], 0x20
000033da:	jae 0x33e4
000033dc:	mov ax, [bp-0x8]
000033df:	add ax, di
000033e1:	jmp 0x33e7
000033e3:	db 0x90 
lbl_33e4:
000033e4:	mov ax, 0x20
lbl_33e7:
000033e7:	mov [bp-0xc], ax
000033ea:	or ax, ax
000033ec:	jz 0x34db
000033f0:	mov [bp+0xc], di
lbl_33f3:
000033f3:	mov ax, [bp+0xc]
000033f6:	cmp [bp-0xa], ax
000033f9:	jb 0x348d
000033fd:	mov di, [bp-0xe]
00003400:	mov eax, [bp-0x26]
00003404:	xor [di], eax
00003407:	mov ax, [bp-0x22]
0000340a:	add di, 0x4
0000340d:	mov dx, [bp-0x20]
00003410:	xor [di], ax
00003412:	xor [di+0x2], dx
00003415:	mov ax, [bp-0x1e]
00003418:	add di, 0x4
0000341b:	mov dx, [bp-0x1c]
0000341e:	xor [di], ax
00003420:	xor [di+0x2], dx
00003423:	mov ax, [bp-0x1a]
00003426:	add di, 0x4
00003429:	mov dx, [bp-0x18]
0000342c:	xor [di], ax
0000342e:	xor [di+0x2], dx
00003431:	add di, -0xc
00003434:	cmp byte [bp+0x14], 0x0
00003438:	jz 0x3448
0000343a:	mov si, [bp+0xe]
0000343d:	push si
0000343e:	push di
0000343f:	push word [bp+0x12]
00003442:	call 0x2822
00003445:	jmp 0x3453
00003447:	db 0x90 
lbl_3448:
00003448:	mov si, [bp+0xe]
0000344b:	push si
0000344c:	push di
0000344d:	push word [bp+0x12]
00003450:	call 0x27dc
lbl_3453:
00003453:	add sp, 0x6
00003456:	mov eax, [bp-0x26]
0000345a:	xor [di], eax
0000345d:	mov ax, [bp-0x22]
00003460:	add di, 0x4
00003463:	mov dx, [bp-0x20]
00003466:	xor [di], ax
00003468:	xor [di+0x2], dx
0000346b:	mov ax, [bp-0x1e]
0000346e:	add di, 0x4
00003471:	mov dx, [bp-0x1c]
00003474:	xor [di], ax
00003476:	xor [di+0x2], dx
00003479:	mov ax, [bp-0x1a]
0000347c:	add di, 0x4
0000347f:	mov dx, [bp-0x18]
00003482:	xor [di], ax
00003484:	xor [di+0x2], dx
00003487:	add di, 0x4
0000348a:	mov [bp-0xe], di
lbl_348d:
0000348d:	mov byte [bp-0x3], 0x0
00003491:	lea dx, [bp-0x1a]
00003494:	mov [bp-0x2], dx
00003497:	mov si, dx
lbl_3499:
00003499:	test word [si+0x2], 0x8000
0000349e:	jz 0x34b2
000034a0:	lea ax, [bp-0x1a]
000034a3:	cmp si, ax
000034a5:	jz 0x34ae
000034a7:	or byte [si+0x4], 0x1
000034ab:	jmp 0x34b2
000034ad:	db 0x90 
lbl_34ae:
000034ae:	mov byte [bp-0x3], 0x87
lbl_34b2:
000034b2:	mov eax, [si]
000034b5:	add eax, eax
000034b8:	mov [si], eax
000034bb:	sub si, 0x4
000034be:	lea ax, [bp-0x26]
000034c1:	cmp si, ax
000034c3:	jae 0x3499
000034c5:	mov al, [bp-0x3]
000034c8:	xor [bp-0x26], al
000034cb:	mov ax, [bp-0xc]
000034ce:	inc word [bp-0xa]
000034d1:	cmp [bp-0xa], ax
000034d4:	jb 0x33f3
000034d8:	mov di, [bp+0xc]
lbl_34db:
000034db:	sub ax, di
000034dd:	sub dx, dx
000034df:	sub [bp-0x8], ax
000034e2:	sbb [bp-0x6], dx
000034e5:	xor di, di
000034e7:	add word [bp-0x16], 0x1
000034eb:	adc [bp-0x14], dx
000034ee:	cmp dword [bp-0x16], 0x0
000034f3:	jnz 0x34fc
000034f5:	add word [bp-0x12], 0x1
000034f9:	adc [bp-0x10], dx
lbl_34fc:
000034fc:	push dword [bp-0x16]
00003500:	push dword [bp-0x12]
00003504:	lea ax, [bp-0x36]
00003507:	push ax
00003508:	call 0x3338
0000350b:	add sp, 0xa
0000350e:	cmp [bp-0x6], di
00003511:	jnz 0x33b0
00003515:	cmp [bp-0x8], di
00003518:	jnz 0x33b0
lbl_351c:
0000351c:	lea ax, [bp-0x26]
0000351f:	mov [bp-0x2], ax
00003522:	mov bx, 0x4
00003525:	jmp 0x3536
00003527:	db 0x90 
lbl_3528:
00003528:	mov si, [bp-0x2]
0000352b:	mov dword [si], 0x0
00003532:	add word [bp-0x2], 0x4
lbl_3536:
00003536:	mov ax, bx
00003538:	dec bx
00003539:	or ax, ax
0000353b:	jnz 0x3528
0000353d:	pop si
0000353e:	pop di
0000353f:	leave
00003540:	ret
---ENDPROC---  ; sub_3362 ; length = 479 bytes ; 6 calls out

00003541:	db 0x00 

---STARTPROC---
sub_3542:
00003542:	push bp
00003543:	mov bp, sp
00003545:	push 0x0
00003547:	push dword [bp+0x10]
0000354b:	push dword [bp+0xc]
0000354f:	push dword [bp+0x8]
00003553:	push dword [bp+0x4]
00003557:	call 0x3362
0000355a:	leave
0000355b:	ret
---ENDPROC---  ; sub_3542 ; length = 26 bytes ; 1 calls out


---STARTPROC---
sub_355c:
0000355c:	push bp
0000355d:	mov bp, sp
0000355f:	push 0x1
00003561:	push dword [bp+0x10]
00003565:	push dword [bp+0xc]
00003569:	push dword [bp+0x8]
0000356d:	push dword [bp+0x4]
00003571:	call 0x3362
00003574:	leave
00003575:	ret
---ENDPROC---  ; sub_355c ; length = 26 bytes ; 1 calls out


---STARTPROC---
sub_3576:
00003576:	push bp
00003577:	mov bp, sp
00003579:	push si
0000357a:	mov si, [bp+0x4]
0000357d:	mov word [si+0x14], 0x0
00003582:	mov dword [si], 0x67452301
00003589:	mov dword [si+0x4], 0xefcdab89
00003591:	mov dword [si+0x8], 0x98badcfe
00003599:	mov dword [si+0xc], 0x10325476
000035a1:	mov dword [si+0x10], 0xc3d2e1f0
000035a9:	mov byte [0x7e16], 0x80
000035ae:	pop si
000035af:	leave
000035b0:	ret
---ENDPROC---  ; sub_3576 ; length = 59 bytes ; 0 calls out

000035b1:	db 0x00 

---STARTPROC---
sub_35b2:
000035b2:	enter 0x6, 0x0
000035b6:	push di
000035b7:	push si
000035b8:	mov di, [bp+0x4]
000035bb:	mov ax, [bp+0x8]
000035be:	mov [bp-0x2], ax
000035c1:	mov cx, [di+0x14]
000035c4:	and cx, 0x1f8
000035c8:	shr cx, 0x3
000035cb:	mov si, cx
000035cd:	sub cx, 0x40
000035d0:	neg cx
000035d2:	mov [bp-0x4], cx
000035d5:	shl ax, 0x3
000035d8:	add [di+0x14], ax
000035db:	mov [bp-0x6], si
000035de:	mov ax, [bp-0x4]
000035e1:	cmp [bp-0x2], ax
000035e4:	jae 0x35eb
000035e6:	mov si, [bp+0x6]
000035e9:	jmp 0x363a
lbl_35eb:
000035eb:	or si, si
000035ed:	jz 0x361a
000035ef:	push ax
000035f0:	push word [bp+0x6]
000035f3:	mov ax, si
000035f5:	add ax, di
000035f7:	add ax, 0x16
000035fa:	push ax
000035fb:	call 0x30
000035fe:	add sp, 0x6
00003601:	lea ax, [di+0x16]
00003604:	push ax
00003605:	push di
00003606:	call 0x3734
00003609:	add sp, 0x4
0000360c:	mov ax, [bp-0x4]
0000360f:	add [bp+0x6], ax
00003612:	sub [bp-0x2], ax
00003615:	xor si, si
00003617:	mov [bp-0x6], si
lbl_361a:
0000361a:	mov si, [bp+0x6]
0000361d:	mov di, [bp-0x2]
00003620:	jmp 0x3632
lbl_3622:
00003622:	push si
00003623:	push word [bp+0x4]
00003626:	call 0x3734
00003629:	add sp, 0x4
0000362c:	add si, 0x40
0000362f:	sub di, 0x40
lbl_3632:
00003632:	cmp di, 0x40
00003635:	jae 0x3622
00003637:	mov [bp-0x2], di
lbl_363a:
0000363a:	cmp word [bp-0x2], 0x0
0000363e:	jz 0x3654
00003640:	push word [bp-0x2]
00003643:	push si
00003644:	mov ax, [bp-0x6]
00003647:	add ax, [bp+0x4]
0000364a:	add ax, 0x16
0000364d:	push ax
0000364e:	call 0x30
00003651:	add sp, 0x6
lbl_3654:
00003654:	pop si
00003655:	pop di
00003656:	leave
00003657:	ret
---ENDPROC---  ; sub_35b2 ; length = 166 bytes ; 4 calls out


---STARTPROC---
sub_3658:
00003658:	enter 0xc, 0x0
0000365c:	push si
0000365d:	mov si, [bp+0x4]
00003660:	sub eax, eax
00003663:	mov [bp-0x8], eax
00003667:	mov [bp-0xa], ax
0000366a:	mov ax, [si+0x14]
0000366d:	mov [bp-0xc], ax
00003670:	mov ax, 0x40
00003673:	cwd
00003674:	mov cx, [si+0x14]
00003677:	and cx, 0x1f8
0000367b:	shr cx, 0x3
0000367e:	sub ax, cx
00003680:	sbb dx, 0x0
00003683:	mov [bp-0x4], ax
00003686:	mov [bp-0x2], dx
00003689:	or dx, dx
0000368b:	jnz 0x3699
0000368d:	cmp ax, 0x9
00003690:	jae 0x3699
00003692:	add word [bp-0x4], 0x40
00003696:	adc [bp-0x2], dx
lbl_3699:
00003699:	mov eax, [bp-0x4]
0000369d:	sub eax, 0x8
000036a3:	push eax
000036a5:	push word 0x7e16
000036a8:	push si
000036a9:	call 0x35b2
000036ac:	add sp, 0x8
000036af:	push 0x0
000036b1:	push 0x8
000036b3:	lea ax, [bp-0xc]
000036b6:	push ax
000036b7:	push si
000036b8:	call 0x35b2
000036bb:	add sp, 0x8
000036be:	pop si
000036bf:	leave
000036c0:	ret
---ENDPROC---  ; sub_3658 ; length = 105 bytes ; 2 calls out

000036c1:	db 0x00 

---STARTPROC---
sub_36c2:
000036c2:	enter 0x4, 0x0
000036c6:	push di
000036c7:	push si
000036c8:	mov di, [bp+0x6]
000036cb:	push di
000036cc:	call 0x3658
000036cf:	pop bx
000036d0:	cmp word [bp+0x4], 0x0
000036d4:	jz 0x372f
000036d6:	xor si, si
lbl_36d8:
000036d8:	mov bx, si
000036da:	shl bx, 0x2
000036dd:	sub ah, ah
000036df:	mov al, [bx+di+0x3]
000036e2:	mov cx, bx
000036e4:	add bx, [bp+0x4]
000036e7:	mov [bx+0x3], al
000036ea:	mov ax, bx
000036ec:	mov bx, cx
000036ee:	mov dl, [bx+di+0x2]
000036f1:	mov bx, ax
000036f3:	mov [bx+0x2], dl
000036f6:	mov dx, cx
000036f8:	mov cl, 0x8
000036fa:	mov cx, ax
000036fc:	mov cl, 0x8
000036fe:	mov [bp-0x2], ax
00003701:	mov bx, dx
00003703:	mov [bp-0x4], dx
00003706:	mov ax, [bx+di]
00003708:	mov dx, [bx+di+0x2]
0000370b:	call 0x192
0000370e:	mov bx, [bp-0x2]
00003711:	mov [bx+0x1], al
00003714:	mov bx, [bp-0x4]
00003717:	mov al, [bx+di]
00003719:	mov bx, [bp-0x2]
0000371c:	inc si
0000371d:	mov [bx], al
0000371f:	cmp si, 0x5
00003722:	jl 0x36d8
00003724:	push 0x56
00003726:	push 0x0
00003728:	push di
00003729:	call 0x5c
0000372c:	add sp, 0x6
lbl_372f:
0000372f:	pop si
00003730:	pop di
00003731:	leave
00003732:	ret
---ENDPROC---  ; sub_36c2 ; length = 113 bytes ; 3 calls out

00003733:	db 0x00 

---STARTPROC---
sub_3734:
00003734:	enter 0x2e, 0x0
00003738:	push di
00003739:	push si
0000373a:	mov si, [bp+0x4]
0000373d:	mov eax, [si]
00003740:	mov [bp-0x16], eax
00003744:	mov eax, [si+0x4]
00003748:	mov [bp-0x12], eax
0000374c:	mov eax, [si+0x8]
00003750:	mov [bp-0xa], eax
00003754:	mov eax, [si+0xc]
00003758:	mov [bp-0xe], eax
0000375c:	mov eax, [si+0x10]
00003760:	mov [bp-0x1a], eax
00003764:	mov byte [bp-0x5], 0x0
00003768:	mov di, [bp+0x6]
lbl_376b:
0000376b:	mov bl, [bp-0x5]
0000376e:	shr bl, 0x2
00003771:	and bx, 0xfc
00003775:	mov ax, [bx+0x67b0]
00003779:	mov dx, [bx+0x67b2]
0000377d:	mov bl, [bp-0x5]
00003780:	sub bh, bh
00003782:	mov bl, [bx+0x6670]
00003786:	shl bx, 0x2
00003789:	add ax, [bx+di]
0000378b:	adc dx, [bx+di+0x2]
0000378e:	add ax, [bp-0x16]
00003791:	adc dx, [bp-0x14]
00003794:	mov [bp-0x4], ax
00003797:	mov [bp-0x2], dx
0000379a:	mov al, [bp-0x5]
0000379d:	shr al, 0x4
000037a0:	sub ah, ah
000037a2:	cmp ax, 0x9
000037a5:	ja 0x3838
000037a9:	add ax, ax
000037ab:	xchg bx, ax
000037ac:	jmp word [cs:bx+0x38b2]
000037b1:	db 0x90 
000037b2:	db 0xc6 
000037b3:	db 0x38 8
000037b4:	db 0xd4 
000037b5:	db 0x38 8
000037b6:	db 0xea 
000037b7:	db 0x38 8
000037b8:	db 0x02 
000037b9:	db 0x39 9
000037ba:	db 0x1c 
000037bb:	db 0x39 9
000037bc:	db 0x1c 
000037bd:	db 0x39 9
000037be:	db 0x02 
000037bf:	db 0x39 9
000037c0:	db 0xea 
000037c1:	db 0x38 8
000037c2:	db 0xd4 
000037c3:	db 0x38 8
000037c4:	db 0xc6 
000037c5:	db 0x38 8
000037c6:	db 0x8b 
000037c7:	db 0x46 F
000037c8:	db 0xf2 
000037c9:	db 0x8b 
000037ca:	db 0x56 V
000037cb:	db 0xf4 
000037cc:	db 0x33 3
000037cd:	db 0x46 F
000037ce:	db 0xf6 
000037cf:	db 0x33 3
000037d0:	db 0x56 V
000037d1:	db 0xf8 
000037d2:	db 0xeb 
000037d3:	db 0x58 X
000037d4:	db 0x66 f
000037d5:	db 0x8b 
000037d6:	db 0x46 F
000037d7:	db 0xf2 
000037d8:	db 0x66 f
000037d9:	db 0x33 3
000037da:	db 0x46 F
000037db:	db 0xf6 
000037dc:	db 0x66 f
000037dd:	db 0x23 #
000037de:	db 0x46 F
000037df:	db 0xee 
000037e0:	db 0x66 f
000037e1:	db 0x8b 
000037e2:	db 0xd0 
000037e3:	db 0x66 f
000037e4:	db 0xc1 
000037e5:	db 0xea 
000037e6:	db 0x10 
000037e7:	db 0xeb 
000037e8:	db 0x11 
000037e9:	db 0x90 
000037ea:	db 0x8b 
000037eb:	db 0x46 F
000037ec:	db 0xf6 
000037ed:	db 0x8b 
000037ee:	db 0x56 V
000037ef:	db 0xf8 
000037f0:	db 0xf7 
000037f1:	db 0xd0 
000037f2:	db 0xf7 
000037f3:	db 0xd2 
000037f4:	db 0x0b 
000037f5:	db 0x46 F
000037f6:	db 0xee 
000037f7:	db 0x0b 
000037f8:	db 0x56 V
000037f9:	db 0xf0 
000037fa:	db 0x33 3
000037fb:	db 0x46 F
000037fc:	db 0xf2 
000037fd:	db 0x33 3
000037fe:	db 0x56 V
000037ff:	db 0xf4 
00003800:	db 0xeb 
00003801:	db 0x30 0
00003802:	db 0x66 f
00003803:	db 0x8b 
00003804:	db 0x46 F
00003805:	db 0xf6 
00003806:	db 0x66 f
00003807:	db 0x33 3
00003808:	db 0x46 F
00003809:	db 0xee 
0000380a:	db 0x66 f
0000380b:	db 0x23 #
0000380c:	db 0x46 F
0000380d:	db 0xf2 
0000380e:	db 0x66 f
0000380f:	db 0x33 3
00003810:	db 0x46 F
00003811:	db 0xf6 
00003812:	db 0x66 f
00003813:	db 0x8b 
00003814:	db 0xd0 
00003815:	db 0x66 f
00003816:	db 0xc1 
00003817:	db 0xea 
00003818:	db 0x10 
00003819:	db 0xeb 
0000381a:	db 0x17 
0000381b:	db 0x90 
0000381c:	db 0x8b 
0000381d:	db 0x46 F
0000381e:	db 0xf2 
0000381f:	db 0x8b 
00003820:	db 0x56 V
00003821:	db 0xf4 
00003822:	db 0xf7 
00003823:	db 0xd0 
00003824:	db 0xf7 
00003825:	db 0xd2 
00003826:	db 0x0b 
00003827:	db 0x46 F
00003828:	db 0xf6 
00003829:	db 0x0b 
0000382a:	db 0x56 V
0000382b:	db 0xf8 
0000382c:	db 0x33 3
0000382d:	db 0x46 F
0000382e:	db 0xee 
0000382f:	db 0x33 3
00003830:	db 0x56 V
00003831:	db 0xf0 
00003832:	db 0x01 
00003833:	db 0x46 F
00003834:	db 0xfc 
00003835:	db 0x11 
00003836:	db 0x56 V
00003837:	db 0xfe 
lbl_3838:
00003838:	mov bl, [bp-0x5]
0000383b:	sub bh, bh
0000383d:	mov cl, [bx+0x6710]
00003841:	mov ax, [bp-0x4]
00003844:	mov dx, [bp-0x2]
00003847:	or cl, cl
00003849:	jz 0x3856
lbl_384b:
0000384b:	add ax, ax
0000384d:	adc dx, dx
0000384f:	adc ax, 0x0
00003852:	dec cl
00003854:	jnz 0x384b
lbl_3856:
00003856:	add ax, [bp-0x1a]
00003859:	adc dx, [bp-0x18]
0000385c:	mov [bp-0x4], ax
0000385f:	mov [bp-0x2], dx
00003862:	mov eax, [bp-0x1a]
00003866:	mov [bp-0x16], eax
0000386a:	mov eax, [bp-0xe]
0000386e:	mov [bp-0x1a], eax
00003872:	mov ax, [bp-0xa]
00003875:	mov dx, [bp-0x8]
00003878:	mov cl, 0xa
lbl_387a:
0000387a:	add ax, ax
0000387c:	adc dx, dx
0000387e:	adc ax, 0x0
00003881:	dec cl
00003883:	jnz 0x387a
00003885:	mov [bp-0xe], ax
00003888:	mov [bp-0xc], dx
0000388b:	mov eax, [bp-0x12]
0000388f:	mov [bp-0xa], eax
00003893:	mov eax, [bp-0x4]
00003897:	mov [bp-0x12], eax
0000389b:	cmp byte [bp-0x5], 0x4f
0000389f:	jnz 0x38f0
000038a1:	mov eax, [bp-0x16]
000038a5:	mov [bp-0x1e], eax
000038a9:	mov eax, [bp-0x12]
000038ad:	mov [bp-0x22], eax
000038b1:	mov eax, [bp-0xa]
000038b5:	mov [bp-0x26], eax
000038b9:	mov eax, [bp-0xe]
000038bd:	mov [bp-0x2a], eax
000038c1:	mov eax, [bp-0x1a]
000038c5:	mov [bp-0x2e], eax
000038c9:	mov eax, [si]
000038cc:	mov [bp-0x16], eax
000038d0:	mov eax, [si+0x4]
000038d4:	mov [bp-0x12], eax
000038d8:	mov eax, [si+0x8]
000038dc:	mov [bp-0xa], eax
000038e0:	mov eax, [si+0xc]
000038e4:	mov [bp-0xe], eax
000038e8:	mov eax, [si+0x10]
000038ec:	mov [bp-0x1a], eax
lbl_38f0:
000038f0:	inc byte [bp-0x5]
000038f3:	cmp byte [bp-0x5], 0xa0
000038f7:	jb 0x376b
000038fb:	mov eax, [si+0x4]
000038ff:	add eax, [bp-0x26]
00003903:	add eax, [bp-0xe]
00003907:	mov [bp-0x4], eax
0000390b:	mov eax, [si+0x8]
0000390f:	add eax, [bp-0x2a]
00003913:	add eax, [bp-0x1a]
00003917:	mov [si+0x4], eax
0000391b:	mov eax, [si+0xc]
0000391f:	add eax, [bp-0x2e]
00003923:	add eax, [bp-0x16]
00003927:	mov [si+0x8], eax
0000392b:	mov eax, [si+0x10]
0000392f:	add eax, [bp-0x1e]
00003933:	add eax, [bp-0x12]
00003937:	mov [si+0xc], eax
0000393b:	mov eax, [si]
0000393e:	add eax, [bp-0x22]
00003942:	add eax, [bp-0xa]
00003946:	mov [si+0x10], eax
0000394a:	mov eax, [bp-0x4]
0000394e:	mov [si], eax
00003951:	pop si
00003952:	pop di
00003953:	leave
00003954:	ret
---ENDPROC---  ; sub_3734 ; length = 545 bytes ; 0 calls out

00003955:	db 0x90 

---STARTPROC---
sub_3956:
00003956:	push bp
00003957:	mov bp, sp
00003959:	push di
0000395a:	push si
0000395b:	mov si, [bp+0x4]
0000395e:	mov di, [bp+0x8]
00003961:	mov bx, [bp+0x6]
00003964:	mov eax, [di]
00003967:	xor eax, [bx]
0000396a:	mov [si], eax
0000396d:	mov eax, [di+0x4]
00003971:	xor eax, [bx+0x4]
00003975:	mov [si+0x4], eax
00003979:	mov eax, [di+0x8]
0000397d:	xor eax, [bx+0x8]
00003981:	mov [si+0x8], eax
00003985:	mov eax, [di+0xc]
00003989:	xor eax, [bx+0xc]
0000398d:	mov [si+0xc], eax
00003991:	pop si
00003992:	pop di
00003993:	leave
00003994:	ret
---ENDPROC---  ; sub_3956 ; length = 63 bytes ; 0 calls out

00003995:	db 0x00 

---STARTPROC---
sub_3996:
00003996:	enter 0x2, 0x0
0000399a:	push si
0000399b:	mov si, [bp+0x4]
0000399e:	sub bh, bh
000039a0:	mov bl, [si]
000039a2:	mov al, [bx+0x67d8]
000039a6:	mov [si], al
000039a8:	mov bl, [si+0x4]
000039ab:	mov al, [bx+0x67d8]
000039af:	mov [si+0x4], al
000039b2:	mov bl, [si+0x8]
000039b5:	mov al, [bx+0x67d8]
000039b9:	mov [si+0x8], al
000039bc:	mov bl, [si+0xc]
000039bf:	mov al, [bx+0x67d8]
000039c3:	mov [si+0xc], al
000039c6:	mov al, [si+0x1]
000039c9:	mov [bp-0x1], al
000039cc:	mov bl, [si+0x5]
000039cf:	mov al, [bx+0x67d8]
000039d3:	mov [si+0x1], al
000039d6:	mov bl, [si+0x9]
000039d9:	mov al, [bx+0x67d8]
000039dd:	mov [si+0x5], al
000039e0:	mov bl, [si+0xd]
000039e3:	mov al, [bx+0x67d8]
000039e7:	mov [si+0x9], al
000039ea:	mov bl, [bp-0x1]
000039ed:	mov al, [bx+0x67d8]
000039f1:	mov [si+0xd], al
000039f4:	mov al, [si+0x2]
000039f7:	mov [bp-0x1], al
000039fa:	mov bl, [si+0xa]
000039fd:	mov al, [bx+0x67d8]
00003a01:	mov [si+0x2], al
00003a04:	mov bl, [bp-0x1]
00003a07:	mov al, [bx+0x67d8]
00003a0b:	mov [si+0xa], al
00003a0e:	mov al, [si+0x6]
00003a11:	mov [bp-0x1], al
00003a14:	mov bl, [si+0xe]
00003a17:	mov al, [bx+0x67d8]
00003a1b:	mov [si+0x6], al
00003a1e:	mov bl, [bp-0x1]
00003a21:	mov al, [bx+0x67d8]
00003a25:	mov [si+0xe], al
00003a28:	mov al, [si+0xf]
00003a2b:	mov [bp-0x1], al
00003a2e:	mov bl, [si+0xb]
00003a31:	mov al, [bx+0x67d8]
00003a35:	mov [si+0xf], al
00003a38:	mov bl, [si+0x7]
00003a3b:	mov al, [bx+0x67d8]
00003a3f:	mov [si+0xb], al
00003a42:	mov bl, [si+0x3]
00003a45:	mov al, [bx+0x67d8]
00003a49:	mov [si+0x7], al
00003a4c:	mov bl, [bp-0x1]
00003a4f:	mov al, [bx+0x67d8]
00003a53:	mov [si+0x3], al
00003a56:	pop si
00003a57:	leave
00003a58:	ret
---ENDPROC---  ; sub_3996 ; length = 195 bytes ; 0 calls out

00003a59:	db 0x00 

---STARTPROC---
sub_3a5a:
00003a5a:	enter 0x2, 0x0
00003a5e:	push si
00003a5f:	mov si, [bp+0x4]
00003a62:	sub bh, bh
00003a64:	mov bl, [si]
00003a66:	mov al, [bx+0x68d8]
00003a6a:	mov [si], al
00003a6c:	mov bl, [si+0x4]
00003a6f:	mov al, [bx+0x68d8]
00003a73:	mov [si+0x4], al
00003a76:	mov bl, [si+0x8]
00003a79:	mov al, [bx+0x68d8]
00003a7d:	mov [si+0x8], al
00003a80:	mov bl, [si+0xc]
00003a83:	mov al, [bx+0x68d8]
00003a87:	mov [si+0xc], al
00003a8a:	mov al, [si+0xd]
00003a8d:	mov [bp-0x1], al
00003a90:	mov bl, [si+0x9]
00003a93:	mov al, [bx+0x68d8]
00003a97:	mov [si+0xd], al
00003a9a:	mov bl, [si+0x5]
00003a9d:	mov al, [bx+0x68d8]
00003aa1:	mov [si+0x9], al
00003aa4:	mov bl, [si+0x1]
00003aa7:	mov al, [bx+0x68d8]
00003aab:	mov [si+0x5], al
00003aae:	mov bl, [bp-0x1]
00003ab1:	mov al, [bx+0x68d8]
00003ab5:	mov [si+0x1], al
00003ab8:	mov al, [si+0x2]
00003abb:	mov [bp-0x1], al
00003abe:	mov bl, [si+0xa]
00003ac1:	mov al, [bx+0x68d8]
00003ac5:	mov [si+0x2], al
00003ac8:	mov bl, [bp-0x1]
00003acb:	mov al, [bx+0x68d8]
00003acf:	mov [si+0xa], al
00003ad2:	mov al, [si+0x6]
00003ad5:	mov [bp-0x1], al
00003ad8:	mov bl, [si+0xe]
00003adb:	mov al, [bx+0x68d8]
00003adf:	mov [si+0x6], al
00003ae2:	mov bl, [bp-0x1]
00003ae5:	mov al, [bx+0x68d8]
00003ae9:	mov [si+0xe], al
00003aec:	mov al, [si+0x3]
00003aef:	mov [bp-0x1], al
00003af2:	mov bl, [si+0x7]
00003af5:	mov al, [bx+0x68d8]
00003af9:	mov [si+0x3], al
00003afc:	mov bl, [si+0xb]
00003aff:	mov al, [bx+0x68d8]
00003b03:	mov [si+0x7], al
00003b06:	mov bl, [si+0xf]
00003b09:	mov al, [bx+0x68d8]
00003b0d:	mov [si+0xb], al
00003b10:	mov bl, [bp-0x1]
00003b13:	mov al, [bx+0x68d8]
00003b17:	mov [si+0xf], al
00003b1a:	pop si
00003b1b:	leave
00003b1c:	ret
---ENDPROC---  ; sub_3a5a ; length = 195 bytes ; 0 calls out

00003b1d:	db 0x00 

---STARTPROC---
sub_3b1e:
00003b1e:	enter 0x2, 0x0
00003b22:	push di
00003b23:	push si
00003b24:	mov si, [bp+0x6]
00003b27:	mov di, [bp+0x4]
00003b2a:	mov bl, [si]
00003b2c:	mov ax, bx
00003b2e:	mov bl, [si+0xf]
00003b31:	mov cx, bx
00003b33:	mov bl, [si+0xa]
00003b36:	mov dx, bx
00003b38:	mov bl, [si+0x5]
00003b3b:	sub bh, bh
00003b3d:	mov [bp-0x2], ax
00003b40:	mov al, [bx+0x6ad8]
00003b44:	mov bl, dl
00003b46:	xor al, [bx+0x67d8]
00003b4a:	mov bl, cl
00003b4c:	xor al, [bx+0x67d8]
00003b50:	mov bl, [bp-0x2]
00003b53:	xor al, [bx+0x69d8]
00003b57:	mov [di], al
00003b59:	mov bl, [si]
00003b5b:	mov al, [bx+0x67d8]
00003b5f:	mov bl, [si+0xf]
00003b62:	mov cl, [bx+0x67d8]
00003b66:	mov bl, [si+0xa]
00003b69:	mov dl, [bx+0x6ad8]
00003b6d:	mov bl, [si+0x5]
00003b70:	xor dl, [bx+0x69d8]
00003b74:	xor cl, dl
00003b76:	xor al, cl
00003b78:	mov [di+0x1], al
00003b7b:	mov bl, [si]
00003b7d:	mov al, [bx+0x67d8]
00003b81:	mov bl, [si+0xf]
00003b84:	mov cl, [bx+0x6ad8]
00003b88:	mov bl, [si+0xa]
00003b8b:	mov dl, [bx+0x69d8]
00003b8f:	mov bl, [si+0x5]
00003b92:	xor dl, [bx+0x67d8]
00003b96:	xor cl, dl
00003b98:	xor al, cl
00003b9a:	mov [di+0x2], al
00003b9d:	mov bl, [si]
00003b9f:	mov al, [bx+0x6ad8]
00003ba3:	mov bl, [si+0xf]
00003ba6:	mov cl, [bx+0x69d8]
00003baa:	mov bl, [si+0xa]
00003bad:	mov dl, [bx+0x67d8]
00003bb1:	mov bl, [si+0x5]
00003bb4:	xor dl, [bx+0x67d8]
00003bb8:	xor cl, dl
00003bba:	xor al, cl
00003bbc:	mov [di+0x3], al
00003bbf:	mov bl, [si+0xe]
00003bc2:	mov al, [bx+0x67d8]
00003bc6:	mov bl, [si+0x9]
00003bc9:	mov cl, [bx+0x6ad8]
00003bcd:	mov bl, [si+0x3]
00003bd0:	mov dl, [bx+0x67d8]
00003bd4:	mov bl, [si+0x4]
00003bd7:	xor dl, [bx+0x69d8]
00003bdb:	xor cl, dl
00003bdd:	xor al, cl
00003bdf:	mov [di+0x4], al
00003be2:	mov bl, [si+0xe]
00003be5:	mov al, [bx+0x6ad8]
00003be9:	mov bl, [si+0x9]
00003bec:	mov cl, [bx+0x69d8]
00003bf0:	mov bl, [si+0x4]
00003bf3:	mov dl, [bx+0x67d8]
00003bf7:	mov bl, [si+0x3]
00003bfa:	xor dl, [bx+0x67d8]
00003bfe:	xor cl, dl
00003c00:	xor al, cl
00003c02:	mov [di+0x5], al
00003c05:	mov bl, [si+0xe]
00003c08:	mov al, [bx+0x69d8]
00003c0c:	mov bl, [si+0x9]
00003c0f:	mov cl, [bx+0x67d8]
00003c13:	mov bl, [si+0x4]
00003c16:	mov dl, [bx+0x67d8]
00003c1a:	mov bl, [si+0x3]
00003c1d:	xor dl, [bx+0x6ad8]
00003c21:	xor cl, dl
00003c23:	xor al, cl
00003c25:	mov [di+0x6], al
00003c28:	mov bl, [si+0xe]
00003c2b:	mov al, [bx+0x67d8]
00003c2f:	mov bl, [si+0x9]
00003c32:	mov cl, [bx+0x67d8]
00003c36:	mov bl, [si+0x3]
00003c39:	mov dl, [bx+0x69d8]
00003c3d:	mov bl, [si+0x4]
00003c40:	xor dl, [bx+0x6ad8]
00003c44:	xor cl, dl
00003c46:	xor al, cl
00003c48:	mov [di+0x7], al
00003c4b:	mov bl, [si+0xd]
00003c4e:	mov al, [bx+0x6ad8]
00003c52:	mov bl, [si+0x7]
00003c55:	mov cl, [bx+0x67d8]
00003c59:	mov bl, [si+0x8]
00003c5c:	mov dl, [bx+0x69d8]
00003c60:	mov bl, [si+0x2]
00003c63:	xor dl, [bx+0x67d8]
00003c67:	xor cl, dl
00003c69:	xor al, cl
00003c6b:	mov [di+0x8], al
00003c6e:	mov bl, [si+0xd]
00003c71:	mov al, [bx+0x69d8]
00003c75:	mov bl, [si+0x8]
00003c78:	mov cl, [bx+0x67d8]
00003c7c:	mov bl, [si+0x7]
00003c7f:	mov dl, [bx+0x67d8]
00003c83:	mov bl, [si+0x2]
00003c86:	xor dl, [bx+0x6ad8]
00003c8a:	xor cl, dl
00003c8c:	xor al, cl
00003c8e:	mov [di+0x9], al
00003c91:	mov bl, [si+0xd]
00003c94:	mov al, [bx+0x67d8]
00003c98:	mov bl, [si+0x8]
00003c9b:	mov cl, [bx+0x67d8]
00003c9f:	mov bl, [si+0x7]
00003ca2:	mov dl, [bx+0x6ad8]
00003ca6:	mov bl, [si+0x2]
00003ca9:	xor dl, [bx+0x69d8]
00003cad:	xor cl, dl
00003caf:	xor al, cl
00003cb1:	mov [di+0xa], al
00003cb4:	mov bl, [si+0xd]
00003cb7:	mov al, [bx+0x67d8]
00003cbb:	mov bl, [si+0x7]
00003cbe:	mov cl, [bx+0x69d8]
00003cc2:	mov bl, [si+0x8]
00003cc5:	mov dl, [bx+0x6ad8]
00003cc9:	mov bl, [si+0x2]
00003ccc:	xor dl, [bx+0x67d8]
00003cd0:	xor cl, dl
00003cd2:	xor al, cl
00003cd4:	mov [di+0xb], al
00003cd7:	mov bl, [si+0xb]
00003cda:	mov al, [bx+0x67d8]
00003cde:	mov bl, [si+0xc]
00003ce1:	mov cl, [bx+0x69d8]
00003ce5:	mov bl, [si+0x6]
00003ce8:	mov dl, [bx+0x67d8]
00003cec:	mov bl, [si+0x1]
00003cef:	xor dl, [bx+0x6ad8]
00003cf3:	xor cl, dl
00003cf5:	xor al, cl
00003cf7:	mov [di+0xc], al
00003cfa:	mov bl, [si+0xc]
00003cfd:	mov al, [bx+0x67d8]
00003d01:	mov bl, [si+0xb]
00003d04:	mov cl, [bx+0x67d8]
00003d08:	mov bl, [si+0x6]
00003d0b:	mov dl, [bx+0x6ad8]
00003d0f:	mov bl, [si+0x1]
00003d12:	xor dl, [bx+0x69d8]
00003d16:	xor cl, dl
00003d18:	xor al, cl
00003d1a:	mov [di+0xd], al
00003d1d:	mov bl, [si+0xc]
00003d20:	mov al, [bx+0x67d8]
00003d24:	mov bl, [si+0xb]
00003d27:	mov cl, [bx+0x6ad8]
00003d2b:	mov bl, [si+0x6]
00003d2e:	mov dl, [bx+0x69d8]
00003d32:	mov bl, [si+0x1]
00003d35:	xor dl, [bx+0x67d8]
00003d39:	xor cl, dl
00003d3b:	xor al, cl
00003d3d:	mov [di+0xe], al
00003d40:	mov bl, [si+0x1]
00003d43:	mov al, [bx+0x67d8]
00003d47:	mov bl, [si+0x6]
00003d4a:	xor al, [bx+0x67d8]
00003d4e:	mov bl, [si+0xc]
00003d51:	xor al, [bx+0x6ad8]
00003d55:	mov bl, [si+0xb]
00003d58:	xor al, [bx+0x69d8]
00003d5c:	mov [di+0xf], al
00003d5f:	pop si
00003d60:	pop di
00003d61:	leave
00003d62:	ret
---ENDPROC---  ; sub_3b1e ; length = 581 bytes ; 0 calls out

00003d63:	db 0x00 

---STARTPROC---
sub_3d64:
00003d64:	push bp
00003d65:	mov bp, sp
00003d67:	push di
00003d68:	push si
00003d69:	mov si, [bp+0x6]
00003d6c:	mov di, [bp+0x4]
00003d6f:	mov bl, [si]
00003d71:	sub bh, bh
00003d73:	mov al, [bx+0x6ed8]
00003d77:	mov bl, [si+0x3]
00003d7a:	mov cl, [bx+0x6bd8]
00003d7e:	mov bl, [si+0x2]
00003d81:	mov dl, [bx+0x6dd8]
00003d85:	mov bl, [si+0x1]
00003d88:	mov bl, [bx+0x6cd8]
00003d8c:	xor bl, dl
00003d8e:	xor bl, cl
00003d90:	xor bl, al
00003d92:	mov al, [bx+0x68d8]
00003d96:	mov [di], al
00003d98:	mov bl, [si]
00003d9a:	mov al, [bx+0x6bd8]
00003d9e:	mov bl, [si+0x3]
00003da1:	mov cl, [bx+0x6dd8]
00003da5:	mov bl, [si+0x2]
00003da8:	mov dl, [bx+0x6cd8]
00003dac:	mov bl, [si+0x1]
00003daf:	mov bl, [bx+0x6ed8]
00003db3:	xor bl, dl
00003db5:	xor bl, cl
00003db7:	xor bl, al
00003db9:	mov al, [bx+0x68d8]
00003dbd:	mov [di+0x5], al
00003dc0:	mov bl, [si]
00003dc2:	mov al, [bx+0x6dd8]
00003dc6:	mov bl, [si+0x3]
00003dc9:	mov cl, [bx+0x6cd8]
00003dcd:	mov bl, [si+0x1]
00003dd0:	mov dl, [bx+0x6bd8]
00003dd4:	mov bl, [si+0x2]
00003dd7:	mov bl, [bx+0x6ed8]
00003ddb:	xor bl, dl
00003ddd:	xor bl, cl
00003ddf:	xor bl, al
00003de1:	mov al, [bx+0x68d8]
00003de5:	mov [di+0xa], al
00003de8:	mov bl, [si]
00003dea:	mov al, [bx+0x6cd8]
00003dee:	mov bl, [si+0x2]
00003df1:	mov cl, [bx+0x6bd8]
00003df5:	mov bl, [si+0x3]
00003df8:	mov dl, [bx+0x6ed8]
00003dfc:	mov bl, [si+0x1]
00003dff:	mov bl, [bx+0x6dd8]
00003e03:	xor bl, dl
00003e05:	xor bl, cl
00003e07:	xor bl, al
00003e09:	mov al, [bx+0x68d8]
00003e0d:	mov [di+0xf], al
00003e10:	mov bl, [si+0x7]
00003e13:	mov al, [bx+0x6bd8]
00003e17:	mov bl, [si+0x6]
00003e1a:	mov cl, [bx+0x6dd8]
00003e1e:	mov bl, [si+0x5]
00003e21:	mov dl, [bx+0x6cd8]
00003e25:	mov bl, [si+0x4]
00003e28:	mov bl, [bx+0x6ed8]
00003e2c:	xor bl, dl
00003e2e:	xor bl, cl
00003e30:	xor bl, al
00003e32:	mov al, [bx+0x68d8]
00003e36:	mov [di+0x4], al
00003e39:	mov bl, [si+0x7]
00003e3c:	mov al, [bx+0x6dd8]
00003e40:	mov bl, [si+0x6]
00003e43:	mov cl, [bx+0x6cd8]
00003e47:	mov bl, [si+0x4]
00003e4a:	mov dl, [bx+0x6bd8]
00003e4e:	mov bl, [si+0x5]
00003e51:	mov bl, [bx+0x6ed8]
00003e55:	xor bl, dl
00003e57:	xor bl, cl
00003e59:	xor bl, al
00003e5b:	mov al, [bx+0x68d8]
00003e5f:	mov [di+0x9], al
00003e62:	mov bl, [si+0x7]
00003e65:	mov al, [bx+0x6cd8]
00003e69:	mov bl, [si+0x5]
00003e6c:	mov cl, [bx+0x6bd8]
00003e70:	mov bl, [si+0x6]
00003e73:	mov dl, [bx+0x6ed8]
00003e77:	mov bl, [si+0x4]
00003e7a:	mov bl, [bx+0x6dd8]
00003e7e:	xor bl, dl
00003e80:	xor bl, cl
00003e82:	xor bl, al
00003e84:	mov al, [bx+0x68d8]
00003e88:	mov [di+0xe], al
00003e8b:	mov bl, [si+0x6]
00003e8e:	mov al, [bx+0x6bd8]
00003e92:	mov bl, [si+0x7]
00003e95:	mov cl, [bx+0x6ed8]
00003e99:	mov bl, [si+0x5]
00003e9c:	mov dl, [bx+0x6dd8]
00003ea0:	mov bl, [si+0x4]
00003ea3:	mov bl, [bx+0x6cd8]
00003ea7:	xor bl, dl
00003ea9:	xor bl, cl
00003eab:	xor bl, al
00003ead:	mov al, [bx+0x68d8]
00003eb1:	mov [di+0x3], al
00003eb4:	mov bl, [si+0xb]
00003eb7:	mov al, [bx+0x6bd8]
00003ebb:	mov bl, [si+0xa]
00003ebe:	mov cl, [bx+0x6dd8]
00003ec2:	mov bl, [si+0x9]
00003ec5:	mov dl, [bx+0x6cd8]
00003ec9:	mov bl, [si+0x8]
00003ecc:	mov bl, [bx+0x6ed8]
00003ed0:	xor bl, dl
00003ed2:	xor bl, cl
00003ed4:	xor bl, al
00003ed6:	mov al, [bx+0x68d8]
00003eda:	mov [di+0x8], al
00003edd:	mov bl, [si+0xb]
00003ee0:	mov al, [bx+0x6dd8]
00003ee4:	mov bl, [si+0xa]
00003ee7:	mov cl, [bx+0x6cd8]
00003eeb:	mov bl, [si+0x8]
00003eee:	mov dl, [bx+0x6bd8]
00003ef2:	mov bl, [si+0x9]
00003ef5:	mov bl, [bx+0x6ed8]
00003ef9:	xor bl, dl
00003efb:	xor bl, cl
00003efd:	xor bl, al
00003eff:	mov al, [bx+0x68d8]
00003f03:	mov [di+0xd], al
00003f06:	mov bl, [si+0xb]
00003f09:	mov al, [bx+0x6cd8]
00003f0d:	mov bl, [si+0x9]
00003f10:	mov cl, [bx+0x6bd8]
00003f14:	mov bl, [si+0xa]
00003f17:	mov dl, [bx+0x6ed8]
00003f1b:	mov bl, [si+0x8]
00003f1e:	mov bl, [bx+0x6dd8]
00003f22:	xor bl, dl
00003f24:	xor bl, cl
00003f26:	xor bl, al
00003f28:	mov al, [bx+0x68d8]
00003f2c:	mov [di+0x2], al
00003f2f:	mov bl, [si+0xa]
00003f32:	mov al, [bx+0x6bd8]
00003f36:	mov bl, [si+0xb]
00003f39:	mov cl, [bx+0x6ed8]
00003f3d:	mov bl, [si+0x9]
00003f40:	mov dl, [bx+0x6dd8]
00003f44:	mov bl, [si+0x8]
00003f47:	mov bl, [bx+0x6cd8]
00003f4b:	xor bl, dl
00003f4d:	xor bl, cl
00003f4f:	xor bl, al
00003f51:	mov al, [bx+0x68d8]
00003f55:	mov [di+0x7], al
00003f58:	mov bl, [si+0xf]
00003f5b:	mov al, [bx+0x6bd8]
00003f5f:	mov bl, [si+0xe]
00003f62:	mov cl, [bx+0x6dd8]
00003f66:	mov bl, [si+0xd]
00003f69:	mov dl, [bx+0x6cd8]
00003f6d:	mov bl, [si+0xc]
00003f70:	mov bl, [bx+0x6ed8]
00003f74:	xor bl, dl
00003f76:	xor bl, cl
00003f78:	xor bl, al
00003f7a:	mov al, [bx+0x68d8]
00003f7e:	mov [di+0xc], al
00003f81:	mov bl, [si+0xf]
00003f84:	mov al, [bx+0x6dd8]
00003f88:	mov bl, [si+0xe]
00003f8b:	mov cl, [bx+0x6cd8]
00003f8f:	mov bl, [si+0xc]
00003f92:	mov dl, [bx+0x6bd8]
00003f96:	mov bl, [si+0xd]
00003f99:	mov bl, [bx+0x6ed8]
00003f9d:	xor bl, dl
00003f9f:	xor bl, cl
00003fa1:	xor bl, al
00003fa3:	mov al, [bx+0x68d8]
00003fa7:	mov [di+0x1], al
00003faa:	mov bl, [si+0xf]
00003fad:	mov al, [bx+0x6cd8]
00003fb1:	mov bl, [si+0xd]
00003fb4:	mov cl, [bx+0x6bd8]
00003fb8:	mov bl, [si+0xe]
00003fbb:	mov dl, [bx+0x6ed8]
00003fbf:	mov bl, [si+0xc]
00003fc2:	mov bl, [bx+0x6dd8]
00003fc6:	xor bl, dl
00003fc8:	xor bl, cl
00003fca:	xor bl, al
00003fcc:	mov al, [bx+0x68d8]
00003fd0:	mov [di+0x6], al
00003fd3:	mov bl, [si+0xe]
00003fd6:	mov al, [bx+0x6bd8]
00003fda:	mov bl, [si+0xf]
00003fdd:	mov cl, [bx+0x6ed8]
00003fe1:	mov bl, [si+0xd]
00003fe4:	mov dl, [bx+0x6dd8]
00003fe8:	mov bl, [si+0xc]
00003feb:	mov bl, [bx+0x6cd8]
00003fef:	xor bl, dl
00003ff1:	xor bl, cl
00003ff3:	xor bl, al
00003ff5:	mov al, [bx+0x68d8]
00003ff9:	mov [di+0xb], al
00003ffc:	pop si
00003ffd:	pop di
00003ffe:	leave
00003fff:	ret
---ENDPROC---  ; sub_3d64 ; length = 668 bytes ; 0 calls out


---STARTPROC---
sub_4000:
00004000:	enter 0x8, 0x0
00004004:	push di
00004005:	push si
00004006:	mov al, [bp+0x6]
00004009:	sub ah, ah
0000400b:	cmp ax, 0x20
0000400e:	jz 0x4048
00004010:	jg 0x402a
00004012:	sub ax, 0x10
00004015:	jz 0x403c
00004017:	sub ax, 0x8
0000401a:	jz 0x4042
lbl_401c:
0000401c:	mov bx, [bp+0x8]
0000401f:	mov al, 0xff
00004021:	mov byte [bx+0xf0], 0x0
00004026:	pop si
00004027:	pop di
00004028:	leave
00004029:	ret
---ENDPROC---  ; sub_4000 ; length = 42 bytes ; 0 calls out

lbl_402a:
0000402a:	sub ax, 0x80
0000402d:	jz 0x403c
0000402f:	sub ax, 0x40
00004032:	jz 0x4042
00004034:	sub ax, 0x40
00004037:	jz 0x4048
00004039:	jmp 0x401c
0000403b:	db 0x90 
lbl_403c:
0000403c:	mov byte [bp+0x6], 0x10
00004040:	jmp 0x404c
lbl_4042:
00004042:	mov byte [bp+0x6], 0x18
00004046:	jmp 0x404c
lbl_4048:
00004048:	mov byte [bp+0x6], 0x20
lbl_404c:
0000404c:	mov ax, [bp+0x4]
0000404f:	mov cl, [bp+0x6]
00004052:	sub ch, ch
00004054:	mov si, ax
00004056:	push ds
00004057:	pop es
00004058:	mov di, [bp+0x8]
0000405b:	shr cx, 0x1
0000405d:	rep movsw
0000405f:	adc cx, cx
00004061:	rep movsb
00004063:	mov al, [bp+0x6]
00004066:	add al, 0x1c
00004068:	shl al, 0x2
0000406b:	mov [bp-0x7], al
0000406e:	shr al, 0x4
00004071:	mov bx, [bp+0x8]
00004074:	dec al
00004076:	mov [bx+0xf0], al
0000407a:	mov al, [bp+0x6]
0000407d:	mov [bp-0x1], al
00004080:	mov byte [bp-0x6], 0x1
00004084:	mov si, [bp+0x8]
00004087:	jmp 0x4174
lbl_408a:
0000408a:	mov bl, [bp-0x1]
0000408d:	sub bh, bh
0000408f:	add bx, si
00004091:	mov al, [bx-0x4]
00004094:	mov [bp-0x2], al
00004097:	mov al, [bx-0x3]
0000409a:	mov [bp-0x3], al
0000409d:	mov al, [bx-0x2]
000040a0:	mov [bp-0x4], al
000040a3:	mov al, [bx-0x1]
000040a6:	mov [bp-0x5], al
000040a9:	mov al, [bp-0x1]
000040ac:	sub ah, ah
000040ae:	div byte [bp+0x6]
000040b1:	or ah, ah
000040b3:	jnz 0x4100
000040b5:	mov al, [bp-0x2]
000040b8:	mov [bp-0x8], al
000040bb:	mov bl, [bp-0x3]
000040be:	sub bh, bh
000040c0:	mov al, [bx+0x67d8]
000040c4:	xor al, [bp-0x6]
000040c7:	mov [bp-0x2], al
000040ca:	mov bl, [bp-0x4]
000040cd:	mov al, [bx+0x67d8]
000040d1:	mov [bp-0x3], al
000040d4:	mov bl, [bp-0x5]
000040d7:	mov al, [bx+0x67d8]
000040db:	mov [bp-0x4], al
000040de:	mov bl, [bp-0x8]
000040e1:	mov al, [bx+0x67d8]
000040e5:	mov [bp-0x5], al
000040e8:	mov al, [bp-0x6]
000040eb:	add al, al
000040ed:	mov cx, ax
000040ef:	mov al, [bp-0x6]
000040f2:	shr al, 0x7
000040f5:	mov dl, 0x1b
000040f7:	mul dl
000040f9:	xor cl, al
000040fb:	mov [bp-0x6], cl
000040fe:	jmp 0x413d
lbl_4100:
00004100:	cmp byte [bp+0x6], 0x18
00004104:	jbe 0x413d
00004106:	mov al, [bp-0x1]
00004109:	sub ah, ah
0000410b:	div byte [bp+0x6]
0000410e:	cmp ah, 0x10
00004111:	jnz 0x413d
00004113:	mov bl, [bp-0x2]
00004116:	sub bh, bh
00004118:	mov al, [bx+0x67d8]
0000411c:	mov [bp-0x2], al
0000411f:	mov bl, [bp-0x3]
00004122:	mov al, [bx+0x67d8]
00004126:	mov [bp-0x3], al
00004129:	mov bl, [bp-0x4]
0000412c:	mov al, [bx+0x67d8]
00004130:	mov [bp-0x4], al
00004133:	mov bl, [bp-0x5]
00004136:	mov al, [bx+0x67d8]
0000413a:	mov [bp-0x5], al
lbl_413d:
0000413d:	mov bl, [bp-0x1]
00004140:	sub bl, [bp+0x6]
00004143:	sub bh, bh
00004145:	mov al, [bx+si]
00004147:	xor al, [bp-0x2]
0000414a:	lea cx, [bx+si]
0000414c:	mov bl, [bp-0x1]
0000414f:	mov di, cx
00004151:	mov [bx+si], al
00004153:	mov al, [di+0x1]
00004156:	xor al, [bp-0x3]
00004159:	add bx, si
0000415b:	mov [bx+0x1], al
0000415e:	mov al, [di+0x2]
00004161:	xor al, [bp-0x4]
00004164:	mov [bx+0x2], al
00004167:	mov al, [di+0x3]
0000416a:	xor al, [bp-0x5]
0000416d:	mov [bx+0x3], al
00004170:	add byte [bp-0x1], 0x4
lbl_4174:
00004174:	mov al, [bp-0x1]
00004177:	cmp [bp-0x7], al
0000417a:	ja 0x408a
0000417e:	xor al, al
00004180:	pop si
00004181:	pop di
00004182:	leave
00004183:	ret

---STARTPROC---
sub_4184:
00004184:	enter 0x22, 0x0
00004188:	push si
00004189:	mov si, [bp+0x8]
0000418c:	cmp byte [si+0xf0], 0x0
00004191:	jz 0x4202
00004193:	push si
00004194:	push word [bp+0x4]
00004197:	lea ax, [bp-0x22]
0000419a:	push ax
0000419b:	call 0x3956
0000419e:	add sp, 0x6
000041a1:	mov byte [bp-0x1], 0x1
000041a5:	jmp 0x41d2
000041a7:	db 0x90 
lbl_41a8:
000041a8:	lea ax, [bp-0x22]
000041ab:	push ax
000041ac:	lea cx, [bp-0x12]
000041af:	push cx
000041b0:	call 0x3b1e
000041b3:	add sp, 0x4
000041b6:	mov al, [bp-0x1]
000041b9:	sub ah, ah
000041bb:	shl ax, 0x4
000041be:	add ax, si
000041c0:	push ax
000041c1:	lea ax, [bp-0x12]
000041c4:	push ax
000041c5:	lea ax, [bp-0x22]
000041c8:	push ax
000041c9:	call 0x3956
000041cc:	add sp, 0x6
000041cf:	inc byte [bp-0x1]
lbl_41d2:
000041d2:	mov al, [bp-0x1]
000041d5:	cmp [si+0xf0], al
000041d9:	ja 0x41a8
000041db:	lea ax, [bp-0x22]
000041de:	push ax
000041df:	call 0x3996
000041e2:	add sp, 0x2
000041e5:	mov al, [bp-0x1]
000041e8:	sub ah, ah
000041ea:	shl ax, 0x4
000041ed:	add ax, si
000041ef:	push ax
000041f0:	lea ax, [bp-0x22]
000041f3:	push ax
000041f4:	push word [bp+0x6]
000041f7:	call 0x3956
000041fa:	add sp, 0x6
000041fd:	xor al, al
000041ff:	pop si
00004200:	leave
00004201:	ret
---ENDPROC---  ; sub_4184 ; length = 126 bytes ; 5 calls out

lbl_4202:
00004202:	mov al, 0xff
00004204:	pop si
00004205:	leave
00004206:	ret
00004207:	db 0x00 

---STARTPROC---
sub_4208:
00004208:	enter 0x22, 0x0
0000420c:	push si
0000420d:	mov si, [bp+0x8]
00004210:	cmp byte [si+0xf0], 0x0
00004215:	jz 0x4284
00004217:	mov al, [si+0xf0]
0000421b:	sub ah, ah
0000421d:	shl ax, 0x4
00004220:	add ax, si
00004222:	push ax
00004223:	push word [bp+0x4]
00004226:	lea ax, [bp-0x22]
00004229:	push ax
0000422a:	call 0x3956
0000422d:	add sp, 0x6
00004230:	lea ax, [bp-0x22]
00004233:	push ax
00004234:	call 0x3a5a
00004237:	add sp, 0x2
0000423a:	mov al, [si+0xf0]
0000423e:	mov [bp-0x1], al
00004241:	jmp 0x426b
00004243:	db 0x90 
lbl_4244:
00004244:	mov al, [bp-0x1]
00004247:	sub ah, ah
00004249:	shl ax, 0x4
0000424c:	add ax, si
0000424e:	push ax
0000424f:	lea ax, [bp-0x22]
00004252:	push ax
00004253:	lea cx, [bp-0x12]
00004256:	push cx
00004257:	call 0x3956
0000425a:	add sp, 0x6
0000425d:	lea ax, [bp-0x12]
00004260:	push ax
00004261:	lea ax, [bp-0x22]
00004264:	push ax
00004265:	call 0x3d64
00004268:	add sp, 0x4
lbl_426b:
0000426b:	dec byte [bp-0x1]
0000426e:	jnz 0x4244
00004270:	push si
00004271:	lea ax, [bp-0x22]
00004274:	push ax
00004275:	push word [bp+0x6]
00004278:	call 0x3956
0000427b:	add sp, 0x6
0000427e:	xor al, al
00004280:	pop si
00004281:	leave
00004282:	ret
---ENDPROC---  ; sub_4208 ; length = 123 bytes ; 5 calls out

00004283:	db 0x90 
lbl_4284:
00004284:	mov al, 0xff
00004286:	pop si
00004287:	leave
00004288:	ret
00004289:	db 0x90 

---STARTPROC---
sub_428a:
0000428a:	push bp
0000428b:	mov bp, sp
0000428d:	push di
0000428e:	push si
0000428f:	mov cx, [bp+0x6]
00004292:	mov di, [bp+0xa]
00004295:	mov si, [bp+0x4]
00004298:	mov bx, [bp+0xc]
0000429b:	mov ax, [si]
0000429d:	mov dx, [si+0x2]
000042a0:	xor [di], ax
000042a2:	mov si, cx
000042a4:	xor [di+0x2], dx
000042a7:	mov eax, [si]
000042aa:	mov [bx], eax
000042ad:	mov eax, [di]
000042b0:	and [si], eax
000042b3:	mov ax, bx
000042b5:	mov bx, [bp+0x8]
000042b8:	mov ecx, [bx]
000042bb:	mov bx, ax
000042bd:	xor [bx], ecx
000042c0:	mov bx, [bp+0x4]
000042c3:	mov ecx, [bx]
000042c6:	xor [si], ecx
000042c9:	mov ecx, [di]
000042cc:	or [bx], ecx
000042cf:	mov bx, ax
000042d1:	mov ecx, [bx]
000042d4:	mov bx, [bp+0x4]
000042d7:	xor [bx], ecx
000042da:	mov cx, [di]
000042dc:	mov bx, ax
000042de:	mov dx, [di+0x2]
000042e1:	xor [bx], cx
000042e3:	xor [bx+0x2], dx
000042e6:	mov bx, [bp+0x8]
000042e9:	mov ecx, [bx]
000042ec:	xor [di], ecx
000042ef:	mov ecx, [si]
000042f2:	or [bx], ecx
000042f5:	mov bx, ax
000042f7:	mov ecx, [bx]
000042fa:	mov bx, [bp+0x8]
000042fd:	xor [bx], ecx
00004300:	mov bx, ax
00004302:	not word [bx]
00004304:	not word [bx+0x2]
00004307:	mov ecx, [si]
0000430a:	or [bx], ecx
0000430d:	mov ecx, [di]
00004310:	xor [si], ecx
00004313:	mov ecx, [bx]
00004316:	xor [si], ecx
00004319:	mov bx, [bp+0x4]
0000431c:	mov ecx, [bx]
0000431f:	or [di], ecx
00004322:	mov ecx, [di]
00004325:	xor [si], ecx
00004328:	mov bx, ax
0000432a:	mov ecx, [di]
0000432d:	xor [bx], ecx
00004330:	pop si
00004331:	pop di
00004332:	leave
00004333:	ret
---ENDPROC---  ; sub_428a ; length = 170 bytes ; 0 calls out


---STARTPROC---
sub_4334:
00004334:	push bp
00004335:	mov bp, sp
00004337:	push di
00004338:	push si
00004339:	mov cx, [bp+0x6]
0000433c:	mov di, [bp+0x8]
0000433f:	mov bx, [bp+0x4]
00004342:	not word [bx]
00004344:	not word [bx+0x2]
00004347:	not word [di]
00004349:	not word [di+0x2]
0000434c:	mov ax, [bx]
0000434e:	mov si, [bp+0xc]
00004351:	mov dx, [bx+0x2]
00004354:	mov [si], ax
00004356:	mov [si+0x2], dx
00004359:	mov si, cx
0000435b:	mov eax, [si]
0000435e:	and [bx], eax
00004361:	mov eax, [bx]
00004364:	xor [di], eax
00004367:	mov ax, bx
00004369:	mov bx, [bp+0xa]
0000436c:	mov ecx, [bx]
0000436f:	mov bx, ax
00004371:	or [bx], ecx
00004374:	mov cx, [di]
00004376:	mov bx, [bp+0xa]
00004379:	mov dx, [di+0x2]
0000437c:	xor [bx], cx
0000437e:	xor [bx+0x2], dx
00004381:	mov bx, ax
00004383:	mov ecx, [bx]
00004386:	xor [si], ecx
00004389:	mov bx, [bp+0xc]
0000438c:	mov ecx, [bx]
0000438f:	mov bx, ax
00004391:	xor [bx], ecx
00004394:	mov cx, [si]
00004396:	mov bx, [bp+0xc]
00004399:	mov dx, [si+0x2]
0000439c:	or [bx], cx
0000439e:	or [bx+0x2], dx
000043a1:	mov bx, [bp+0xa]
000043a4:	mov cx, [bx]
000043a6:	mov dx, [bx+0x2]
000043a9:	xor [si], cx
000043ab:	mov bx, ax
000043ad:	xor [si+0x2], dx
000043b0:	mov ecx, [bx]
000043b3:	or [di], ecx
000043b6:	mov bx, [bp+0xc]
000043b9:	mov ecx, [bx]
000043bc:	and [di], ecx
000043bf:	mov cx, [si]
000043c1:	mov bx, ax
000043c3:	mov dx, [si+0x2]
000043c6:	xor [bx], cx
000043c8:	xor [bx+0x2], dx
000043cb:	mov ecx, [di]
000043ce:	and [si], ecx
000043d1:	mov ecx, [bx]
000043d4:	xor [si], ecx
000043d7:	mov ecx, [di]
000043da:	and [bx], ecx
000043dd:	mov si, [bp+0xc]
000043e0:	mov ecx, [si]
000043e3:	xor [bx], ecx
000043e6:	pop si
000043e7:	pop di
000043e8:	leave
000043e9:	ret
---ENDPROC---  ; sub_4334 ; length = 182 bytes ; 0 calls out


---STARTPROC---
sub_43ea:
000043ea:	push bp
000043eb:	mov bp, sp
000043ed:	push di
000043ee:	push si
000043ef:	mov cx, [bp+0x4]
000043f2:	mov di, [bp+0xa]
000043f5:	mov si, cx
000043f7:	mov bx, [bp+0xc]
000043fa:	mov eax, [si]
000043fd:	mov [bx], eax
00004400:	mov ax, bx
00004402:	mov bx, [bp+0x8]
00004405:	mov ecx, [bx]
00004408:	and [si], ecx
0000440b:	mov ecx, [di]
0000440e:	xor [si], ecx
00004411:	mov bx, [bp+0x6]
00004414:	mov ecx, [bx]
00004417:	mov bx, [bp+0x8]
0000441a:	xor [bx], ecx
0000441d:	mov ecx, [si]
00004420:	xor [bx], ecx
00004423:	mov bx, ax
00004425:	mov ecx, [bx]
00004428:	or [di], ecx
0000442b:	mov bx, [bp+0x6]
0000442e:	mov ecx, [bx]
00004431:	xor [di], ecx
00004434:	mov bx, [bp+0x8]
00004437:	mov ecx, [bx]
0000443a:	mov bx, ax
0000443c:	xor [bx], ecx
0000443f:	mov cx, [di]
00004441:	mov bx, [bp+0x6]
00004444:	mov dx, [di+0x2]
00004447:	mov [bx], cx
00004449:	mov [bx+0x2], dx
0000444c:	mov bx, ax
0000444e:	mov ecx, [bx]
00004451:	or [di], ecx
00004454:	mov ecx, [si]
00004457:	xor [di], ecx
0000445a:	mov bx, [bp+0x6]
0000445d:	mov ecx, [bx]
00004460:	and [si], ecx
00004463:	mov ecx, [si]
00004466:	mov si, ax
00004468:	xor [si], ecx
0000446b:	mov ecx, [di]
0000446e:	xor [bx], ecx
00004471:	mov ecx, [si]
00004474:	xor [bx], ecx
00004477:	not word [si]
00004479:	not word [si+0x2]
0000447c:	pop si
0000447d:	pop di
0000447e:	leave
0000447f:	ret
---ENDPROC---  ; sub_43ea ; length = 150 bytes ; 0 calls out


---STARTPROC---
sub_4480:
00004480:	push bp
00004481:	mov bp, sp
00004483:	push di
00004484:	push si
00004485:	mov cx, [bp+0x4]
00004488:	mov di, [bp+0xa]
0000448b:	mov si, cx
0000448d:	mov bx, [bp+0x6]
00004490:	mov eax, [si]
00004493:	mov si, [bp+0xc]
00004496:	mov [si], eax
00004499:	mov ax, [di]
0000449b:	mov si, cx
0000449d:	mov dx, [di+0x2]
000044a0:	or [si], ax
000044a2:	or [si+0x2], dx
000044a5:	mov eax, [bx]
000044a8:	xor [di], eax
000044ab:	mov si, [bp+0xc]
000044ae:	mov eax, [si]
000044b1:	and [bx], eax
000044b4:	mov si, [bp+0x8]
000044b7:	mov eax, [si]
000044ba:	mov si, [bp+0xc]
000044bd:	xor [si], eax
000044c0:	mov ax, [di]
000044c2:	mov si, [bp+0x8]
000044c5:	mov dx, [di+0x2]
000044c8:	xor [si], ax
000044ca:	xor [si+0x2], dx
000044cd:	mov si, cx
000044cf:	mov eax, [si]
000044d2:	and [di], eax
000044d5:	mov ax, [bx]
000044d7:	mov si, [bp+0xc]
000044da:	mov dx, [bx+0x2]
000044dd:	or [si], ax
000044df:	or [si+0x2], dx
000044e2:	mov eax, [si]
000044e5:	xor [di], eax
000044e8:	mov ax, [bx]
000044ea:	mov si, cx
000044ec:	mov dx, [bx+0x2]
000044ef:	xor [si], ax
000044f1:	xor [si+0x2], dx
000044f4:	mov eax, [si]
000044f7:	mov si, [bp+0xc]
000044fa:	and [si], eax
000044fd:	mov eax, [di]
00004500:	xor [bx], eax
00004503:	mov si, [bp+0x8]
00004506:	mov eax, [si]
00004509:	mov si, [bp+0xc]
0000450c:	xor [si], eax
0000450f:	mov si, cx
00004511:	mov eax, [si]
00004514:	or [bx], eax
00004517:	mov si, [bp+0x8]
0000451a:	mov eax, [si]
0000451d:	xor [bx], eax
00004520:	mov ax, [di]
00004522:	mov si, cx
00004524:	mov dx, [di+0x2]
00004527:	xor [si], ax
00004529:	xor [si+0x2], dx
0000452c:	mov ax, [bx]
0000452e:	mov si, [bp+0x8]
00004531:	mov dx, [bx+0x2]
00004534:	mov [si], ax
00004536:	mov [si+0x2], dx
00004539:	mov ax, [di]
0000453b:	mov dx, [di+0x2]
0000453e:	or [bx], ax
00004540:	mov si, cx
00004542:	or [bx+0x2], dx
00004545:	mov eax, [si]
00004548:	xor [bx], eax
0000454b:	pop si
0000454c:	pop di
0000454d:	leave
0000454e:	ret
---ENDPROC---  ; sub_4480 ; length = 207 bytes ; 0 calls out

0000454f:	db 0x00 

---STARTPROC---
sub_4550:
00004550:	push bp
00004551:	mov bp, sp
00004553:	push di
00004554:	push si
00004555:	mov cx, [bp+0x8]
00004558:	mov bx, [bp+0xa]
0000455b:	mov di, [bp+0x4]
0000455e:	mov ax, [bx]
00004560:	mov si, [bp+0x6]
00004563:	mov dx, [bx+0x2]
00004566:	xor [si], ax
00004568:	xor [si+0x2], dx
0000456b:	mov ax, [bx]
0000456d:	mov dx, [bx+0x2]
00004570:	not ax
00004572:	not dx
00004574:	mov [bx], ax
00004576:	mov si, cx
00004578:	mov [bx+0x2], dx
0000457b:	xor [si], ax
0000457d:	xor [si+0x2], dx
00004580:	mov eax, [di]
00004583:	xor [bx], eax
00004586:	mov ax, bx
00004588:	mov bx, [bp+0x6]
0000458b:	mov ecx, [bx]
0000458e:	mov bx, [bp+0xc]
00004591:	mov [bx], ecx
00004594:	mov bx, ax
00004596:	mov ecx, [bx]
00004599:	mov bx, [bp+0x6]
0000459c:	and [bx], ecx
0000459f:	mov ecx, [si]
000045a2:	xor [bx], ecx
000045a5:	mov bx, ax
000045a7:	mov ecx, [bx]
000045aa:	mov bx, [bp+0xc]
000045ad:	xor [bx], ecx
000045b0:	mov ecx, [bx]
000045b3:	xor [di], ecx
000045b6:	mov ecx, [bx]
000045b9:	and [si], ecx
000045bc:	mov ecx, [di]
000045bf:	xor [si], ecx
000045c2:	mov bx, [bp+0x6]
000045c5:	mov ecx, [bx]
000045c8:	and [di], ecx
000045cb:	mov cx, [di]
000045cd:	mov bx, ax
000045cf:	mov dx, [di+0x2]
000045d2:	xor [bx], cx
000045d4:	xor [bx+0x2], dx
000045d7:	mov bx, [bp+0x6]
000045da:	mov ecx, [bx]
000045dd:	mov bx, [bp+0xc]
000045e0:	or [bx], ecx
000045e3:	mov ecx, [di]
000045e6:	xor [bx], ecx
000045e9:	mov bx, ax
000045eb:	mov ecx, [bx]
000045ee:	or [di], ecx
000045f1:	mov ecx, [si]
000045f4:	xor [di], ecx
000045f7:	mov ecx, [bx]
000045fa:	and [si], ecx
000045fd:	not word [di]
000045ff:	not word [di+0x2]
00004602:	mov ax, [si]
00004604:	mov bx, [bp+0xc]
00004607:	mov dx, [si+0x2]
0000460a:	xor [bx], ax
0000460c:	xor [bx+0x2], dx
0000460f:	pop si
00004610:	pop di
00004611:	leave
00004612:	ret
---ENDPROC---  ; sub_4550 ; length = 195 bytes ; 0 calls out

00004613:	db 0x00 

---STARTPROC---
sub_4614:
00004614:	push bp
00004615:	mov bp, sp
00004617:	push di
00004618:	push si
00004619:	mov cx, [bp+0xc]
0000461c:	mov di, [bp+0x6]
0000461f:	mov bx, [bp+0xa]
00004622:	mov ax, [di]
00004624:	mov si, [bp+0x4]
00004627:	mov dx, [di+0x2]
0000462a:	xor [si], ax
0000462c:	xor [si+0x2], dx
0000462f:	mov eax, [bx]
00004632:	xor [di], eax
00004635:	not word [bx]
00004637:	not word [bx+0x2]
0000463a:	mov ax, [di]
0000463c:	mov si, cx
0000463e:	mov dx, [di+0x2]
00004641:	mov [si], ax
00004643:	mov [si+0x2], dx
00004646:	mov ax, bx
00004648:	mov bx, [bp+0x4]
0000464b:	mov cx, [bx]
0000464d:	mov dx, [bx+0x2]
00004650:	and [di], cx
00004652:	mov bx, ax
00004654:	and [di+0x2], dx
00004657:	mov ecx, [bx]
0000465a:	mov bx, [bp+0x8]
0000465d:	xor [bx], ecx
00004660:	mov ecx, [bx]
00004663:	xor [di], ecx
00004666:	mov ecx, [si]
00004669:	or [bx], ecx
0000466c:	mov bx, ax
0000466e:	mov ecx, [bx]
00004671:	xor [si], ecx
00004674:	mov ecx, [di]
00004677:	and [bx], ecx
0000467a:	mov bx, [bp+0x4]
0000467d:	mov ecx, [bx]
00004680:	mov bx, ax
00004682:	xor [bx], ecx
00004685:	mov ecx, [di]
00004688:	xor [si], ecx
0000468b:	mov di, [bp+0x8]
0000468e:	mov ecx, [di]
00004691:	xor [si], ecx
00004694:	mov bx, [bp+0x4]
00004697:	mov cx, [bx]
00004699:	mov dx, [bx+0x2]
0000469c:	xor [di], cx
0000469e:	mov bx, ax
000046a0:	xor [di+0x2], dx
000046a3:	mov ecx, [bx]
000046a6:	mov bx, [bp+0x4]
000046a9:	and [bx], ecx
000046ac:	not word [di]
000046ae:	not word [di+0x2]
000046b1:	mov ecx, [si]
000046b4:	xor [bx], ecx
000046b7:	mov bx, ax
000046b9:	mov ecx, [bx]
000046bc:	or [si], ecx
000046bf:	mov eax, [si]
000046c2:	xor [di], eax
000046c5:	pop si
000046c6:	pop di
000046c7:	leave
000046c8:	ret
---ENDPROC---  ; sub_4614 ; length = 181 bytes ; 0 calls out

000046c9:	db 0x00 

---STARTPROC---
sub_46ca:
000046ca:	push bp
000046cb:	mov bp, sp
000046cd:	push di
000046ce:	push si
000046cf:	mov cx, [bp+0x4]
000046d2:	mov di, [bp+0xa]
000046d5:	mov bx, [bp+0x8]
000046d8:	not word [bx]
000046da:	not word [bx+0x2]
000046dd:	mov ax, [di]
000046df:	mov si, [bp+0xc]
000046e2:	mov dx, [di+0x2]
000046e5:	mov [si], ax
000046e7:	mov [si+0x2], dx
000046ea:	mov si, cx
000046ec:	mov eax, [si]
000046ef:	and [di], eax
000046f2:	mov ax, bx
000046f4:	mov bx, [bp+0xc]
000046f7:	mov cx, [bx]
000046f9:	mov dx, [bx+0x2]
000046fc:	xor [si], cx
000046fe:	mov bx, ax
00004700:	xor [si+0x2], dx
00004703:	mov ecx, [bx]
00004706:	xor [di], ecx
00004709:	mov bx, [bp+0xc]
0000470c:	mov ecx, [bx]
0000470f:	mov bx, ax
00004711:	or [bx], ecx
00004714:	mov cx, [di]
00004716:	mov bx, [bp+0x6]
00004719:	mov dx, [di+0x2]
0000471c:	xor [bx], cx
0000471e:	xor [bx+0x2], dx
00004721:	mov cx, [si]
00004723:	mov bx, ax
00004725:	mov dx, [si+0x2]
00004728:	xor [bx], cx
0000472a:	xor [bx+0x2], dx
0000472d:	mov bx, [bp+0x6]
00004730:	mov ecx, [bx]
00004733:	or [si], ecx
00004736:	mov ecx, [bx]
00004739:	mov bx, ax
0000473b:	xor [bx], ecx
0000473e:	mov cx, [si]
00004740:	mov bx, [bp+0xc]
00004743:	mov dx, [si+0x2]
00004746:	xor [bx], cx
00004748:	xor [bx+0x2], dx
0000474b:	mov cx, [di]
0000474d:	mov dx, [di+0x2]
00004750:	or [si], cx
00004752:	mov bx, ax
00004754:	or [si+0x2], dx
00004757:	mov ecx, [bx]
0000475a:	xor [si], ecx
0000475d:	mov cx, [di]
0000475f:	mov bx, [bp+0xc]
00004762:	mov dx, [di+0x2]
00004765:	xor [bx], cx
00004767:	xor [bx+0x2], dx
0000476a:	mov ecx, [si]
0000476d:	xor [bx], ecx
00004770:	not word [di]
00004772:	not word [di+0x2]
00004775:	mov ecx, [bx]
00004778:	mov bx, ax
0000477a:	and [bx], ecx
0000477d:	mov ecx, [di]
00004780:	xor [bx], ecx
00004783:	pop si
00004784:	pop di
00004785:	leave
00004786:	ret
---ENDPROC---  ; sub_46ca ; length = 189 bytes ; 0 calls out

00004787:	db 0x00 

---STARTPROC---
sub_4788:
00004788:	push bp
00004789:	mov bp, sp
0000478b:	push di
0000478c:	push si
0000478d:	mov cx, [bp+0x6]
00004790:	mov bx, [bp+0x8]
00004793:	mov di, [bp+0xc]
00004796:	mov ax, [bx]
00004798:	mov dx, [bx+0x2]
0000479b:	mov [di], ax
0000479d:	mov si, cx
0000479f:	mov [di+0x2], dx
000047a2:	mov eax, [si]
000047a5:	and [bx], eax
000047a8:	mov ax, bx
000047aa:	mov bx, [bp+0xa]
000047ad:	mov ecx, [bx]
000047b0:	mov bx, ax
000047b2:	xor [bx], ecx
000047b5:	mov cx, [si]
000047b7:	mov bx, [bp+0xa]
000047ba:	mov dx, [si+0x2]
000047bd:	and [bx], cx
000047bf:	and [bx+0x2], dx
000047c2:	mov bx, ax
000047c4:	mov ecx, [bx]
000047c7:	xor [di], ecx
000047ca:	mov ecx, [si]
000047cd:	xor [bx], ecx
000047d0:	mov bx, [bp+0x4]
000047d3:	mov ecx, [bx]
000047d6:	xor [si], ecx
000047d9:	mov ecx, [di]
000047dc:	or [bx], ecx
000047df:	mov bx, ax
000047e1:	mov ecx, [bx]
000047e4:	mov bx, [bp+0x4]
000047e7:	xor [bx], ecx
000047ea:	mov cx, [si]
000047ec:	mov bx, [bp+0xa]
000047ef:	mov dx, [si+0x2]
000047f2:	xor [bx], cx
000047f4:	xor [bx+0x2], dx
000047f7:	mov ecx, [bx]
000047fa:	mov bx, ax
000047fc:	xor [bx], ecx
000047ff:	mov bx, [bp+0x4]
00004802:	mov ecx, [bx]
00004805:	mov bx, [bp+0xa]
00004808:	and [bx], ecx
0000480b:	mov ecx, [di]
0000480e:	xor [bx], ecx
00004811:	mov bx, ax
00004813:	mov ecx, [bx]
00004816:	xor [di], ecx
00004819:	mov bx, [bp+0x4]
0000481c:	mov ecx, [bx]
0000481f:	mov bx, ax
00004821:	and [bx], ecx
00004824:	mov cx, [di]
00004826:	mov dx, [di+0x2]
00004829:	not cx
0000482b:	not dx
0000482d:	mov [di], cx
0000482f:	mov [di+0x2], dx
00004832:	xor [bx], cx
00004834:	xor [bx+0x2], dx
00004837:	mov bx, [bp+0x4]
0000483a:	mov eax, [bx]
0000483d:	and [di], eax
00004840:	mov bx, [bp+0xa]
00004843:	mov eax, [bx]
00004846:	xor [si], eax
00004849:	mov eax, [si]
0000484c:	xor [di], eax
0000484f:	pop si
00004850:	pop di
00004851:	leave
00004852:	ret
---ENDPROC---  ; sub_4788 ; length = 203 bytes ; 0 calls out

00004853:	db 0x00 

---STARTPROC---
sub_4854:
00004854:	push bp
00004855:	mov bp, sp
00004857:	push di
00004858:	push si
00004859:	mov di, [bp+0x4]
0000485c:	mov bx, [bp+0x6]
0000485f:	shl bx, 0x2
00004862:	mov si, [bp+0x8]
00004865:	mov eax, [bx+di]
00004868:	xor [si], eax
0000486b:	add bx, di
0000486d:	mov si, [bp+0xa]
00004870:	mov eax, [bx+0x4]
00004874:	xor [si], eax
00004877:	mov ax, [bx+0x8]
0000487a:	mov si, [bp+0xc]
0000487d:	mov dx, [bx+0xa]
00004880:	xor [si], ax
00004882:	xor [si+0x2], dx
00004885:	mov eax, [bx+0xc]
00004889:	mov bx, [bp+0xe]
0000488c:	xor [bx], eax
0000488f:	pop si
00004890:	pop di
00004891:	leave
00004892:	ret
---ENDPROC---  ; sub_4854 ; length = 63 bytes ; 0 calls out

00004893:	db 0x00 

---STARTPROC---
sub_4894:
00004894:	push bp
00004895:	mov bp, sp
00004897:	push di
00004898:	push si
00004899:	mov di, [bp+0x4]
0000489c:	mov bx, [bp+0x6]
0000489f:	shl bx, 0x2
000048a2:	mov si, [bp+0x8]
000048a5:	mov ax, [bx+di]
000048a7:	mov dx, [bx+di+0x2]
000048aa:	mov [si], ax
000048ac:	add bx, di
000048ae:	mov [si+0x2], dx
000048b1:	mov ax, [bx+0x4]
000048b4:	mov si, [bp+0xa]
000048b7:	mov dx, [bx+0x6]
000048ba:	mov [si], ax
000048bc:	mov [si+0x2], dx
000048bf:	mov ax, [bx+0x8]
000048c2:	mov si, [bp+0xc]
000048c5:	mov dx, [bx+0xa]
000048c8:	mov [si], ax
000048ca:	mov [si+0x2], dx
000048cd:	mov eax, [bx+0xc]
000048d1:	mov bx, [bp+0xe]
000048d4:	mov [bx], eax
000048d7:	pop si
000048d8:	pop di
000048d9:	leave
000048da:	ret
---ENDPROC---  ; sub_4894 ; length = 71 bytes ; 0 calls out

000048db:	db 0x00 

---STARTPROC---
sub_48dc:
000048dc:	push bp
000048dd:	mov bp, sp
000048df:	push di
000048e0:	push si
000048e1:	mov di, [bp+0x4]
000048e4:	mov si, [bp+0x8]
000048e7:	mov bx, [bp+0x6]
000048ea:	mov ax, [si]
000048ec:	mov dx, [si+0x2]
000048ef:	shl bx, 0x2
000048f2:	add bx, di
000048f4:	mov [bx+0x10], ax
000048f7:	mov [bx+0x12], dx
000048fa:	mov si, [bp+0xa]
000048fd:	mov eax, [si]
00004900:	mov [bx+0x14], eax
00004904:	mov si, [bp+0xc]
00004907:	mov eax, [si]
0000490a:	mov [bx+0x18], eax
0000490e:	mov si, [bp+0xe]
00004911:	mov eax, [si]
00004914:	mov [bx+0x1c], eax
00004918:	pop si
00004919:	pop di
0000491a:	leave
0000491b:	ret
---ENDPROC---  ; sub_48dc ; length = 64 bytes ; 0 calls out


---STARTPROC---
sub_491c:
0000491c:	enter 0x26, 0x0
00004920:	push di
00004921:	push si
00004922:	mov si, [bp+0x8]
00004925:	xor bx, bx
00004927:	mov [bp-0x2], si
0000492a:	jmp 0x4941
lbl_492c:
0000492c:	mov di, bx
0000492e:	shl di, 0x2
00004931:	mov ax, di
00004933:	add di, [bp+0x4]
00004936:	mov ecx, [di]
00004939:	mov di, si
0000493b:	add di, ax
0000493d:	mov [di], ecx
00004940:	inc bx
lbl_4941:
00004941:	mov ax, [bp+0x6]
00004944:	cwd
00004945:	and dx, 0x3
00004948:	add ax, dx
0000494a:	sar ax, 0x2
0000494d:	cmp ax, bx
0000494f:	jg 0x492c
00004951:	mov bx, [bp+0x6]
00004954:	cmp bx, 0x20
00004957:	jge 0x498d
00004959:	mov ax, bx
0000495b:	mov cx, 0x4
0000495e:	cwd
0000495f:	idiv cx
00004961:	mov ax, bx
00004963:	mov di, dx
00004965:	cwd
00004966:	and dx, 0x3
00004969:	add ax, dx
0000496b:	sar ax, 0x2
0000496e:	mov bx, ax
00004970:	shl bx, 0x2
00004973:	mov ax, 0x1
00004976:	cwd
00004977:	mov cx, di
00004979:	shl cl, 0x3
0000497c:	or cl, cl
0000497e:	jz 0x4988
lbl_4980:
00004980:	add ax, ax
00004982:	adc dx, dx
00004984:	dec cl
00004986:	jnz 0x4980
lbl_4988:
00004988:	or [bx+si], ax
0000498a:	or [bx+si+0x2], dx
lbl_498d:
0000498d:	add si, 0x20
00004990:	mov eax, [si-0x4]
00004994:	mov [bp-0x6], eax
00004998:	xor bx, bx
0000499a:	mov [bp-0x2], si
0000499d:	jmp 0x4a0c
0000499f:	db 0x90 
lbl_49a0:
000049a0:	mov di, bx
000049a2:	shl di, 0x2
000049a5:	add di, si
000049a7:	mov eax, [di-0xc]
000049ab:	xor eax, [di-0x14]
000049af:	xor eax, [di-0x20]
000049b3:	xor eax, [bp-0x6]
000049b7:	mov edx, eax
000049ba:	shr edx, 0x10
000049be:	mov cx, ax
000049c0:	mov ax, bx
000049c2:	mov [bp-0x1e], cx
000049c5:	mov [bp-0x1c], dx
000049c8:	cwd
000049c9:	xor ax, cx
000049cb:	xor dx, [bp-0x1c]
000049ce:	mov [bp-0x22], ax
000049d1:	mov [bp-0x20], dx
000049d4:	xor ax, 0x79b9
000049d7:	xor dx, -0x9
000049da:	mov dh, dl
000049dc:	mov dl, ah
000049de:	mov ah, al
000049e0:	sub al, al
000049e2:	add ax, ax
000049e4:	adc dx, dx
000049e6:	add ax, ax
000049e8:	adc dx, dx
000049ea:	add ax, ax
000049ec:	adc dx, dx
000049ee:	mov cx, [bp-0x20]
000049f1:	xor cx, 0x9e3f
000049f5:	shr cx, 0x5
000049f8:	mov [bp-0x26], ax
000049fb:	mov [bp-0x24], dx
000049fe:	or cx, ax
00004a00:	mov [bp-0x6], cx
00004a03:	mov [bp-0x4], dx
00004a06:	mov [di], cx
00004a08:	mov [di+0x2], dx
00004a0b:	inc bx
lbl_4a0c:
00004a0c:	cmp bx, 0x84
00004a10:	jl 0x49a0
00004a12:	sub si, 0x50
00004a15:	xor di, di
lbl_4a17:
00004a17:	lea ax, [bp-0x1a]
00004a1a:	push ax
00004a1b:	lea cx, [bp-0xa]
00004a1e:	push cx
00004a1f:	lea dx, [bp-0xe]
00004a22:	push dx
00004a23:	lea bx, [bp-0x12]
00004a26:	push bx
00004a27:	push 0x14
00004a29:	push si
00004a2a:	call 0x4894
00004a2d:	add sp, 0xc
00004a30:	lea ax, [bp-0x16]
00004a33:	push ax
00004a34:	lea cx, [bp-0x1a]
00004a37:	push cx
00004a38:	lea dx, [bp-0xa]
00004a3b:	push dx
00004a3c:	lea bx, [bp-0xe]
00004a3f:	push bx
00004a40:	lea ax, [bp-0x12]
00004a43:	push ax
00004a44:	call 0x4480
00004a47:	add sp, 0xa
00004a4a:	lea ax, [bp-0x16]
00004a4d:	push ax
00004a4e:	lea cx, [bp-0x1a]
00004a51:	push cx
00004a52:	lea dx, [bp-0xa]
00004a55:	push dx
00004a56:	lea bx, [bp-0xe]
00004a59:	push bx
00004a5a:	push 0x10
00004a5c:	push si
00004a5d:	call 0x48dc
00004a60:	add sp, 0xc
00004a63:	lea ax, [bp-0xe]
00004a66:	push ax
00004a67:	lea cx, [bp-0x12]
00004a6a:	push cx
00004a6b:	lea dx, [bp-0xa]
00004a6e:	push dx
00004a6f:	lea bx, [bp-0x16]
00004a72:	push bx
00004a73:	push 0x18
00004a75:	push si
00004a76:	call 0x4894
00004a79:	add sp, 0xc
00004a7c:	lea ax, [bp-0x1a]
00004a7f:	push ax
00004a80:	lea cx, [bp-0xe]
00004a83:	push cx
00004a84:	lea dx, [bp-0x12]
00004a87:	push dx
00004a88:	lea bx, [bp-0xa]
00004a8b:	push bx
00004a8c:	lea ax, [bp-0x16]
00004a8f:	push ax
00004a90:	call 0x43ea
00004a93:	add sp, 0xa
00004a96:	lea ax, [bp-0x1a]
00004a99:	push ax
00004a9a:	lea cx, [bp-0xa]
00004a9d:	push cx
00004a9e:	lea dx, [bp-0xe]
00004aa1:	push dx
00004aa2:	lea bx, [bp-0x12]
00004aa5:	push bx
00004aa6:	push 0x14
00004aa8:	push si
00004aa9:	call 0x48dc
00004aac:	add sp, 0xc
00004aaf:	lea ax, [bp-0x12]
00004ab2:	push ax
00004ab3:	lea cx, [bp-0x16]
00004ab6:	push cx
00004ab7:	lea dx, [bp-0xe]
00004aba:	push dx
00004abb:	lea bx, [bp-0xa]
00004abe:	push bx
00004abf:	push 0x1c
00004ac1:	push si
00004ac2:	call 0x4894
00004ac5:	add sp, 0xc
00004ac8:	lea ax, [bp-0x1a]
00004acb:	push ax
00004acc:	lea cx, [bp-0x12]
00004acf:	push cx
00004ad0:	lea dx, [bp-0x16]
00004ad3:	push dx
00004ad4:	lea bx, [bp-0xe]
00004ad7:	push bx
00004ad8:	lea ax, [bp-0xa]
00004adb:	push ax
00004adc:	call 0x4334
00004adf:	add sp, 0xa
00004ae2:	lea ax, [bp-0xe]
00004ae5:	push ax
00004ae6:	lea cx, [bp-0x12]
00004ae9:	push cx
00004aea:	lea dx, [bp-0xa]
00004aed:	push dx
00004aee:	lea bx, [bp-0x16]
00004af1:	push bx
00004af2:	push 0x18
00004af4:	push si
00004af5:	call 0x48dc
00004af8:	add sp, 0xc
00004afb:	lea ax, [bp-0x1a]
00004afe:	push ax
00004aff:	lea cx, [bp-0x16]
00004b02:	push cx
00004b03:	lea dx, [bp-0xa]
00004b06:	push dx
00004b07:	lea bx, [bp-0x12]
00004b0a:	push bx
00004b0b:	push 0x20
00004b0d:	push si
00004b0e:	call 0x4894
00004b11:	add sp, 0xc
00004b14:	lea ax, [bp-0xe]
00004b17:	push ax
00004b18:	lea cx, [bp-0x1a]
00004b1b:	push cx
00004b1c:	lea dx, [bp-0x16]
00004b1f:	push dx
00004b20:	lea bx, [bp-0xa]
00004b23:	push bx
00004b24:	lea ax, [bp-0x12]
00004b27:	push ax
00004b28:	call 0x428a
00004b2b:	add sp, 0xa
00004b2e:	lea ax, [bp-0x12]
00004b31:	push ax
00004b32:	lea cx, [bp-0x16]
00004b35:	push cx
00004b36:	lea dx, [bp-0xe]
00004b39:	push dx
00004b3a:	lea bx, [bp-0xa]
00004b3d:	push bx
00004b3e:	push 0x1c
00004b40:	push si
00004b41:	call 0x48dc
00004b44:	add sp, 0xc
00004b47:	lea ax, [bp-0xa]
00004b4a:	push ax
00004b4b:	lea cx, [bp-0x1a]
00004b4e:	push cx
00004b4f:	lea dx, [bp-0x16]
00004b52:	push dx
00004b53:	lea bx, [bp-0x12]
00004b56:	push bx
00004b57:	push 0x4
00004b59:	add si, 0x80
00004b5d:	push si
00004b5e:	call 0x4894
00004b61:	add sp, 0xc
00004b64:	lea ax, [bp-0xe]
00004b67:	push ax
00004b68:	lea cx, [bp-0xa]
00004b6b:	push cx
00004b6c:	lea dx, [bp-0x1a]
00004b6f:	push dx
00004b70:	lea bx, [bp-0x16]
00004b73:	push bx
00004b74:	lea ax, [bp-0x12]
00004b77:	push ax
00004b78:	call 0x4788
00004b7b:	add sp, 0xa
00004b7e:	lea ax, [bp-0x12]
00004b81:	push ax
00004b82:	lea cx, [bp-0xa]
00004b85:	push cx
00004b86:	lea dx, [bp-0xe]
00004b89:	push dx
00004b8a:	lea bx, [bp-0x1a]
00004b8d:	push bx
00004b8e:	push 0x0
00004b90:	push si
00004b91:	call 0x48dc
00004b94:	add sp, 0xc
00004b97:	lea ax, [bp-0xe]
00004b9a:	push ax
00004b9b:	lea cx, [bp-0xa]
00004b9e:	push cx
00004b9f:	lea dx, [bp-0x16]
00004ba2:	push dx
00004ba3:	lea bx, [bp-0x12]
00004ba6:	push bx
00004ba7:	push 0x8
00004ba9:	push si
00004baa:	call 0x4894
00004bad:	add sp, 0xc
00004bb0:	lea ax, [bp-0x1a]
00004bb3:	push ax
00004bb4:	lea cx, [bp-0xe]
00004bb7:	push cx
00004bb8:	lea dx, [bp-0xa]
00004bbb:	push dx
00004bbc:	lea bx, [bp-0x16]
00004bbf:	push bx
00004bc0:	lea ax, [bp-0x12]
00004bc3:	push ax
00004bc4:	call 0x46ca
00004bc7:	add sp, 0xa
00004bca:	lea ax, [bp-0xa]
00004bcd:	push ax
00004bce:	lea cx, [bp-0x1a]
00004bd1:	push cx
00004bd2:	lea dx, [bp-0x16]
00004bd5:	push dx
00004bd6:	lea bx, [bp-0x12]
00004bd9:	push bx
00004bda:	push 0x4
00004bdc:	push si
00004bdd:	call 0x48dc
00004be0:	add sp, 0xc
00004be3:	lea ax, [bp-0x16]
00004be6:	push ax
00004be7:	lea cx, [bp-0xe]
00004bea:	push cx
00004beb:	lea dx, [bp-0x12]
00004bee:	push dx
00004bef:	lea bx, [bp-0xa]
00004bf2:	push bx
00004bf3:	push 0xc
00004bf5:	push si
00004bf6:	call 0x4894
00004bf9:	add sp, 0xc
00004bfc:	lea ax, [bp-0x1a]
00004bff:	push ax
00004c00:	lea cx, [bp-0x16]
00004c03:	push cx
00004c04:	lea dx, [bp-0xe]
00004c07:	push dx
00004c08:	lea bx, [bp-0x12]
00004c0b:	push bx
00004c0c:	lea ax, [bp-0xa]
00004c0f:	push ax
00004c10:	call 0x4614
00004c13:	add sp, 0xa
00004c16:	lea ax, [bp-0xe]
00004c19:	push ax
00004c1a:	lea cx, [bp-0xa]
00004c1d:	push cx
00004c1e:	lea dx, [bp-0x16]
00004c21:	push dx
00004c22:	lea bx, [bp-0x12]
00004c25:	push bx
00004c26:	push 0x8
00004c28:	push si
00004c29:	call 0x48dc
00004c2c:	add sp, 0xc
00004c2f:	lea ax, [bp-0x16]
00004c32:	push ax
00004c33:	lea cx, [bp-0x1a]
00004c36:	push cx
00004c37:	lea dx, [bp-0xa]
00004c3a:	push dx
00004c3b:	lea bx, [bp-0xe]
00004c3e:	push bx
00004c3f:	push 0x10
00004c41:	push si
00004c42:	call 0x4894
00004c45:	add sp, 0xc
00004c48:	lea ax, [bp-0x12]
00004c4b:	push ax
00004c4c:	lea cx, [bp-0x16]
00004c4f:	push cx
00004c50:	lea dx, [bp-0x1a]
00004c53:	push dx
00004c54:	lea dx, [bp-0xa]
00004c57:	push dx
00004c58:	lea bx, [bp-0xe]
00004c5b:	push bx
00004c5c:	call 0x4550
00004c5f:	add sp, 0xa
00004c62:	lea ax, [bp-0x16]
00004c65:	push ax
00004c66:	lea ax, [bp-0xe]
00004c69:	push ax
00004c6a:	lea ax, [bp-0x12]
00004c6d:	push ax
00004c6e:	lea ax, [bp-0xa]
00004c71:	push ax
00004c72:	push 0xc
00004c74:	push si
00004c75:	call 0x48dc
00004c78:	add sp, 0xc
00004c7b:	inc di
00004c7c:	cmp di, 0x4
00004c7f:	jl 0x4a17
00004c83:	lea ax, [bp-0x1a]
00004c86:	push ax
00004c87:	lea cx, [bp-0xa]
00004c8a:	push cx
00004c8b:	lea dx, [bp-0xe]
00004c8e:	push dx
00004c8f:	lea bx, [bp-0x12]
00004c92:	push bx
00004c93:	push 0x14
00004c95:	push si
00004c96:	call 0x4894
00004c99:	add sp, 0xc
00004c9c:	lea ax, [bp-0x16]
00004c9f:	push ax
00004ca0:	lea cx, [bp-0x1a]
00004ca3:	push cx
00004ca4:	lea dx, [bp-0xa]
00004ca7:	push dx
00004ca8:	lea bx, [bp-0xe]
00004cab:	push bx
00004cac:	lea di, [bp-0x12]
00004caf:	push di
00004cb0:	call 0x4480
00004cb3:	add sp, 0xa
00004cb6:	lea ax, [bp-0x16]
00004cb9:	push ax
00004cba:	lea ax, [bp-0x1a]
00004cbd:	push ax
00004cbe:	lea ax, [bp-0xa]
00004cc1:	push ax
00004cc2:	lea ax, [bp-0xe]
00004cc5:	push ax
00004cc6:	push 0x10
00004cc8:	push si
00004cc9:	call 0x48dc
00004ccc:	add sp, 0xc
00004ccf:	pop si
00004cd0:	pop di
00004cd1:	leave
00004cd2:	ret
---ENDPROC---  ; sub_491c ; length = 951 bytes ; 27 calls out

00004cd3:	db 0x00 

---STARTPROC---
sub_4cd4:
00004cd4:	enter 0xe, 0x0
00004cd8:	push di
00004cd9:	push si
00004cda:	mov bx, [bp+0x4]
00004cdd:	mov di, [bp+0x8]
00004ce0:	mov ax, [bx]
00004ce2:	mov dx, [bx+0x2]
00004ce5:	mov cx, ax
00004ce7:	mov si, dx
00004ce9:	shr si, 0x1
00004ceb:	rcr cx, 0x1
00004ced:	rcr si, 0x1
00004cef:	rcr cx, 0x1
00004cf1:	rcr si, 0x1
00004cf3:	rcr cx, 0x1
00004cf5:	rcr si, 0x1
00004cf7:	xchg cx, si
00004cf9:	and cx, 0xe000
00004cfd:	shr dx, 0x3
00004d00:	or cx, dx
00004d02:	mov [bx], cx
00004d04:	mov [bx+0x2], si
00004d07:	mov ax, [di]
00004d09:	mov dx, [di+0x2]
00004d0c:	mov cx, ax
00004d0e:	mov si, dx
00004d10:	add cx, ax
00004d12:	adc si, dx
00004d14:	add cx, cx
00004d16:	adc si, si
00004d18:	add cx, cx
00004d1a:	adc si, si
00004d1c:	shr dx, 0xd
00004d1f:	or cx, dx
00004d21:	mov [di], cx
00004d23:	mov [di+0x2], si
00004d26:	mov ax, [bx]
00004d28:	mov dx, [bx+0x2]
00004d2b:	mov si, dx
00004d2d:	add ax, ax
00004d2f:	adc dx, dx
00004d31:	add ax, ax
00004d33:	adc dx, dx
00004d35:	add ax, ax
00004d37:	adc dx, dx
00004d39:	xor ax, [di]
00004d3b:	xor dx, [di+0x2]
00004d3e:	mov [bp-0x2], bx
00004d41:	mov bx, [bp+0xa]
00004d44:	xor ax, [bx]
00004d46:	xor dx, [bx+0x2]
00004d49:	mov bx, [di+0x2]
00004d4c:	mov [bp-0x4], bx
00004d4f:	mov bx, [bp+0xa]
00004d52:	mov [bp-0x8], ax
00004d55:	mov ax, [bp-0x4]
00004d58:	xor ax, [bx+0x2]
00004d5b:	shr ax, 0x9
00004d5e:	and si, 0x1fc0
00004d62:	shr si, 0x6
00004d65:	xor ax, si
00004d67:	mov cx, [bp-0x8]
00004d6a:	mov si, dx
00004d6c:	add cx, cx
00004d6e:	adc si, dx
00004d70:	add cx, cx
00004d72:	adc si, si
00004d74:	add cx, cx
00004d76:	adc si, si
00004d78:	add cx, cx
00004d7a:	adc si, si
00004d7c:	add cx, cx
00004d7e:	adc si, si
00004d80:	add cx, cx
00004d82:	adc si, si
00004d84:	add cx, cx
00004d86:	adc si, si
00004d88:	or ax, cx
00004d8a:	mov [bx], ax
00004d8c:	mov [bx+0x2], si
00004d8f:	mov ax, [di]
00004d91:	mov si, [bp-0x2]
00004d94:	mov dx, [di+0x2]
00004d97:	xor ax, [si]
00004d99:	mov bx, [bp+0x6]
00004d9c:	xor dx, [si+0x2]
00004d9f:	xor ax, [bx]
00004da1:	xor dx, [bx+0x2]
00004da4:	mov cx, ax
00004da6:	mov bx, dx
00004da8:	add cx, ax
00004daa:	adc bx, dx
00004dac:	shr dx, 0xf
00004daf:	mov si, [bp+0x6]
00004db2:	or cx, dx
00004db4:	mov [si], cx
00004db6:	mov [si+0x2], bx
00004db9:	mov bx, [bp-0x2]
00004dbc:	mov eax, [bx]
00004dbf:	mov bx, [bp+0xa]
00004dc2:	xor eax, [bx]
00004dc5:	xor eax, [si]
00004dc8:	mov edx, eax
00004dcb:	shr edx, 0x10
00004dcf:	mov cx, ax
00004dd1:	mov bx, dx
00004dd3:	add cx, ax
00004dd5:	adc bx, dx
00004dd7:	add cx, cx
00004dd9:	adc bx, bx
00004ddb:	add cx, cx
00004ddd:	adc bx, bx
00004ddf:	add cx, cx
00004de1:	adc bx, bx
00004de3:	add cx, cx
00004de5:	adc bx, bx
00004de7:	shr dx, 0xb
00004dea:	mov si, [bp-0x2]
00004ded:	or cx, dx
00004def:	mov [si], cx
00004df1:	mov [si+0x2], bx
00004df4:	mov ax, [di]
00004df6:	mov bx, [bp+0xa]
00004df9:	mov dx, [di+0x2]
00004dfc:	xor ax, [bx]
00004dfe:	xor dx, [bx+0x2]
00004e01:	mov cx, ax
00004e03:	mov bx, dx
00004e05:	shr bx, 0x1
00004e07:	rcr cx, 0x1
00004e09:	shr bx, 0x1
00004e0b:	rcr cx, 0x1
00004e0d:	shr bx, 0x1
00004e0f:	rcr cx, 0x1
00004e11:	shr bx, 0x1
00004e13:	rcr cx, 0x1
00004e15:	shr bx, 0x1
00004e17:	rcr cx, 0x1
00004e19:	shr bx, 0x1
00004e1b:	rcr cx, 0x1
00004e1d:	shr bx, 0x1
00004e1f:	rcr cx, 0x1
00004e21:	mov si, [bp+0x6]
00004e24:	mov [bp-0xa], ax
00004e27:	mov ax, [si]
00004e29:	mov dx, [si+0x2]
00004e2c:	mov [bp-0xe], ax
00004e2f:	and ax, 0xfff8
00004e32:	and dx, 0x1ff
00004e36:	xor cx, ax
00004e38:	xor bx, dx
00004e3a:	shr bx, 0x1
00004e3c:	rcr cx, 0x1
00004e3e:	shr bx, 0x1
00004e40:	rcr cx, 0x1
00004e42:	shr bx, 0x1
00004e44:	rcr cx, 0x1
00004e46:	mov ax, [bp-0xa]
00004e49:	shl ax, 0x6
00004e4c:	mov dx, [bp-0xe]
00004e4f:	shl dx, 0xd
00004e52:	xor ax, dx
00004e54:	or bx, ax
00004e56:	mov [di], cx
00004e58:	mov [di+0x2], bx
00004e5b:	pop si
00004e5c:	pop di
00004e5d:	leave
00004e5e:	ret
---ENDPROC---  ; sub_4cd4 ; length = 395 bytes ; 0 calls out

00004e5f:	db 0x00 

---STARTPROC---
sub_4e60:
00004e60:	enter 0x16, 0x0
00004e64:	push di
00004e65:	push si
00004e66:	mov cx, [bp+0x4]
00004e69:	mov di, 0x1
00004e6c:	mov si, [bp+0x8]
00004e6f:	add si, 0x20
00004e72:	mov ax, [bp+0x6]
00004e75:	mov bx, cx
00004e77:	mov [bp-0x2], ax
00004e7a:	mov eax, [bx]
00004e7d:	mov [bp-0xa], eax
00004e81:	mov eax, [bx+0x4]
00004e85:	mov [bp-0x6], eax
00004e89:	mov eax, [bx+0x8]
00004e8d:	mov [bp-0x12], eax
00004e91:	mov eax, [bx+0xc]
00004e95:	mov [bp-0x16], eax
00004e99:	jmp 0x4edf
00004e9b:	db 0x90 
lbl_4e9c:
00004e9c:	inc di
00004e9d:	mov eax, [bp-0x6]
00004ea1:	mov [bp-0x12], eax
00004ea5:	mov eax, [bp-0xe]
00004ea9:	mov [bp-0x6], eax
00004ead:	mov eax, [bp-0x16]
00004eb1:	mov [bp-0xe], eax
00004eb5:	mov eax, [bp-0xa]
00004eb9:	mov [bp-0x16], eax
00004ebd:	mov eax, [bp-0xe]
00004ec1:	mov [bp-0xa], eax
00004ec5:	add si, 0x80
00004ec9:	lea ax, [bp-0x16]
00004ecc:	push ax
00004ecd:	lea ax, [bp-0x12]
00004ed0:	push ax
00004ed1:	lea ax, [bp-0x6]
00004ed4:	push ax
00004ed5:	lea ax, [bp-0xa]
00004ed8:	push ax
00004ed9:	call 0x4cd4
00004edc:	add sp, 0x8
lbl_4edf:
00004edf:	lea ax, [bp-0x16]
00004ee2:	push ax
00004ee3:	lea cx, [bp-0x12]
00004ee6:	push cx
00004ee7:	lea dx, [bp-0x6]
00004eea:	push dx
00004eeb:	lea bx, [bp-0xa]
00004eee:	push bx
00004eef:	push 0x0
00004ef1:	push si
00004ef2:	call 0x4854
00004ef5:	add sp, 0xc
00004ef8:	lea ax, [bp-0xe]
00004efb:	push ax
00004efc:	lea cx, [bp-0x16]
00004eff:	push cx
00004f00:	lea dx, [bp-0x12]
00004f03:	push dx
00004f04:	lea bx, [bp-0x6]
00004f07:	push bx
00004f08:	lea ax, [bp-0xa]
00004f0b:	push ax
00004f0c:	call 0x428a
00004f0f:	add sp, 0xa
00004f12:	lea ax, [bp-0xa]
00004f15:	push ax
00004f16:	lea cx, [bp-0x12]
00004f19:	push cx
00004f1a:	lea dx, [bp-0xe]
00004f1d:	push dx
00004f1e:	lea bx, [bp-0x6]
00004f21:	push bx
00004f22:	call 0x4cd4
00004f25:	add sp, 0x8
00004f28:	lea ax, [bp-0xa]
00004f2b:	push ax
00004f2c:	lea cx, [bp-0x12]
00004f2f:	push cx
00004f30:	lea dx, [bp-0xe]
00004f33:	push dx
00004f34:	lea bx, [bp-0x6]
00004f37:	push bx
00004f38:	push 0x4
00004f3a:	push si
00004f3b:	call 0x4854
00004f3e:	add sp, 0xc
00004f41:	lea ax, [bp-0x16]
00004f44:	push ax
00004f45:	lea cx, [bp-0xa]
00004f48:	push cx
00004f49:	lea dx, [bp-0x12]
00004f4c:	push dx
00004f4d:	lea bx, [bp-0xe]
00004f50:	push bx
00004f51:	lea ax, [bp-0x6]
00004f54:	push ax
00004f55:	call 0x4334
00004f58:	add sp, 0xa
00004f5b:	lea ax, [bp-0xe]
00004f5e:	push ax
00004f5f:	lea cx, [bp-0xa]
00004f62:	push cx
00004f63:	lea dx, [bp-0x6]
00004f66:	push dx
00004f67:	lea bx, [bp-0x12]
00004f6a:	push bx
00004f6b:	call 0x4cd4
00004f6e:	add sp, 0x8
00004f71:	lea ax, [bp-0xe]
00004f74:	push ax
00004f75:	lea cx, [bp-0xa]
00004f78:	push cx
00004f79:	lea dx, [bp-0x6]
00004f7c:	push dx
00004f7d:	lea bx, [bp-0x12]
00004f80:	push bx
00004f81:	push 0x8
00004f83:	push si
00004f84:	call 0x4854
00004f87:	add sp, 0xc
00004f8a:	lea ax, [bp-0x16]
00004f8d:	push ax
00004f8e:	lea cx, [bp-0xe]
00004f91:	push cx
00004f92:	lea dx, [bp-0xa]
00004f95:	push dx
00004f96:	lea bx, [bp-0x6]
00004f99:	push bx
00004f9a:	lea ax, [bp-0x12]
00004f9d:	push ax
00004f9e:	call 0x43ea
00004fa1:	add sp, 0xa
00004fa4:	lea ax, [bp-0x16]
00004fa7:	push ax
00004fa8:	lea cx, [bp-0x6]
00004fab:	push cx
00004fac:	lea dx, [bp-0xe]
00004faf:	push dx
00004fb0:	lea bx, [bp-0xa]
00004fb3:	push bx
00004fb4:	call 0x4cd4
00004fb7:	add sp, 0x8
00004fba:	lea ax, [bp-0x16]
00004fbd:	push ax
00004fbe:	lea cx, [bp-0x6]
00004fc1:	push cx
00004fc2:	lea dx, [bp-0xe]
00004fc5:	push dx
00004fc6:	lea bx, [bp-0xa]
00004fc9:	push bx
00004fca:	push 0xc
00004fcc:	push si
00004fcd:	call 0x4854
00004fd0:	add sp, 0xc
00004fd3:	lea ax, [bp-0x12]
00004fd6:	push ax
00004fd7:	lea cx, [bp-0x16]
00004fda:	push cx
00004fdb:	lea dx, [bp-0x6]
00004fde:	push dx
00004fdf:	lea bx, [bp-0xe]
00004fe2:	push bx
00004fe3:	lea ax, [bp-0xa]
00004fe6:	push ax
00004fe7:	call 0x4480
00004fea:	add sp, 0xa
00004fed:	lea ax, [bp-0x12]
00004ff0:	push ax
00004ff1:	lea cx, [bp-0x16]
00004ff4:	push cx
00004ff5:	lea dx, [bp-0x6]
00004ff8:	push dx
00004ff9:	lea bx, [bp-0xe]
00004ffc:	push bx
00004ffd:	call 0x4cd4
00005000:	add sp, 0x8
00005003:	lea ax, [bp-0x12]
00005006:	push ax
00005007:	lea cx, [bp-0x16]
0000500a:	push cx
0000500b:	lea dx, [bp-0x6]
0000500e:	push dx
0000500f:	lea bx, [bp-0xe]
00005012:	push bx
00005013:	push 0x10
00005015:	push si
00005016:	call 0x4854
00005019:	add sp, 0xc
0000501c:	lea ax, [bp-0xa]
0000501f:	push ax
00005020:	lea cx, [bp-0x12]
00005023:	push cx
00005024:	lea dx, [bp-0x16]
00005027:	push dx
00005028:	lea bx, [bp-0x6]
0000502b:	push bx
0000502c:	lea ax, [bp-0xe]
0000502f:	push ax
00005030:	call 0x4550
00005033:	add sp, 0xa
00005036:	lea ax, [bp-0x12]
00005039:	push ax
0000503a:	lea cx, [bp-0xe]
0000503d:	push cx
0000503e:	lea dx, [bp-0xa]
00005041:	push dx
00005042:	lea bx, [bp-0x6]
00005045:	push bx
00005046:	call 0x4cd4
00005049:	add sp, 0x8
0000504c:	lea ax, [bp-0x12]
0000504f:	push ax
00005050:	lea cx, [bp-0xe]
00005053:	push cx
00005054:	lea dx, [bp-0xa]
00005057:	push dx
00005058:	lea bx, [bp-0x6]
0000505b:	push bx
0000505c:	push 0x14
0000505e:	push si
0000505f:	call 0x4854
00005062:	add sp, 0xc
00005065:	lea ax, [bp-0x16]
00005068:	push ax
00005069:	lea cx, [bp-0x12]
0000506c:	push cx
0000506d:	lea dx, [bp-0xe]
00005070:	push dx
00005071:	lea bx, [bp-0xa]
00005074:	push bx
00005075:	lea ax, [bp-0x6]
00005078:	push ax
00005079:	call 0x4614
0000507c:	add sp, 0xa
0000507f:	lea ax, [bp-0xe]
00005082:	push ax
00005083:	lea cx, [bp-0x6]
00005086:	push cx
00005087:	lea dx, [bp-0x12]
0000508a:	push dx
0000508b:	lea bx, [bp-0xa]
0000508e:	push bx
0000508f:	call 0x4cd4
00005092:	add sp, 0x8
00005095:	lea ax, [bp-0xe]
00005098:	push ax
00005099:	lea cx, [bp-0x6]
0000509c:	push cx
0000509d:	lea dx, [bp-0x12]
000050a0:	push dx
000050a1:	lea bx, [bp-0xa]
000050a4:	push bx
000050a5:	push 0x18
000050a7:	push si
000050a8:	call 0x4854
000050ab:	add sp, 0xc
000050ae:	lea ax, [bp-0x16]
000050b1:	push ax
000050b2:	lea cx, [bp-0xe]
000050b5:	push cx
000050b6:	lea dx, [bp-0x6]
000050b9:	push dx
000050ba:	lea bx, [bp-0x12]
000050bd:	push bx
000050be:	lea ax, [bp-0xa]
000050c1:	push ax
000050c2:	call 0x46ca
000050c5:	add sp, 0xa
000050c8:	lea ax, [bp-0x6]
000050cb:	push ax
000050cc:	lea cx, [bp-0x16]
000050cf:	push cx
000050d0:	lea dx, [bp-0x12]
000050d3:	push dx
000050d4:	lea bx, [bp-0xa]
000050d7:	push bx
000050d8:	call 0x4cd4
000050db:	add sp, 0x8
000050de:	lea ax, [bp-0x6]
000050e1:	push ax
000050e2:	lea cx, [bp-0x16]
000050e5:	push cx
000050e6:	lea dx, [bp-0x12]
000050e9:	push dx
000050ea:	lea bx, [bp-0xa]
000050ed:	push bx
000050ee:	push 0x1c
000050f0:	push si
000050f1:	call 0x4854
000050f4:	add sp, 0xc
000050f7:	lea ax, [bp-0xe]
000050fa:	push ax
000050fb:	lea ax, [bp-0x6]
000050fe:	push ax
000050ff:	lea ax, [bp-0x16]
00005102:	push ax
00005103:	lea ax, [bp-0x12]
00005106:	push ax
00005107:	lea ax, [bp-0xa]
0000510a:	push ax
0000510b:	call 0x4788
0000510e:	add sp, 0xa
00005111:	cmp di, 0x4
00005114:	jnz 0x4e9c
00005118:	mov di, [bp-0x2]
0000511b:	lea ax, [bp-0xa]
0000511e:	push ax
0000511f:	lea cx, [bp-0x6]
00005122:	push cx
00005123:	lea dx, [bp-0xe]
00005126:	push dx
00005127:	lea bx, [bp-0x16]
0000512a:	push bx
0000512b:	push 0x20
0000512d:	push si
0000512e:	call 0x4854
00005131:	add sp, 0xc
00005134:	mov eax, [bp-0x16]
00005138:	mov [di], eax
0000513b:	mov eax, [bp-0xe]
0000513f:	mov [di+0x4], eax
00005143:	mov eax, [bp-0x6]
00005147:	mov [di+0x8], eax
0000514b:	mov eax, [bp-0xa]
0000514f:	mov [di+0xc], eax
00005153:	pop si
00005154:	pop di
00005155:	leave
00005156:	ret
---ENDPROC---  ; sub_4e60 ; length = 759 bytes ; 25 calls out

00005157:	db 0x00 

---STARTPROC---
sub_5158:
00005158:	enter 0x16, 0x0
0000515c:	push di
0000515d:	push si
0000515e:	mov bx, [bp+0x8]
00005161:	mov di, [bp+0x4]
00005164:	mov ax, [bx]
00005166:	mov dx, [bx+0x2]
00005169:	mov [bp-0x2], dx
0000516c:	mov dh, dl
0000516e:	mov dl, ah
00005170:	mov ah, al
00005172:	sub al, al
00005174:	add ax, ax
00005176:	adc dx, dx
00005178:	add ax, ax
0000517a:	adc dx, dx
0000517c:	mov cx, [bp-0x2]
0000517f:	shr cx, 0x6
00005182:	or ax, cx
00005184:	mov [bx], ax
00005186:	mov [bx+0x2], dx
00005189:	mov ax, [di]
0000518b:	shl ax, 0xb
0000518e:	mov [bp-0x4], ax
00005191:	mov eax, [di]
00005194:	shr eax, 0x5
00005198:	mov edx, eax
0000519b:	shr edx, 0x10
0000519f:	or dx, [bp-0x4]
000051a2:	mov [di], ax
000051a4:	mov [di+0x2], dx
000051a7:	mov si, [bp+0x6]
000051aa:	mov eax, [si]
000051ad:	shl eax, 0x7
000051b1:	mov si, [bp+0xa]
000051b4:	xor eax, [si]
000051b7:	xor [bx], eax
000051ba:	mov eax, [si]
000051bd:	mov si, [bp+0x6]
000051c0:	xor eax, [si]
000051c3:	xor [di], eax
000051c6:	mov ax, [si]
000051c8:	shl ax, 0xf
000051cb:	mov [bp-0x8], ax
000051ce:	mov ax, [si]
000051d0:	mov dx, [si+0x2]
000051d3:	shr dx, 0x1
000051d5:	rcr ax, 0x1
000051d7:	or dx, [bp-0x8]
000051da:	mov [si], ax
000051dc:	mov [si+0x2], dx
000051df:	mov eax, [di]
000051e2:	shl eax, 0x3
000051e6:	mov edx, eax
000051e9:	shr edx, 0x10
000051ed:	mov si, [bp+0xa]
000051f0:	mov cx, [si]
000051f2:	shl cx, 0x9
000051f5:	mov [bp-0xe], ax
000051f8:	mov [bp-0xc], dx
000051fb:	mov ax, cx
000051fd:	sub si, si
000051ff:	mov cx, bx
00005201:	mov bx, [bp+0xa]
00005204:	mov dx, si
00005206:	mov si, cx
00005208:	mov [bp-0x12], dx
0000520b:	mov [bp-0x10], ax
0000520e:	mov eax, [bx]
00005211:	shr eax, 0x7
00005215:	or eax, [bp-0x12]
00005219:	xor eax, [bp-0xe]
0000521d:	xor eax, [si]
00005220:	mov [bx], eax
00005223:	mov ax, [si]
00005225:	mov dx, [si+0x2]
00005228:	xor ax, [di]
0000522a:	mov bx, [bp+0x6]
0000522d:	xor dx, [di+0x2]
00005230:	xor ax, [bx]
00005232:	xor dx, [bx+0x2]
00005235:	mov [bx], ax
00005237:	mov [bx+0x2], dx
0000523a:	mov dx, [si]
0000523c:	mov ax, dx
0000523e:	mov bx, [si+0x2]
00005241:	shr bx, 0x1
00005243:	rcr dx, 0x1
00005245:	shr bx, 0x1
00005247:	rcr dx, 0x1
00005249:	shr bx, 0x1
0000524b:	rcr dx, 0x1
0000524d:	shl ax, 0xd
00005250:	mov [bp-0x16], dx
00005253:	mov dx, ax
00005255:	mov cx, [bp-0x16]
00005258:	or dx, bx
0000525a:	mov [si], cx
0000525c:	mov [si+0x2], dx
0000525f:	mov ax, [di]
00005261:	mov dx, [di+0x2]
00005264:	mov cx, ax
00005266:	mov bx, dx
00005268:	shl ax, 0x3
0000526b:	add cx, cx
0000526d:	adc bx, dx
0000526f:	adc cx, cx
00005271:	adc bx, bx
00005273:	adc cx, cx
00005275:	adc bx, bx
00005277:	adc cx, cx
00005279:	xchg bx, cx
0000527b:	and bx, 0x7
0000527e:	or bx, ax
00005280:	mov [di], cx
00005282:	mov [di+0x2], bx
00005285:	pop si
00005286:	pop di
00005287:	leave
00005288:	ret
---ENDPROC---  ; sub_5158 ; length = 305 bytes ; 0 calls out

00005289:	db 0x00 

---STARTPROC---
sub_528a:
0000528a:	enter 0x2a, 0x0
0000528e:	push di
0000528f:	push si
00005290:	mov ax, [bp+0x8]
00005293:	add ax, 0x1a0
00005296:	mov si, ax
00005298:	mov di, 0x4
0000529b:	mov cx, [bp+0x6]
0000529e:	mov [bp-0x2], cx
000052a1:	mov bx, [bp+0x4]
000052a4:	mov ecx, [bx]
000052a7:	mov [bp-0x16], ecx
000052ab:	mov ecx, [bx+0x4]
000052af:	mov [bp-0xa], ecx
000052b3:	mov ecx, [bx+0x8]
000052b7:	mov [bp-0x6], ecx
000052bb:	mov ecx, [bx+0xc]
000052bf:	mov [bp-0x12], ecx
000052c3:	lea cx, [bp-0x12]
000052c6:	push cx
000052c7:	lea cx, [bp-0x6]
000052ca:	push cx
000052cb:	lea cx, [bp-0xa]
000052ce:	push cx
000052cf:	lea cx, [bp-0x16]
000052d2:	push cx
000052d3:	push 0x20
000052d5:	push ax
000052d6:	call 0x4854
000052d9:	add sp, 0xc
000052dc:	jmp 0x541e
000052df:	db 0x90 
lbl_52e0:
000052e0:	mov eax, [bp-0xa]
000052e4:	mov [bp-0x6], eax
000052e8:	mov eax, [bp-0x12]
000052ec:	mov [bp-0xa], eax
000052f0:	mov eax, [bp-0xe]
000052f4:	mov [bp-0x12], eax
000052f8:	sub si, 0x80
000052fc:	mov dx, [bp-0x4]
000052ff:	mov ax, dx
00005301:	shr ax, 0x6
00005304:	mov cx, ax
00005306:	mov ax, [bp-0x6]
00005309:	mov dh, dl
0000530b:	mov dl, ah
0000530d:	mov ah, al
0000530f:	sub al, al
00005311:	add ax, ax
00005313:	adc dx, dx
00005315:	add ax, ax
00005317:	adc dx, dx
00005319:	or ax, cx
0000531b:	mov [bp-0x6], ax
0000531e:	mov [bp-0x4], dx
00005321:	mov ax, [bp-0x16]
00005324:	shl ax, 0xb
00005327:	sub cx, cx
00005329:	mov [bp-0x1a], cx
0000532c:	mov [bp-0x18], ax
0000532f:	mov eax, [bp-0x16]
00005333:	shr eax, 0x5
00005337:	mov edx, eax
0000533a:	shr edx, 0x10
0000533e:	or dx, [bp-0x18]
00005341:	mov [bp-0x16], ax
00005344:	mov [bp-0x14], dx
00005347:	mov eax, [bp-0xa]
0000534b:	shl eax, 0x7
0000534f:	xor eax, [bp-0xe]
00005353:	xor [bp-0x6], eax
00005357:	mov eax, [bp-0xe]
0000535b:	xor eax, [bp-0xa]
0000535f:	xor [bp-0x16], eax
00005363:	mov ax, [bp-0xe]
00005366:	shl ax, 0x9
00005369:	mov [bp-0x1e], cx
0000536c:	mov [bp-0x1c], ax
0000536f:	mov eax, [bp-0xe]
00005373:	shr eax, 0x7
00005377:	mov edx, eax
0000537a:	shr edx, 0x10
0000537e:	or dx, [bp-0x1c]
00005381:	mov cx, [bp-0x16]
00005384:	mov bx, [bp-0x14]
00005387:	add cx, cx
00005389:	adc bx, bx
0000538b:	add cx, cx
0000538d:	adc bx, bx
0000538f:	add cx, cx
00005391:	adc bx, bx
00005393:	xor ax, cx
00005395:	xor dx, bx
00005397:	xor ax, [bp-0x6]
0000539a:	xor dx, [bp-0x4]
0000539d:	mov [bp-0x12], ax
000053a0:	mov [bp-0x10], dx
000053a3:	mov ax, [bp-0xa]
000053a6:	shl ax, 0xf
000053a9:	sub cx, cx
000053ab:	mov [bp-0x22], cx
000053ae:	mov [bp-0x20], ax
000053b1:	mov ax, [bp-0xa]
000053b4:	mov dx, [bp-0x8]
000053b7:	shr dx, 0x1
000053b9:	rcr ax, 0x1
000053bb:	or dx, [bp-0x20]
000053be:	mov [bp-0xa], ax
000053c1:	mov [bp-0x8], dx
000053c4:	xor ax, [bp-0x6]
000053c7:	xor dx, [bp-0x4]
000053ca:	xor ax, [bp-0x16]
000053cd:	xor dx, [bp-0x14]
000053d0:	mov [bp-0xa], ax
000053d3:	mov [bp-0x8], dx
000053d6:	mov ax, [bp-0x6]
000053d9:	shl ax, 0xd
000053dc:	mov [bp-0x26], cx
000053df:	mov [bp-0x24], ax
000053e2:	mov eax, [bp-0x6]
000053e6:	shr eax, 0x3
000053ea:	mov edx, eax
000053ed:	shr edx, 0x10
000053f1:	or dx, [bp-0x24]
000053f4:	mov [bp-0x6], ax
000053f7:	mov [bp-0x4], dx
000053fa:	mov ax, [bp-0x16]
000053fd:	shl ax, 0x3
00005400:	mov [bp-0x2a], cx
00005403:	mov [bp-0x28], ax
00005406:	mov eax, [bp-0x16]
0000540a:	shr eax, 0xd
0000540e:	mov edx, eax
00005411:	shr edx, 0x10
00005415:	or dx, [bp-0x28]
00005418:	mov [bp-0x16], ax
0000541b:	mov [bp-0x14], dx
lbl_541e:
0000541e:	mov eax, [bp-0x6]
00005422:	mov [bp-0xe], eax
00005426:	mov eax, [bp-0x16]
0000542a:	xor [bp-0x6], eax
0000542e:	mov eax, [bp-0x12]
00005432:	and [bp-0x16], eax
00005436:	or [bp-0xe], eax
0000543a:	mov eax, [bp-0xa]
0000543e:	xor [bp-0x12], eax
00005442:	mov eax, [bp-0x16]
00005446:	or [bp-0xa], eax
0000544a:	mov ax, [bp-0x6]
0000544d:	mov dx, [bp-0x4]
00005450:	not ax
00005452:	not dx
00005454:	mov [bp-0x6], ax
00005457:	mov [bp-0x4], dx
0000545a:	xor [bp-0x16], ax
0000545d:	xor [bp-0x14], dx
00005460:	and ax, [bp-0xe]
00005463:	and dx, [bp-0xc]
00005466:	mov [bp-0x6], ax
00005469:	mov [bp-0x4], dx
0000546c:	xor [bp-0xa], ax
0000546f:	xor [bp-0x8], dx
00005472:	xor ax, [bp-0x16]
00005475:	xor dx, [bp-0x14]
00005478:	mov [bp-0x6], ax
0000547b:	mov [bp-0x4], dx
0000547e:	or [bp-0x16], ax
00005481:	or [bp-0x14], dx
00005484:	mov ecx, [bp-0xe]
00005488:	and [bp-0x12], ecx
0000548c:	mov ecx, [bp-0x12]
00005490:	mov bx, [bp-0x10]
00005493:	xor [bp-0x16], ecx
00005497:	mov eax, [bp-0xa]
0000549b:	xor [bp-0xe], eax
0000549f:	xor cx, [bp-0xe]
000054a2:	xor bx, [bp-0xc]
000054a5:	mov [bp-0x12], cx
000054a8:	mov [bp-0x10], bx
000054ab:	mov eax, [bp-0x16]
000054af:	or [bp-0xe], eax
000054b3:	mov eax, [bp-0x6]
000054b7:	xor [bp-0x12], eax
000054bb:	xor [bp-0xe], eax
000054bf:	lea ax, [bp-0xe]
000054c2:	push ax
000054c3:	lea cx, [bp-0xa]
000054c6:	push cx
000054c7:	lea dx, [bp-0x16]
000054ca:	push dx
000054cb:	lea bx, [bp-0x12]
000054ce:	push bx
000054cf:	push 0x1c
000054d1:	push si
000054d2:	call 0x4854
000054d5:	add sp, 0xc
000054d8:	lea ax, [bp-0xe]
000054db:	push ax
000054dc:	lea cx, [bp-0xa]
000054df:	push cx
000054e0:	lea dx, [bp-0x16]
000054e3:	push dx
000054e4:	lea bx, [bp-0x12]
000054e7:	push bx
000054e8:	call 0x5158
000054eb:	add sp, 0x8
000054ee:	mov eax, [bp-0xa]
000054f2:	mov dx, [bp-0x8]
000054f5:	mov [bp-0x6], eax
000054f9:	mov ecx, [bp-0xe]
000054fd:	xor [bp-0x6], ecx
00005501:	xor [bp-0x12], ax
00005504:	xor [bp-0x10], dx
00005507:	mov eax, [bp-0x12]
0000550b:	and [bp-0xa], eax
0000550f:	mov cx, [bp-0xa]
00005512:	mov bx, [bp-0x8]
00005515:	not cx
00005517:	not bx
00005519:	mov [bp-0xa], cx
0000551c:	mov [bp-0x8], bx
0000551f:	mov ecx, [bp-0x16]
00005523:	mov bx, [bp-0x14]
00005526:	xor [bp-0xe], ecx
0000552a:	mov eax, [bp-0xe]
0000552e:	xor [bp-0xa], eax
00005532:	mov eax, [bp-0x12]
00005536:	or [bp-0x6], eax
0000553a:	mov eax, [bp-0xe]
0000553e:	mov dx, [bp-0xc]
00005541:	xor eax, [bp-0x6]
00005545:	xor dx, [bp-0x4]
00005548:	mov [bp-0xe], eax
0000554c:	xor [bp-0x6], cx
0000554f:	xor [bp-0x4], bx
00005552:	and [bp-0x16], eax
00005556:	mov ecx, [bp-0x12]
0000555a:	mov bx, [bp-0x10]
0000555d:	xor ecx, [bp-0xa]
00005561:	xor bx, [bp-0x8]
00005564:	mov [bp-0x12], ecx
00005568:	xor [bp-0x16], ecx
0000556c:	xor cx, ax
0000556e:	xor bx, dx
00005570:	mov [bp-0x12], cx
00005573:	mov [bp-0x10], bx
00005576:	mov eax, [bp-0x16]
0000557a:	xor [bp-0xe], eax
0000557e:	mov eax, [bp-0xa]
00005582:	or [bp-0x12], eax
00005586:	mov eax, [bp-0x12]
0000558a:	xor [bp-0x6], eax
0000558e:	lea ax, [bp-0xe]
00005591:	push ax
00005592:	lea cx, [bp-0x6]
00005595:	push cx
00005596:	lea dx, [bp-0xa]
00005599:	push dx
0000559a:	lea bx, [bp-0x16]
0000559d:	push bx
0000559e:	push 0x18
000055a0:	push si
000055a1:	call 0x4854
000055a4:	add sp, 0xc
000055a7:	lea ax, [bp-0xe]
000055aa:	push ax
000055ab:	lea cx, [bp-0x6]
000055ae:	push cx
000055af:	lea dx, [bp-0xa]
000055b2:	push dx
000055b3:	lea bx, [bp-0x16]
000055b6:	push bx
000055b7:	call 0x5158
000055ba:	add sp, 0x8
000055bd:	mov eax, [bp-0xe]
000055c1:	mov [bp-0x12], eax
000055c5:	mov eax, [bp-0x16]
000055c9:	or [bp-0xe], eax
000055cd:	mov cx, [bp-0xa]
000055d0:	mov bx, [bp-0x8]
000055d3:	not cx
000055d5:	not bx
000055d7:	mov [bp-0xa], cx
000055da:	mov [bp-0x8], bx
000055dd:	xor [bp-0x6], cx
000055e0:	xor [bp-0x4], bx
000055e3:	mov eax, [bp-0x6]
000055e7:	mov dx, [bp-0x4]
000055ea:	xor [bp-0xe], eax
000055ee:	or ax, cx
000055f0:	or dx, bx
000055f2:	mov [bp-0x6], ax
000055f5:	mov [bp-0x4], dx
000055f8:	mov eax, [bp-0x16]
000055fc:	and [bp-0x6], eax
00005600:	mov eax, [bp-0xe]
00005604:	xor [bp-0x12], eax
00005608:	mov eax, [bp-0x12]
0000560c:	xor [bp-0x6], eax
00005610:	or eax, [bp-0x16]
00005614:	mov [bp-0x12], eax
00005618:	xor [bp-0x12], cx
0000561b:	xor [bp-0x10], bx
0000561e:	and cx, [bp-0x6]
00005621:	and bx, [bp-0x4]
00005624:	mov [bp-0xa], cx
00005627:	mov [bp-0x8], bx
0000562a:	mov eax, [bp-0xe]
0000562e:	xor [bp-0xa], eax
00005632:	mov eax, [bp-0x6]
00005636:	xor [bp-0x12], eax
0000563a:	mov eax, [bp-0x12]
0000563e:	and [bp-0xe], eax
00005642:	xor eax, [bp-0xa]
00005646:	mov [bp-0x12], eax
0000564a:	xor eax, [bp-0x16]
0000564e:	xor [bp-0xe], eax
00005652:	not word [bp-0x12]
00005655:	not word [bp-0x10]
00005658:	lea ax, [bp-0x6]
0000565b:	push ax
0000565c:	lea cx, [bp-0xe]
0000565f:	push cx
00005660:	lea dx, [bp-0x12]
00005663:	push dx
00005664:	lea bx, [bp-0xa]
00005667:	push bx
00005668:	push 0x14
0000566a:	push si
0000566b:	call 0x4854
0000566e:	add sp, 0xc
00005671:	lea ax, [bp-0x6]
00005674:	push ax
00005675:	lea cx, [bp-0xe]
00005678:	push cx
00005679:	lea dx, [bp-0x12]
0000567c:	push dx
0000567d:	lea bx, [bp-0xa]
00005680:	push bx
00005681:	call 0x5158
00005684:	add sp, 0x8
00005687:	mov eax, [bp-0xe]
0000568b:	mov [bp-0x16], eax
0000568f:	mov eax, [bp-0x6]
00005693:	mov dx, [bp-0x4]
00005696:	and [bp-0xe], eax
0000569a:	mov ecx, [bp-0x12]
0000569e:	xor [bp-0xe], ecx
000056a2:	or [bp-0x12], ax
000056a5:	or [bp-0x10], dx
000056a8:	mov eax, [bp-0xa]
000056ac:	and [bp-0x12], eax
000056b0:	mov ecx, [bp-0x12]
000056b4:	xor ecx, [bp-0xe]
000056b8:	xor [bp-0x16], ecx
000056bc:	mov ecx, [bp-0x12]
000056c0:	and ecx, [bp-0xe]
000056c4:	mov [bp-0x12], ecx
000056c8:	mov ecx, [bp-0x16]
000056cc:	mov bx, [bp-0x14]
000056cf:	xor [bp-0x6], ecx
000056d3:	mov eax, [bp-0x6]
000056d7:	xor [bp-0x12], eax
000056db:	mov ax, [bp-0xa]
000056de:	mov dx, [bp-0x8]
000056e1:	not ax
000056e3:	not dx
000056e5:	mov [bp-0xa], ax
000056e8:	mov [bp-0x8], dx
000056eb:	and ax, [bp-0x6]
000056ee:	and dx, [bp-0x4]
000056f1:	mov [bp-0x6], ax
000056f4:	mov [bp-0x4], dx
000056f7:	mov eax, [bp-0xe]
000056fb:	xor [bp-0x6], eax
000056ff:	mov eax, [bp-0xa]
00005703:	mov dx, [bp-0x8]
00005706:	xor eax, [bp-0x12]
0000570a:	xor dx, [bp-0x10]
0000570d:	mov [bp-0xa], eax
00005711:	and [bp-0xe], eax
00005715:	xor [bp-0xe], cx
00005718:	xor [bp-0xc], bx
0000571b:	xor [bp-0x6], eax
0000571f:	mov ecx, [bp-0x6]
00005723:	mov bx, [bp-0x4]
00005726:	or [bp-0xe], ecx
0000572a:	xor cx, ax
0000572c:	xor bx, dx
0000572e:	mov [bp-0x6], cx
00005731:	mov [bp-0x4], bx
00005734:	mov eax, [bp-0x12]
00005738:	xor [bp-0xe], eax
0000573c:	lea ax, [bp-0x16]
0000573f:	push ax
00005740:	lea cx, [bp-0xe]
00005743:	push cx
00005744:	lea dx, [bp-0x6]
00005747:	push dx
00005748:	lea bx, [bp-0xa]
0000574b:	push bx
0000574c:	push 0x10
0000574e:	push si
0000574f:	call 0x4854
00005752:	add sp, 0xc
00005755:	lea ax, [bp-0x16]
00005758:	push ax
00005759:	lea cx, [bp-0xe]
0000575c:	push cx
0000575d:	lea dx, [bp-0x6]
00005760:	push dx
00005761:	lea bx, [bp-0xa]
00005764:	push bx
00005765:	call 0x5158
00005768:	add sp, 0x8
0000576b:	mov eax, [bp-0xe]
0000576f:	mov [bp-0x12], eax
00005773:	mov eax, [bp-0x6]
00005777:	xor [bp-0xe], eax
0000577b:	mov eax, [bp-0xe]
0000577f:	mov dx, [bp-0xc]
00005782:	and [bp-0x6], eax
00005786:	mov ecx, [bp-0xa]
0000578a:	xor [bp-0x6], ecx
0000578e:	mov ecx, [bp-0x12]
00005792:	and [bp-0xa], ecx
00005796:	mov ecx, [bp-0x16]
0000579a:	xor [bp-0x12], ecx
0000579e:	mov ecx, [bp-0x6]
000057a2:	mov bx, [bp-0x4]
000057a5:	or [bp-0x16], ecx
000057a9:	xor [bp-0x16], ax
000057ac:	xor [bp-0x14], dx
000057af:	mov eax, [bp-0x12]
000057b3:	xor [bp-0xa], eax
000057b7:	mov eax, [bp-0xe]
000057bb:	xor eax, [bp-0xa]
000057bf:	mov [bp-0xe], eax
000057c3:	mov eax, [bp-0xa]
000057c7:	or eax, [bp-0x16]
000057cb:	mov [bp-0xa], eax
000057cf:	xor [bp-0xa], cx
000057d2:	xor [bp-0x8], bx
000057d5:	mov eax, [bp-0xe]
000057d9:	xor [bp-0x12], eax
000057dd:	mov eax, [bp-0x16]
000057e1:	or [bp-0x6], eax
000057e5:	and [bp-0xe], eax
000057e9:	mov eax, [bp-0xe]
000057ed:	mov dx, [bp-0xc]
000057f0:	xor [bp-0x6], eax
000057f4:	mov ecx, [bp-0xa]
000057f8:	xor [bp-0x12], ecx
000057fc:	xor ax, [bp-0x12]
000057ff:	xor dx, [bp-0x10]
00005802:	mov [bp-0xe], ax
00005805:	mov [bp-0xc], dx
00005808:	lea ax, [bp-0x6]
0000580b:	push ax
0000580c:	lea cx, [bp-0xe]
0000580f:	push cx
00005810:	lea dx, [bp-0xa]
00005813:	push dx
00005814:	lea bx, [bp-0x16]
00005817:	push bx
00005818:	push 0xc
0000581a:	push si
0000581b:	call 0x4854
0000581e:	add sp, 0xc
00005821:	lea ax, [bp-0x6]
00005824:	push ax
00005825:	lea cx, [bp-0xe]
00005828:	push cx
00005829:	lea dx, [bp-0xa]
0000582c:	push dx
0000582d:	lea bx, [bp-0x16]
00005830:	push bx
00005831:	call 0x5158
00005834:	add sp, 0x8
00005837:	mov eax, [bp-0x6]
0000583b:	xor [bp-0xe], eax
0000583f:	mov eax, [bp-0x16]
00005843:	mov dx, [bp-0x14]
00005846:	xor [bp-0x6], eax
0000584a:	mov ecx, [bp-0x6]
0000584e:	mov [bp-0x12], ecx
00005852:	and ecx, [bp-0xe]
00005856:	mov [bp-0x6], ecx
0000585a:	mov ecx, [bp-0xa]
0000585e:	xor [bp-0x6], ecx
00005862:	mov ecx, [bp-0xe]
00005866:	or [bp-0xa], ecx
0000586a:	mov ecx, [bp-0x12]
0000586e:	xor [bp-0xa], ecx
00005872:	and ax, [bp-0x6]
00005875:	and dx, [bp-0x4]
00005878:	and [bp-0x12], ax
0000587b:	and [bp-0x10], dx
0000587e:	mov eax, [bp-0x6]
00005882:	mov dx, [bp-0x4]
00005885:	xor [bp-0xe], eax
00005889:	mov ecx, [bp-0xe]
0000588d:	xor [bp-0x12], ecx
00005891:	and ecx, [bp-0xa]
00005895:	mov [bp-0xe], ecx
00005899:	mov ecx, [bp-0x16]
0000589d:	or [bp-0xe], ecx
000058a1:	not ax
000058a3:	not dx
000058a5:	mov [bp-0x6], ax
000058a8:	mov [bp-0x4], dx
000058ab:	xor [bp-0xe], ax
000058ae:	xor [bp-0xc], dx
000058b1:	xor [bp-0x16], ax
000058b4:	xor [bp-0x14], dx
000058b7:	xor ax, [bp-0x12]
000058ba:	xor dx, [bp-0x10]
000058bd:	mov [bp-0x6], ax
000058c0:	mov [bp-0x4], dx
000058c3:	mov eax, [bp-0xa]
000058c7:	and [bp-0x16], eax
000058cb:	mov eax, [bp-0x16]
000058cf:	xor [bp-0x6], eax
000058d3:	lea ax, [bp-0x6]
000058d6:	push ax
000058d7:	lea cx, [bp-0xe]
000058da:	push cx
000058db:	lea dx, [bp-0x12]
000058de:	push dx
000058df:	lea bx, [bp-0xa]
000058e2:	push bx
000058e3:	push 0x8
000058e5:	push si
000058e6:	call 0x4854
000058e9:	add sp, 0xc
000058ec:	lea ax, [bp-0x6]
000058ef:	push ax
000058f0:	lea cx, [bp-0xe]
000058f3:	push cx
000058f4:	lea dx, [bp-0x12]
000058f7:	push dx
000058f8:	lea bx, [bp-0xa]
000058fb:	push bx
000058fc:	call 0x5158
000058ff:	add sp, 0x8
00005902:	mov eax, [bp-0x12]
00005906:	mov [bp-0x16], eax
0000590a:	mov eax, [bp-0x6]
0000590e:	xor [bp-0x12], eax
00005912:	mov eax, [bp-0x12]
00005916:	mov dx, [bp-0x10]
00005919:	and [bp-0x6], eax
0000591d:	mov ecx, [bp-0xe]
00005921:	xor [bp-0x16], ecx
00005925:	mov ecx, [bp-0xa]
00005929:	xor [bp-0x6], ecx
0000592d:	or [bp-0xa], ax
00005930:	or [bp-0x8], dx
00005933:	mov ecx, [bp-0x16]
00005937:	mov bx, [bp-0x14]
0000593a:	xor [bp-0xa], ecx
0000593e:	mov eax, [bp-0x6]
00005942:	xor [bp-0xe], eax
00005946:	mov eax, [bp-0xe]
0000594a:	or [bp-0xa], eax
0000594e:	mov eax, [bp-0x12]
00005952:	xor eax, [bp-0x6]
00005956:	mov [bp-0x12], eax
0000595a:	xor [bp-0xa], eax
0000595e:	or eax, [bp-0x6]
00005962:	mov [bp-0x12], eax
00005966:	not cx
00005968:	not bx
0000596a:	mov [bp-0x16], cx
0000596d:	mov [bp-0x14], bx
00005970:	mov eax, [bp-0xa]
00005974:	mov dx, [bp-0x8]
00005977:	xor [bp-0x12], eax
0000597b:	mov ecx, [bp-0x12]
0000597f:	mov bx, [bp-0x10]
00005982:	xor [bp-0x16], ecx
00005986:	or cx, ax
00005988:	or bx, dx
0000598a:	mov [bp-0x12], cx
0000598d:	mov [bp-0x10], bx
00005990:	xor [bp-0x12], ax
00005993:	xor [bp-0x10], dx
00005996:	mov eax, [bp-0x16]
0000599a:	or [bp-0x12], eax
0000599e:	mov eax, [bp-0x12]
000059a2:	xor [bp-0x6], eax
000059a6:	lea ax, [bp-0xe]
000059a9:	push ax
000059aa:	lea cx, [bp-0x6]
000059ad:	push cx
000059ae:	lea dx, [bp-0xa]
000059b1:	push dx
000059b2:	lea bx, [bp-0x16]
000059b5:	push bx
000059b6:	push 0x4
000059b8:	push si
000059b9:	call 0x4854
000059bc:	add sp, 0xc
000059bf:	lea ax, [bp-0xe]
000059c2:	push ax
000059c3:	lea cx, [bp-0x6]
000059c6:	push cx
000059c7:	lea dx, [bp-0xa]
000059ca:	push dx
000059cb:	lea bx, [bp-0x16]
000059ce:	push bx
000059cf:	call 0x5158
000059d2:	add sp, 0x8
000059d5:	mov eax, [bp-0xa]
000059d9:	mov [bp-0x12], eax
000059dd:	mov eax, [bp-0x16]
000059e1:	or [bp-0xa], eax
000059e5:	mov ax, [bp-0x6]
000059e8:	mov dx, [bp-0x4]
000059eb:	not ax
000059ed:	not dx
000059ef:	mov [bp-0x6], ax
000059f2:	mov [bp-0x4], dx
000059f5:	xor [bp-0xa], ax
000059f8:	xor [bp-0x8], dx
000059fb:	mov cx, [bp-0x12]
000059fe:	mov bx, [bp-0x10]
00005a01:	not cx
00005a03:	not bx
00005a05:	mov [bp-0x12], cx
00005a08:	mov [bp-0x10], bx
00005a0b:	or ax, cx
00005a0d:	or dx, bx
00005a0f:	mov [bp-0x6], ax
00005a12:	mov [bp-0x4], dx
00005a15:	xor [bp-0x16], cx
00005a18:	xor [bp-0x14], bx
00005a1b:	mov eax, [bp-0x16]
00005a1f:	mov dx, [bp-0x14]
00005a22:	xor [bp-0x6], eax
00005a26:	and eax, [bp-0xe]
00005a2a:	and dx, [bp-0xc]
00005a2d:	mov [bp-0x16], eax
00005a31:	xor cx, ax
00005a33:	xor bx, dx
00005a35:	mov [bp-0x12], cx
00005a38:	mov [bp-0x10], bx
00005a3b:	mov eax, [bp-0xe]
00005a3f:	xor [bp-0xa], eax
00005a43:	mov eax, [bp-0xa]
00005a47:	mov dx, [bp-0x8]
00005a4a:	or [bp-0x16], eax
00005a4e:	mov ecx, [bp-0x6]
00005a52:	xor [bp-0x16], ecx
00005a56:	mov ecx, [bp-0x12]
00005a5a:	xor [bp-0xe], ecx
00005a5e:	xor [bp-0x6], ax
00005a61:	xor [bp-0x4], dx
00005a64:	mov ecx, [bp-0x16]
00005a68:	xor [bp-0xe], ecx
00005a6c:	xor [bp-0xe], ax
00005a6f:	xor [bp-0xc], dx
00005a72:	mov eax, [bp-0xe]
00005a76:	and [bp-0x6], eax
00005a7a:	mov eax, [bp-0x6]
00005a7e:	xor [bp-0x12], eax
00005a82:	lea ax, [bp-0xe]
00005a85:	push ax
00005a86:	lea ax, [bp-0xa]
00005a89:	push ax
00005a8a:	lea ax, [bp-0x12]
00005a8d:	push ax
00005a8e:	lea ax, [bp-0x16]
00005a91:	push ax
00005a92:	push 0x0
00005a94:	push si
00005a95:	call 0x4854
00005a98:	add sp, 0xc
00005a9b:	dec di
00005a9c:	jnz 0x52e0
00005aa0:	mov bx, [bp-0x2]
00005aa3:	mov eax, [bp-0x16]
00005aa7:	mov [bx], eax
00005aaa:	mov eax, [bp-0x12]
00005aae:	mov [bx+0x4], eax
00005ab2:	mov eax, [bp-0xa]
00005ab6:	mov [bx+0x8], eax
00005aba:	mov eax, [bp-0xe]
00005abe:	mov [bx+0xc], eax
00005ac2:	pop si
00005ac3:	pop di
00005ac4:	leave
00005ac5:	ret
---ENDPROC---  ; sub_528a ; length = 2108 bytes ; 16 calls out


---STARTPROC---
sub_5ac6:
00005ac6:	enter 0x4, 0x0
00005aca:	push di
00005acb:	push si
00005acc:	mov bl, [bp+0x8]
00005acf:	shr bl, 0x4
00005ad2:	mov ax, bx
00005ad4:	sub bh, bh
00005ad6:	mov cl, [bx+0x6ff0]
00005ada:	mov bl, [bp+0x8]
00005add:	and bl, 0xf
00005ae0:	mov dx, bx
00005ae2:	xor cl, [bx+0x6fe0]
00005ae6:	sub ch, ch
00005ae8:	mov si, cx
00005aea:	mov bx, [bp+0x4]
00005aed:	shl bx, 0x4
00005af0:	xor al, dl
00005af2:	sub ah, ah
00005af4:	mov di, ax
00005af6:	mov ax, bx
00005af8:	mov bl, [bx+di+0x7000]
00005afc:	mov cx, bx
00005afe:	mov bx, ax
00005b00:	mov dx, bx
00005b02:	mov bl, [bx+si+0x7020]
00005b06:	mov ax, bx
00005b08:	sub bh, bh
00005b0a:	mov [bp-0x4], ax
00005b0d:	mov al, [bx+0x6fe0]
00005b11:	mov bl, cl
00005b13:	mov cx, bx
00005b15:	xor al, [bx+0x6ff0]
00005b19:	mov si, dx
00005b1b:	mov bl, al
00005b1d:	mov al, [bx+si+0x7060]
00005b21:	shl al, 0x4
00005b24:	xor cl, [bp-0x4]
00005b27:	mov bx, dx
00005b29:	mov di, cx
00005b2b:	or al, [bx+di+0x7040]
00005b2f:	pop si
00005b30:	pop di
00005b31:	leave
00005b32:	ret
---ENDPROC---  ; sub_5ac6 ; length = 109 bytes ; 0 calls out

00005b33:	db 0x00 

---STARTPROC---
sub_5b34:
00005b34:	enter 0x6, 0x0
00005b38:	mov dword [bp-0x4], 0x0
lbl_5b40:
00005b40:	mov ax, [bp-0x4]
00005b43:	push ax
00005b44:	push dword 0x0
00005b47:	mov [bp-0x6], ax
00005b4a:	call 0x5ac6
00005b4d:	mov bx, [bp-0x4]
00005b50:	add sp, 0x6
00005b53:	mov [bx+0x7e56], al
00005b57:	mov al, [bp-0x6]
00005b5a:	push ax
00005b5b:	push dword 0x1
00005b5e:	call 0x5ac6
00005b61:	mov bx, [bp-0x4]
00005b64:	add sp, 0x6
00005b67:	mov [bx+0x7f56], al
00005b6b:	inc dword [bp-0x4]
00005b6f:	cmp dword [bp-0x4], 0x100
00005b77:	jb 0x5b40
00005b79:	leave
00005b7a:	ret
---ENDPROC---  ; sub_5b34 ; length = 71 bytes ; 2 calls out

00005b7b:	db 0x00 

---STARTPROC---
sub_5b7c:
00005b7c:	enter 0x2c, 0x0
00005b80:	push di
00005b81:	push si
00005b82:	sub ax, ax
00005b84:	mov [bp-0x4], ax
00005b87:	mov si, 0x8056
lbl_5b8a:
00005b8a:	push dword 0x10100
00005b90:	mov bx, [bp-0x4]
00005b93:	sub ah, ah
00005b95:	mov al, [bx+0x7f56]
00005b99:	sub dx, dx
00005b9b:	mov cx, ax
00005b9d:	mov di, dx
00005b9f:	shr dx, 0x1
00005ba1:	rcr ax, 0x1
00005ba3:	shr dx, 0x1
00005ba5:	rcr ax, 0x1
00005ba7:	mov bx, cx
00005ba9:	and bx, 0x3
00005bac:	mov [bp-0x8], ax
00005baf:	mov [bp-0x6], dx
00005bb2:	mov al, [bx+0x6fd8]
00005bb6:	sub ah, ah
00005bb8:	sub dx, dx
00005bba:	xor ax, [bp-0x8]
00005bbd:	xor dx, [bp-0x6]
00005bc0:	mov [bp-0xc], cx
00005bc3:	mov [bp-0xa], di
00005bc6:	xor cx, ax
00005bc8:	xor di, dx
00005bca:	mov eax, [bp-0xc]
00005bce:	shr eax, 0x1
00005bd1:	xor eax, [bp-0xc]
00005bd5:	shr eax, 0x1
00005bd8:	mov [bp-0x10], eax
00005bdc:	mov al, [bx+0x6fdc]
00005be0:	sub ah, ah
00005be2:	sub dx, dx
00005be4:	xor ax, [bp-0x10]
00005be7:	xor dx, [bp-0xe]
00005bea:	xor ax, [bp-0xc]
00005bed:	xor dx, [bp-0xa]
00005bf0:	push dx
00005bf1:	push ax
00005bf2:	mov [bp-0x14], ax
00005bf5:	mov [bp-0x12], dx
00005bf8:	mov [bp-0x18], cx
00005bfb:	mov [bp-0x16], di
00005bfe:	pop eax
00005c00:	pop ecx
00005c02:	mul ecx
00005c05:	add eax, [bp-0x18]
00005c09:	shl eax, 0x8
00005c0d:	add eax, [bp-0xc]
00005c11:	mov [si], eax
00005c14:	mov eax, [bp-0x14]
00005c18:	mov ecx, 0x1000100
00005c1e:	mul ecx
00005c21:	add eax, [bp-0x18]
00005c25:	mov edx, eax
00005c28:	shr edx, 0x10
00005c2c:	mov cx, [bp-0xc]
00005c2f:	sub bx, bx
00005c31:	add ax, bx
00005c33:	adc dx, cx
00005c35:	mov [si+0x800], ax
00005c39:	mov [si+0x802], dx
00005c3d:	push bx
00005c3e:	push word 0x101
00005c41:	mov bx, [bp-0x4]
00005c44:	sub ah, ah
00005c46:	mov al, [bx+0x7e56]
00005c4a:	sub dx, dx
00005c4c:	mov cx, ax
00005c4e:	mov bx, dx
00005c50:	mov ah, al
00005c52:	sub al, al
00005c54:	mov [bp-0x1c], cx
00005c57:	mov [bp-0x1a], dx
00005c5a:	shr bx, 0x1
00005c5c:	rcr cx, 0x1
00005c5e:	shr bx, 0x1
00005c60:	rcr cx, 0x1
00005c62:	mov di, bx
00005c64:	mov bl, [bp-0x1c]
00005c67:	and bx, 0x3
00005c6a:	mov [bp-0x20], ax
00005c6d:	mov al, [bx+0x6fd8]
00005c71:	sub ah, ah
00005c73:	xor cx, ax
00005c75:	xor di, dx
00005c77:	xor cx, [bp-0x1c]
00005c7a:	xor di, dx
00005c7c:	mov ax, [bp-0x1c]
00005c7f:	shr dx, 0x1
00005c81:	rcr ax, 0x1
00005c83:	xor ax, [bp-0x1c]
00005c86:	xor dx, [bp-0x1a]
00005c89:	shr dx, 0x1
00005c8b:	rcr ax, 0x1
00005c8d:	mov [bp-0x24], ax
00005c90:	mov [bp-0x22], dx
00005c93:	mov al, [bx+0x6fdc]
00005c97:	sub ah, ah
00005c99:	sub dx, dx
00005c9b:	xor ax, [bp-0x24]
00005c9e:	xor dx, [bp-0x22]
00005ca1:	xor ax, [bp-0x1c]
00005ca4:	xor dx, [bp-0x1a]
00005ca7:	push dx
00005ca8:	push ax
00005ca9:	mov [bp-0x28], ax
00005cac:	mov [bp-0x26], dx
00005caf:	mov [bp-0x2c], cx
00005cb2:	mov [bp-0x2a], di
00005cb5:	pop eax
00005cb7:	pop ecx
00005cb9:	mul ecx
00005cbc:	mov edx, eax
00005cbf:	shr edx, 0x10
00005cc3:	mov cx, [bp-0x2c]
00005cc6:	add cx, [bp-0x20]
00005cc9:	sub bx, bx
00005ccb:	add ax, bx
00005ccd:	adc dx, cx
00005ccf:	mov [si+0x400], ax
00005cd3:	mov [si+0x402], dx
00005cd7:	mov eax, [bp-0x2c]
00005cdb:	mov ecx, 0x1000001
00005ce1:	mul ecx
00005ce4:	mov edx, eax
00005ce7:	shr edx, 0x10
00005ceb:	mov cx, ax
00005ced:	mov bx, dx
00005cef:	mov eax, [bp-0x28]
00005cf3:	shl eax, 0x8
00005cf7:	add eax, [bp-0x1c]
00005cfb:	shl eax, 0x8
00005cff:	mov edx, eax
00005d02:	shr edx, 0x10
00005d06:	add cx, ax
00005d08:	adc bx, dx
00005d0a:	mov [si+0xc00], cx
00005d0e:	mov [si+0xc02], bx
00005d12:	add word [bp-0x4], 0x1
00005d16:	add si, 0x4
00005d19:	cmp si, 0x8456
00005d1d:	jb 0x5b8a
00005d21:	pop si
00005d22:	pop di
00005d23:	leave
00005d24:	ret
---ENDPROC---  ; sub_5b7c ; length = 425 bytes ; 0 calls out

00005d25:	db 0x00 

---STARTPROC---
sub_5d26:
00005d26:	enter 0x18, 0x0
00005d2a:	push si
00005d2b:	mov al, [bp+0x6]
00005d2e:	sub ah, ah
00005d30:	mov [bp-0x4], ax
00005d33:	mov ax, [bp+0x6]
00005d36:	mov dx, [bp+0x8]
00005d39:	mov al, ah
00005d3b:	mov dl, dh
00005d3d:	sub dh, dh
00005d3f:	sub ah, ah
00005d41:	mov [bp-0x8], ax
00005d44:	mov al, [bp+0x8]
00005d47:	mov [bp-0xc], ax
00005d4a:	mov al, [bp+0x9]
00005d4d:	mov [bp-0x10], ax
00005d50:	mov bx, [bp+0x4]
00005d53:	mov ax, [bx+0xb0]
00005d57:	mov dx, [bx+0xb2]
00005d5b:	cmp dx, 0x0
00005d5e:	jnz 0x5e88
00005d62:	dec ax
00005d63:	dec ax
00005d64:	jz 0x5d70
00005d66:	dec ax
00005d67:	jz 0x5d76
00005d69:	dec ax
00005d6a:	jz 0x5d7c
00005d6c:	jmp 0x5e88
00005d6f:	db 0x90 
lbl_5d70:
00005d70:	mov si, [bp+0xa]
00005d73:	jmp 0x5e05
lbl_5d76:
00005d76:	mov si, [bp+0xa]
00005d79:	jmp 0x5dc2
00005d7b:	db 0x90 
lbl_5d7c:
00005d7c:	mov si, [bp+0xa]
00005d7f:	mov bl, [bp-0x4]
00005d82:	sub bh, bh
00005d84:	mov al, [bx+0x7f56]
00005d88:	xor al, [si+0xc]
00005d8b:	sub ah, ah
00005d8d:	mov [bp-0x4], ax
00005d90:	mov ax, [si+0xc]
00005d93:	mov dx, [si+0xe]
00005d96:	mov al, ah
00005d98:	mov dl, dh
00005d9a:	sub dh, dh
00005d9c:	mov bl, [bp-0x8]
00005d9f:	xor al, [bx+0x7e56]
00005da3:	sub ah, ah
00005da5:	mov [bp-0x8], ax
00005da8:	mov bl, [bp-0xc]
00005dab:	mov al, [si+0xe]
00005dae:	xor al, [bx+0x7e56]
00005db2:	mov [bp-0xc], ax
00005db5:	mov bl, [bp-0x10]
00005db8:	mov al, [si+0xf]
00005dbb:	xor al, [bx+0x7f56]
00005dbf:	mov [bp-0x10], ax
lbl_5dc2:
00005dc2:	mov bl, [bp-0x4]
00005dc5:	sub bh, bh
00005dc7:	mov al, [bx+0x7f56]
00005dcb:	xor al, [si+0x8]
00005dce:	sub ah, ah
00005dd0:	mov [bp-0x4], ax
00005dd3:	mov ax, [si+0x8]
00005dd6:	mov dx, [si+0xa]
00005dd9:	mov al, ah
00005ddb:	mov dl, dh
00005ddd:	sub dh, dh
00005ddf:	mov bl, [bp-0x8]
00005de2:	xor al, [bx+0x7f56]
00005de6:	sub ah, ah
00005de8:	mov [bp-0x8], ax
00005deb:	mov bl, [bp-0xc]
00005dee:	mov al, [si+0xa]
00005df1:	xor al, [bx+0x7e56]
00005df5:	mov [bp-0xc], ax
00005df8:	mov bl, [bp-0x10]
00005dfb:	mov al, [si+0xb]
00005dfe:	xor al, [bx+0x7e56]
00005e02:	mov [bp-0x10], ax
lbl_5e05:
00005e05:	mov bl, [bp-0x4]
00005e08:	sub bh, bh
00005e0a:	mov bl, [bx+0x7e56]
00005e0e:	xor bl, [si+0x4]
00005e11:	mov al, [bx+0x7e56]
00005e15:	xor al, [si]
00005e17:	sub ah, ah
00005e19:	mov [bp-0x4], ax
00005e1c:	mov bl, [bp-0x8]
00005e1f:	mov al, [bx+0x7f56]
00005e23:	mov dx, [si+0x6]
00005e26:	mov bx, [si+0x4]
00005e29:	mov cx, ax
00005e2b:	mov [bp-0x12], dx
00005e2e:	mov ax, [si]
00005e30:	mov dx, [si+0x2]
00005e33:	mov si, dx
00005e35:	mov al, ah
00005e37:	mov ah, dl
00005e39:	mov dl, dh
00005e3b:	sub dh, dh
00005e3d:	mov [bp-0x16], si
00005e40:	mov dx, cx
00005e42:	mov cl, 0x8
00005e44:	mov si, [bp-0x12]
lbl_5e47:
00005e47:	shr si, 0x1
00005e49:	rcr bx, 0x1
00005e4b:	dec cl
00005e4d:	jnz 0x5e47
00005e4f:	xor bl, dl
00005e51:	sub bh, bh
00005e53:	xor al, [bx+0x7e56]
00005e57:	sub ah, ah
00005e59:	mov [bp-0x8], ax
00005e5c:	mov bl, [bp-0xc]
00005e5f:	mov al, [bx+0x7e56]
00005e63:	mov bl, [bp-0x12]
00005e66:	xor bl, al
00005e68:	mov al, [bp-0x16]
00005e6b:	xor al, [bx+0x7f56]
00005e6f:	mov [bp-0xc], ax
00005e72:	mov bl, [bp-0x10]
00005e75:	mov al, [bx+0x7f56]
00005e79:	mov bl, [bp-0x11]
00005e7c:	xor bl, al
00005e7e:	mov al, [bp-0x15]
00005e81:	xor al, [bx+0x7f56]
00005e85:	mov [bp-0x10], ax
lbl_5e88:
00005e88:	mov bx, [bp-0x10]
00005e8b:	shl bx, 0x2
00005e8e:	mov ax, [bx-0x73aa]
00005e92:	mov dx, [bx-0x73a8]
00005e96:	mov bx, [bp-0xc]
00005e99:	shl bx, 0x2
00005e9c:	xor ax, [bx-0x77aa]
00005ea0:	xor dx, [bx-0x77a8]
00005ea4:	mov bx, [bp-0x8]
00005ea7:	shl bx, 0x2
00005eaa:	xor ax, [bx-0x7baa]
00005eae:	xor dx, [bx-0x7ba8]
00005eb2:	mov bx, [bp-0x4]
00005eb5:	shl bx, 0x2
00005eb8:	xor ax, [bx-0x7faa]
00005ebc:	xor dx, [bx-0x7fa8]
00005ec0:	pop si
00005ec1:	leave
00005ec2:	ret
---ENDPROC---  ; sub_5d26 ; length = 413 bytes ; 0 calls out

00005ec3:	db 0x00 

---STARTPROC---
sub_5ec4:
00005ec4:	enter 0x8, 0x0
00005ec8:	mov bx, 0x8
lbl_5ecb:
00005ecb:	mov al, [bp+0xb]
00005ece:	sub ah, ah
00005ed0:	mov [bp-0x8], ax
00005ed3:	mov word [bp-0x6], 0x0
00005ed8:	mov eax, [bp+0x8]
00005edc:	shl eax, 0x8
00005ee0:	mov cl, [bp+0x7]
00005ee3:	sub ch, ch
00005ee5:	or ax, cx
00005ee7:	mov [bp+0x8], eax
00005eeb:	mov eax, [bp+0x4]
00005eef:	shl eax, 0x8
00005ef3:	mov [bp+0x4], eax
00005ef7:	mov eax, [bp-0x8]
00005efb:	add eax, eax
00005efe:	mov [bp-0x4], eax
00005f02:	test byte [bp-0x8], 0x80
00005f06:	jz 0x5f0d
00005f08:	xor word [bp-0x4], 0x14d
lbl_5f0d:
00005f0d:	mov ax, [bp-0x4]
00005f10:	mov dx, ax
00005f12:	sub cx, cx
00005f14:	xor cx, [bp-0x8]
00005f17:	xor dx, [bp-0x6]
00005f1a:	xor [bp+0x8], cx
00005f1d:	xor [bp+0xa], dx
00005f20:	mov eax, [bp-0x8]
00005f24:	shr eax, 0x1
00005f27:	xor [bp-0x4], eax
00005f2b:	test byte [bp-0x8], 0x1
00005f2f:	jz 0x5f35
00005f31:	xor byte [bp-0x4], 0xa6
lbl_5f35:
00005f35:	mov ax, [bp-0x4]
00005f38:	mov dx, ax
00005f3a:	or dx, [bp-0x2]
00005f3d:	mov dh, dl
00005f3f:	mov dl, ah
00005f41:	mov ah, al
00005f43:	sub al, al
00005f45:	xor [bp+0x8], ax
00005f48:	xor [bp+0xa], dx
00005f4b:	dec bx
00005f4c:	jnz 0x5ecb
00005f50:	mov ax, [bp+0x8]
00005f53:	mov dx, [bp+0xa]
00005f56:	leave
00005f57:	ret
---ENDPROC---  ; sub_5ec4 ; length = 148 bytes ; 0 calls out


---STARTPROC---
sub_5f58:
00005f58:	enter 0x3a, 0x0
00005f5c:	push di
00005f5d:	push si
00005f5e:	mov di, [bp+0x4]
00005f61:	mov [bp-0x14], di
00005f64:	lea ax, [di+0xa0]
00005f68:	mov [bp-0x12], ax
00005f6b:	cmp dword [0x7080], 0x0
00005f71:	jnz 0x5f7f
00005f73:	call 0x5b34
00005f76:	mov dword [0x7080], 0x1
lbl_5f7f:
00005f7f:	cmp dword [0x7084], 0x0
00005f85:	jnz 0x5f93
00005f87:	call 0x5b7c
00005f8a:	mov dword [0x7084], 0x1
lbl_5f93:
00005f93:	mov ax, [bp+0x8]
00005f96:	mov dx, [bp+0xa]
00005f99:	shr dx, 0x1
00005f9b:	rcr ax, 0x1
00005f9d:	shr dx, 0x1
00005f9f:	rcr ax, 0x1
00005fa1:	shr dx, 0x1
00005fa3:	rcr ax, 0x1
00005fa5:	shr dx, 0x1
00005fa7:	rcr ax, 0x1
00005fa9:	shr dx, 0x1
00005fab:	rcr ax, 0x1
00005fad:	shr dx, 0x1
00005faf:	rcr ax, 0x1
00005fb1:	mov [di+0xb0], ax
00005fb5:	mov [di+0xb2], dx
00005fb9:	mov dword [bp-0x4], 0x0
00005fc1:	or dx, dx
00005fc3:	jnz 0x5fc9
00005fc5:	or ax, ax
00005fc7:	jz 0x6032
lbl_5fc9:
00005fc9:	lea dx, [bp-0x24]
00005fcc:	mov si, [bp+0x6]
00005fcf:	lea ax, [bp-0x34]
00005fd2:	mov [bp-0xe], ax
00005fd5:	mov [bp-0x10], dx
00005fd8:	mov di, dx
lbl_5fda:
00005fda:	mov eax, [si]
00005fdd:	mov [bp-0x8], eax
00005fe1:	mov bx, [bp-0xe]
00005fe4:	mov [bx], eax
00005fe7:	mov eax, [si+0x4]
00005feb:	mov [bp-0xc], eax
00005fef:	mov [di], eax
00005ff2:	push dword [bp-0xc]
00005ff6:	push dword [bp-0x8]
00005ffa:	call 0x5ec4
00005ffd:	mov bx, [bp+0x4]
00006000:	add sp, 0x8
00006003:	mov bx, [bx+0xb0]
00006007:	sub bx, [bp-0x4]
0000600a:	shl bx, 0x2
0000600d:	add bx, [bp-0x12]
00006010:	mov [bx-0x4], ax
00006013:	mov [bx-0x2], dx
00006016:	add di, 0x4
00006019:	add si, 0x8
0000601c:	add word [bp-0xe], 0x4
00006020:	inc dword [bp-0x4]
00006024:	mov eax, [bp-0x4]
00006028:	mov bx, [bp+0x4]
0000602b:	cmp [bx+0xb0], eax
00006030:	ja 0x5fda
lbl_6032:
00006032:	mov si, [bp-0x14]
00006035:	mov dword [bp-0x4], 0x1010101
0000603d:	mov di, [bp+0x4]
lbl_6040:
00006040:	lea ax, [bp-0x34]
00006043:	push ax
00006044:	mov eax, [bp-0x4]
00006048:	sub eax, 0x1010101
0000604e:	push eax
00006050:	push di
00006051:	call 0x5d26
00006054:	add sp, 0x8
00006057:	mov [bp-0x8], ax
0000605a:	mov [bp-0x6], dx
0000605d:	lea ax, [bp-0x24]
00006060:	push ax
00006061:	push dword [bp-0x4]
00006065:	push di
00006066:	call 0x5d26
00006069:	add sp, 0x8
0000606c:	lea cx, [bp-0x24]
0000606f:	push cx
00006070:	push dword [bp-0x4]
00006074:	push di
00006075:	mov [bp-0x38], ax
00006078:	mov [bp-0x36], dx
0000607b:	call 0x5d26
0000607e:	add sp, 0x8
00006081:	mov dl, dh
00006083:	sub dh, dh
00006085:	mov cx, dx
00006087:	mov eax, [bp-0x38]
0000608b:	shl eax, 0x8
0000608f:	or ax, cx
00006091:	mov [bp-0xc], eax
00006095:	add eax, [bp-0x8]
00006099:	mov [si], eax
0000609c:	mov eax, [bp-0xc]
000060a0:	add eax, eax
000060a3:	add eax, [bp-0x8]
000060a7:	mov edx, eax
000060aa:	shr edx, 0x10
000060ae:	mov [bp-0x3a], dx
000060b1:	mov dh, dl
000060b3:	mov dl, ah
000060b5:	mov ah, al
000060b7:	sub al, al
000060b9:	add ax, ax
000060bb:	adc dx, dx
000060bd:	mov cx, [bp-0x3a]
000060c0:	shr cx, 0x7
000060c3:	or ax, cx
000060c5:	mov [si+0x4], ax
000060c8:	mov [si+0x6], dx
000060cb:	add si, 0x8
000060ce:	add dword [bp-0x4], 0x2020202
000060d6:	cmp dword [bp-0x4], 0x29292929
000060de:	jb 0x6040
000060e2:	mov ax, [bp-0x14]
000060e5:	pop si
000060e6:	pop di
000060e7:	leave
000060e8:	ret
---ENDPROC---  ; sub_5f58 ; length = 401 bytes ; 6 calls out

000060e9:	db 0x00 

---STARTPROC---
sub_60ea:
000060ea:	enter 0x2e, 0x0
000060ee:	push di
000060ef:	push si
000060f0:	mov di, [bp+0x4]
000060f3:	mov bx, [bp+0x6]
000060f6:	mov eax, [di]
000060f9:	xor eax, [bx]
000060fc:	mov [bp-0x1e], eax
00006100:	mov eax, [di+0x4]
00006104:	xor eax, [bx+0x4]
00006108:	mov [bp-0x1a], eax
0000610c:	mov eax, [di+0x8]
00006110:	xor eax, [bx+0x8]
00006114:	mov [bp-0x16], eax
00006118:	mov eax, [di+0xc]
0000611c:	xor eax, [bx+0xc]
00006120:	mov [bp-0x12], eax
00006124:	lea ax, [di+0x20]
00006127:	mov word [bp-0xc], 0x8
0000612c:	mov [bp-0xe], di
0000612f:	mov si, ax
lbl_6131:
00006131:	lea ax, [di+0xa0]
00006135:	push ax
00006136:	mov dx, [bp-0x18]
00006139:	mov ax, dx
0000613b:	mov al, ah
0000613d:	sub ah, ah
0000613f:	mov cx, ax
00006141:	mov ax, [bp-0x1a]
00006144:	mov dh, dl
00006146:	mov dl, ah
00006148:	mov ah, al
0000614a:	sub al, al
0000614c:	or ax, cx
0000614e:	push dx
0000614f:	push ax
00006150:	push di
00006151:	call 0x5d26
00006154:	add sp, 0x8
00006157:	mov [bp-0x4], ax
0000615a:	mov [bp-0x2], dx
0000615d:	lea ax, [di+0xa0]
00006161:	push ax
00006162:	push dword [bp-0x1e]
00006166:	push di
00006167:	call 0x5d26
0000616a:	add sp, 0x8
0000616d:	mov [bp-0x8], ax
00006170:	mov [bp-0x6], dx
00006173:	mov eax, [bp-0x4]
00006177:	add eax, [bp-0x8]
0000617b:	add eax, [si]
0000617e:	xor eax, [bp-0x16]
00006182:	mov edx, eax
00006185:	shr edx, 0x10
00006189:	mov cx, ax
0000618b:	mov bx, dx
0000618d:	shl ax, 0xf
00006190:	mov [bp-0x22], cx
00006193:	mov cx, ax
00006195:	sub dx, dx
00006197:	mov [bp-0x26], dx
0000619a:	mov ax, [bp-0x22]
0000619d:	mov dx, bx
0000619f:	shr dx, 0x1
000061a1:	rcr ax, 0x1
000061a3:	or ax, [bp-0x26]
000061a6:	or dx, cx
000061a8:	mov [bp-0x16], ax
000061ab:	mov [bp-0x14], dx
000061ae:	mov cx, [bp-0x12]
000061b1:	mov dx, [bp-0x10]
000061b4:	mov ax, dx
000061b6:	add cx, cx
000061b8:	adc ax, dx
000061ba:	shr dx, 0xf
000061bd:	or cx, dx
000061bf:	mov dx, [bp-0x4]
000061c2:	mov bx, [bp-0x2]
000061c5:	add dx, dx
000061c7:	adc bx, bx
000061c9:	add dx, [si+0x4]
000061cc:	adc bx, [si+0x6]
000061cf:	add dx, [bp-0x8]
000061d2:	adc bx, [bp-0x6]
000061d5:	xor dx, cx
000061d7:	xor bx, ax
000061d9:	mov [bp-0x12], dx
000061dc:	mov [bp-0x10], bx
000061df:	lea ax, [di+0xa0]
000061e3:	push ax
000061e4:	mov dx, bx
000061e6:	mov ax, bx
000061e8:	mov al, ah
000061ea:	sub ah, ah
000061ec:	mov cx, ax
000061ee:	mov ax, [bp-0x12]
000061f1:	mov dh, dl
000061f3:	mov dl, ah
000061f5:	mov ah, al
000061f7:	sub al, al
000061f9:	or ax, cx
000061fb:	push dx
000061fc:	push ax
000061fd:	push di
000061fe:	call 0x5d26
00006201:	add sp, 0x8
00006204:	mov [bp-0x4], ax
00006207:	mov [bp-0x2], dx
0000620a:	lea ax, [di+0xa0]
0000620e:	push ax
0000620f:	push dword [bp-0x16]
00006213:	push di
00006214:	call 0x5d26
00006217:	add sp, 0x8
0000621a:	mov [bp-0x8], ax
0000621d:	mov [bp-0x6], dx
00006220:	mov eax, [si+0x8]
00006224:	add eax, [bp-0x4]
00006228:	add eax, [bp-0x8]
0000622c:	xor eax, [bp-0x1e]
00006230:	mov edx, eax
00006233:	shr edx, 0x10
00006237:	mov cx, ax
00006239:	mov bx, dx
0000623b:	shl ax, 0xf
0000623e:	mov [bp-0x2a], cx
00006241:	mov cx, ax
00006243:	sub dx, dx
00006245:	mov [bp-0x2e], dx
00006248:	mov ax, [bp-0x2a]
0000624b:	mov dx, bx
0000624d:	shr dx, 0x1
0000624f:	rcr ax, 0x1
00006251:	or ax, [bp-0x2e]
00006254:	or dx, cx
00006256:	mov [bp-0x1e], ax
00006259:	mov [bp-0x1c], dx
0000625c:	mov cx, [bp-0x1a]
0000625f:	mov dx, [bp-0x18]
00006262:	mov ax, dx
00006264:	add cx, cx
00006266:	adc ax, dx
00006268:	shr dx, 0xf
0000626b:	or cx, dx
0000626d:	mov dx, [bp-0x4]
00006270:	mov bx, [bp-0x2]
00006273:	add dx, dx
00006275:	adc bx, bx
00006277:	add dx, [si+0xc]
0000627a:	adc bx, [si+0xe]
0000627d:	add dx, [bp-0x8]
00006280:	adc bx, [bp-0x6]
00006283:	xor dx, cx
00006285:	xor bx, ax
00006287:	mov [bp-0x1a], dx
0000628a:	mov [bp-0x18], bx
0000628d:	add si, 0x10
00006290:	dec word [bp-0xc]
00006293:	jnz 0x6131
00006297:	mov di, [bp-0xe]
0000629a:	mov bx, [bp+0x8]
0000629d:	mov eax, [di+0x10]
000062a1:	xor eax, [bp-0x16]
000062a5:	mov [bx], eax
000062a8:	mov eax, [di+0x14]
000062ac:	xor eax, [bp-0x12]
000062b0:	mov [bx+0x4], eax
000062b4:	mov eax, [di+0x18]
000062b8:	xor eax, [bp-0x1e]
000062bc:	mov [bx+0x8], eax
000062c0:	mov eax, [di+0x1c]
000062c4:	xor eax, [bp-0x1a]
000062c8:	mov [bx+0xc], eax
000062cc:	pop si
000062cd:	pop di
000062ce:	leave
000062cf:	ret
---ENDPROC---  ; sub_60ea ; length = 486 bytes ; 4 calls out


---STARTPROC---
sub_62d0:
000062d0:	enter 0x26, 0x0
000062d4:	push di
000062d5:	push si
000062d6:	mov di, [bp+0x4]
000062d9:	mov bx, [bp+0x6]
000062dc:	mov eax, [di+0x10]
000062e0:	xor eax, [bx]
000062e3:	mov [bp-0x1e], eax
000062e7:	mov eax, [di+0x14]
000062eb:	xor eax, [bx+0x4]
000062ef:	mov [bp-0x1a], eax
000062f3:	mov eax, [di+0x18]
000062f7:	xor eax, [bx+0x8]
000062fb:	mov [bp-0x16], eax
000062ff:	mov eax, [di+0x1c]
00006303:	xor eax, [bx+0xc]
00006307:	mov [bp-0x12], eax
0000630b:	mov word [bp-0xc], 0x7
00006310:	lea ax, [di+0x9c]
00006314:	mov [bp-0xe], di
00006317:	mov si, ax
lbl_6319:
00006319:	lea ax, [di+0xa0]
0000631d:	push ax
0000631e:	mov dx, [bp-0x18]
00006321:	mov ax, dx
00006323:	mov al, ah
00006325:	sub ah, ah
00006327:	mov cx, ax
00006329:	mov ax, [bp-0x1a]
0000632c:	mov dh, dl
0000632e:	mov dl, ah
00006330:	mov ah, al
00006332:	sub al, al
00006334:	or ax, cx
00006336:	push dx
00006337:	push ax
00006338:	push di
00006339:	call 0x5d26
0000633c:	add sp, 0x8
0000633f:	mov [bp-0x8], ax
00006342:	mov [bp-0x6], dx
00006345:	lea ax, [di+0xa0]
00006349:	push ax
0000634a:	push dword [bp-0x1e]
0000634e:	push di
0000634f:	call 0x5d26
00006352:	add sp, 0x8
00006355:	mov [bp-0x4], ax
00006358:	mov [bp-0x2], dx
0000635b:	mov cx, [bp-0x16]
0000635e:	mov dx, [bp-0x14]
00006361:	mov ax, dx
00006363:	add cx, cx
00006365:	adc ax, dx
00006367:	shr dx, 0xf
0000636a:	or cx, dx
0000636c:	mov dx, [si-0x4]
0000636f:	mov bx, [si-0x2]
00006372:	add dx, [bp-0x8]
00006375:	adc bx, [bp-0x6]
00006378:	add dx, [bp-0x4]
0000637b:	adc bx, [bp-0x2]
0000637e:	xor dx, cx
00006380:	xor bx, ax
00006382:	mov [bp-0x16], dx
00006385:	mov [bp-0x14], bx
00006388:	mov ax, [bp-0x4]
0000638b:	add ax, [si]
0000638d:	xor ax, [bp-0x12]
00006390:	shl ax, 0xf
00006393:	mov [bp-0x20], ax
00006396:	mov eax, [bp-0x8]
0000639a:	add eax, eax
0000639d:	add eax, [bp-0x4]
000063a1:	add eax, [si]
000063a4:	xor eax, [bp-0x12]
000063a8:	shr eax, 0x1
000063ab:	mov edx, eax
000063ae:	shr edx, 0x10
000063b2:	or dx, [bp-0x20]
000063b5:	mov [bp-0x12], ax
000063b8:	mov [bp-0x10], dx
000063bb:	lea ax, [di+0xa0]
000063bf:	push ax
000063c0:	mov ax, dx
000063c2:	mov al, ah
000063c4:	sub ah, ah
000063c6:	mov cx, ax
000063c8:	mov ax, [bp-0x12]
000063cb:	mov dh, dl
000063cd:	mov dl, ah
000063cf:	mov ah, al
000063d1:	sub al, al
000063d3:	or ax, cx
000063d5:	push dx
000063d6:	push ax
000063d7:	push di
000063d8:	call 0x5d26
000063db:	add sp, 0x8
000063de:	mov [bp-0x8], ax
000063e1:	mov [bp-0x6], dx
000063e4:	lea ax, [di+0xa0]
000063e8:	push ax
000063e9:	push dword [bp-0x16]
000063ed:	push di
000063ee:	call 0x5d26
000063f1:	add sp, 0x8
000063f4:	mov [bp-0x4], ax
000063f7:	mov [bp-0x2], dx
000063fa:	mov cx, [bp-0x1e]
000063fd:	mov dx, [bp-0x1c]
00006400:	mov ax, dx
00006402:	add cx, cx
00006404:	adc ax, dx
00006406:	shr dx, 0xf
00006409:	or cx, dx
0000640b:	mov dx, [si-0xc]
0000640e:	mov bx, [si-0xa]
00006411:	add dx, [bp-0x8]
00006414:	adc bx, [bp-0x6]
00006417:	add dx, [bp-0x4]
0000641a:	adc bx, [bp-0x2]
0000641d:	xor dx, cx
0000641f:	xor bx, ax
00006421:	mov [bp-0x1e], dx
00006424:	mov [bp-0x1c], bx
00006427:	mov ax, [si-0x8]
0000642a:	add ax, [bp-0x4]
0000642d:	xor ax, [bp-0x1a]
00006430:	shl ax, 0xf
00006433:	sub cx, cx
00006435:	mov [bp-0x24], ax
00006438:	mov eax, [bp-0x8]
0000643c:	add eax, eax
0000643f:	add eax, [si-0x8]
00006443:	add eax, [bp-0x4]
00006447:	xor eax, [bp-0x1a]
0000644b:	shr eax, 0x1
0000644e:	mov edx, eax
00006451:	shr edx, 0x10
00006455:	or dx, [bp-0x24]
00006458:	mov [bp-0x1a], ax
0000645b:	mov [bp-0x18], dx
0000645e:	sub si, 0x10
00006461:	dec word [bp-0xc]
00006464:	jns 0x6319
00006468:	mov di, [bp-0xe]
0000646b:	mov bx, [bp+0x8]
0000646e:	mov eax, [di]
00006471:	xor eax, [bp-0x16]
00006475:	mov [bx], eax
00006478:	mov eax, [di+0x4]
0000647c:	xor eax, [bp-0x12]
00006480:	mov [bx+0x4], eax
00006484:	mov eax, [di+0x8]
00006488:	xor eax, [bp-0x1e]
0000648c:	mov [bx+0x8], eax
00006490:	mov eax, [di+0xc]
00006494:	xor eax, [bp-0x1a]
00006498:	mov [bx+0xc], eax
0000649c:	pop si
0000649d:	pop di
0000649e:	leave
0000649f:	ret
---ENDPROC---  ; sub_62d0 ; length = 464 bytes ; 4 calls out

000064a0:	db 0x00 
000064a1:	db 0x00 
000064a2:	db 0x00 
000064a3:	db 0x00 
000064a4:	db 0x00 
000064a5:	db 0x00 
000064a6:	db 0x00 
000064a7:	db 0x00 
000064a8:	db 0x7f 
000064a9:	db 0x00 
000064aa:	db 0xff 
000064ab:	db 0xff 
000064ac:	db 0x00 
000064ad:	db 0x00 
000064ae:	db 0x01 
000064af:	db 0x00 
000064b0:	db 0xe2 
000064b1:	db 0x74 t
000064b2:	db 0x10 
000064b3:	db 0x00 
000064b4:	db 0x20 
000064b5:	db 0x00 
000064b6:	db 0xf1 
000064b7:	db 0x00 
000064b8:	db 0x02 
000064b9:	db 0x00 
000064ba:	db 0xe6 
000064bb:	db 0x74 t
000064bc:	db 0x10 
000064bd:	db 0x00 
000064be:	db 0x20 
000064bf:	db 0x00 
000064c0:	db 0x30 0
000064c1:	db 0x02 
000064c2:	db 0x03 
000064c3:	db 0x00 
000064c4:	db 0xee 
000064c5:	db 0x74 t
000064c6:	db 0x10 
000064c7:	db 0x00 
000064c8:	db 0x20 
000064c9:	db 0x00 
000064ca:	db 0xb4 
000064cb:	db 0x00 
000064cc:	db 0x00 
000064cd:	db 0x00 
000064ce:	db 0x00 
000064cf:	db 0x00 
000064d0:	db 0x00 
000064d1:	db 0x00 
000064d2:	db 0x00 
000064d3:	db 0x00 
000064d4:	db 0x00 
000064d5:	db 0x00 
000064d6:	db 0x00 
000064d7:	db 0x00 
000064d8:	db 0x00 
000064d9:	db 0x00 
000064da:	db 0x00 
000064db:	db 0x00 
000064dc:	db 0x00 
000064dd:	db 0x00 
000064de:	db 0x00 
000064df:	db 0x00 
000064e0:	db 0x00 
000064e1:	db 0x00 
000064e2:	db 0x00 
000064e3:	db 0x00 
000064e4:	db 0x01 
000064e5:	db 0x00 
000064e6:	db 0x00 
000064e7:	db 0x00 
000064e8:	db 0x00 
000064e9:	db 0x00 
000064ea:	db 0x00 
000064eb:	db 0x00 
000064ec:	db 0x01 
000064ed:	db 0x00 
000064ee:	db 0x00 
000064ef:	db 0x00 
000064f0:	db 0x01 
000064f1:	db 0x00 
000064f2:	db 0x02 
000064f3:	db 0x00 
000064f4:	db 0x00 
000064f5:	db 0x00 
000064f6:	db 0x00 
000064f7:	db 0x00 
000064f8:	db 0x00 
000064f9:	db 0x00 
000064fa:	db 0x01 
000064fb:	db 0x00 
000064fc:	db 0x00 
000064fd:	db 0x00 
000064fe:	db 0x01 
000064ff:	db 0x00 
00006500:	db 0x03 
00006501:	db 0x00 
00006502:	db 0x00 
00006503:	db 0x00 
00006504:	db 0x00 
00006505:	db 0x00 
00006506:	db 0x00 
00006507:	db 0x00 
00006508:	db 0x01 
00006509:	db 0x00 
0000650a:	db 0x00 
0000650b:	db 0x00 
0000650c:	db 0x01 
0000650d:	db 0x00 
0000650e:	db 0x03 
0000650f:	db 0x00 
00006510:	db 0x01 
00006511:	db 0x00 
00006512:	db 0x00 
00006513:	db 0x00 
00006514:	db 0x00 
00006515:	db 0x00 
00006516:	db 0x01 
00006517:	db 0x00 
00006518:	db 0x00 
00006519:	db 0x00 
0000651a:	db 0x01 
0000651b:	db 0x00 
0000651c:	db 0x02 
0000651d:	db 0x00 
0000651e:	db 0x03 
0000651f:	db 0x00 
00006520:	db 0x01 
00006521:	db 0x00 
00006522:	db 0x00 
00006523:	db 0x00 
00006524:	db 0x01 
00006525:	db 0x00 
00006526:	db 0x00 
00006527:	db 0x00 
00006528:	db 0x01 
00006529:	db 0x00 
0000652a:	db 0x01 
0000652b:	db 0x00 
0000652c:	db 0x02 
0000652d:	db 0x00 
0000652e:	db 0x00 
0000652f:	db 0x00 
00006530:	db 0x00 
00006531:	db 0x00 
00006532:	db 0x01 
00006533:	db 0x00 
00006534:	db 0x00 
00006535:	db 0x00 
00006536:	db 0x01 
00006537:	db 0x00 
00006538:	db 0x01 
00006539:	db 0x00 
0000653a:	db 0x03 
0000653b:	db 0x00 
0000653c:	db 0x02 
0000653d:	db 0x00 
0000653e:	db 0x00 
0000653f:	db 0x00 
00006540:	db 0x01 
00006541:	db 0x00 
00006542:	db 0x00 
00006543:	db 0x00 
00006544:	db 0x01 
00006545:	db 0x00 
00006546:	db 0x02 
00006547:	db 0x00 
00006548:	db 0x03 
00006549:	db 0x00 
0000654a:	db 0x00 
0000654b:	db 0x00 
0000654c:	db 0x00 
0000654d:	db 0x00 
0000654e:	db 0x01 
0000654f:	db 0x00 
00006550:	db 0x00 
00006551:	db 0x00 
00006552:	db 0x01 
00006553:	db 0x00 
00006554:	db 0x00 
00006555:	db 0x00 
00006556:	db 0x00 
00006557:	db 0x00 
00006558:	db 0x00 
00006559:	db 0x00 
0000655a:	db 0x00 
0000655b:	db 0x00 
0000655c:	db 0x00 
0000655d:	db 0x00 
0000655e:	db 0x00 
0000655f:	db 0x00 
00006560:	db 0x00 
00006561:	db 0x00 
00006562:	db 0x01 
00006563:	db 0x00 
00006564:	db 0xf6 
00006565:	db 0x74 t
00006566:	db 0x00 
00006567:	db 0x01 
00006568:	db 0x00 
00006569:	db 0x00 
0000656a:	db 0x00 
0000656b:	db 0x00 
0000656c:	db 0x00 
0000656d:	db 0x00 
0000656e:	db 0x00 
0000656f:	db 0x00 
00006570:	db 0x00 
00006571:	db 0x01 
00006572:	db 0x02 
00006573:	db 0x03 
00006574:	db 0x04 
00006575:	db 0x05 
00006576:	db 0x06 
00006577:	db 0x07 
00006578:	db 0x08 
00006579:	db 0x09 
0000657a:	db 0x0a 
0000657b:	db 0x0b 
0000657c:	db 0x0c 
0000657d:	db 0x0d 
0000657e:	db 0x0e 
0000657f:	db 0x0f 
00006580:	db 0x07 
00006581:	db 0x04 
00006582:	db 0x0d 
00006583:	db 0x01 
00006584:	db 0x0a 
00006585:	db 0x06 
00006586:	db 0x0f 
00006587:	db 0x03 
00006588:	db 0x0c 
00006589:	db 0x00 
0000658a:	db 0x09 
0000658b:	db 0x05 
0000658c:	db 0x02 
0000658d:	db 0x0e 
0000658e:	db 0x0b 
0000658f:	db 0x08 
00006590:	db 0x03 
00006591:	db 0x0a 
00006592:	db 0x0e 
00006593:	db 0x04 
00006594:	db 0x09 
00006595:	db 0x0f 
00006596:	db 0x08 
00006597:	db 0x01 
00006598:	db 0x02 
00006599:	db 0x07 
0000659a:	db 0x00 
0000659b:	db 0x06 
0000659c:	db 0x0d 
0000659d:	db 0x0b 
0000659e:	db 0x05 
0000659f:	db 0x0c 
000065a0:	db 0x01 
000065a1:	db 0x09 
000065a2:	db 0x0b 
000065a3:	db 0x0a 
000065a4:	db 0x00 
000065a5:	db 0x08 
000065a6:	db 0x0c 
000065a7:	db 0x04 
000065a8:	db 0x0d 
000065a9:	db 0x03 
000065aa:	db 0x07 
000065ab:	db 0x0f 
000065ac:	db 0x0e 
000065ad:	db 0x05 
000065ae:	db 0x06 
000065af:	db 0x02 
000065b0:	db 0x04 
000065b1:	db 0x00 
000065b2:	db 0x05 
000065b3:	db 0x09 
000065b4:	db 0x07 
000065b5:	db 0x0c 
000065b6:	db 0x02 
000065b7:	db 0x0a 
000065b8:	db 0x0e 
000065b9:	db 0x01 
000065ba:	db 0x03 
000065bb:	db 0x08 
000065bc:	db 0x0b 
000065bd:	db 0x06 
000065be:	db 0x0f 
000065bf:	db 0x0d 
000065c0:	db 0x05 
000065c1:	db 0x0e 
000065c2:	db 0x07 
000065c3:	db 0x00 
000065c4:	db 0x09 
000065c5:	db 0x02 
000065c6:	db 0x0b 
000065c7:	db 0x04 
000065c8:	db 0x0d 
000065c9:	db 0x06 
000065ca:	db 0x0f 
000065cb:	db 0x08 
000065cc:	db 0x01 
000065cd:	db 0x0a 
000065ce:	db 0x03 
000065cf:	db 0x0c 
000065d0:	db 0x06 
000065d1:	db 0x0b 
000065d2:	db 0x03 
000065d3:	db 0x07 
000065d4:	db 0x00 
000065d5:	db 0x0d 
000065d6:	db 0x05 
000065d7:	db 0x0a 
000065d8:	db 0x0e 
000065d9:	db 0x0f 
000065da:	db 0x08 
000065db:	db 0x0c 
000065dc:	db 0x04 
000065dd:	db 0x09 
000065de:	db 0x01 
000065df:	db 0x02 
000065e0:	db 0x0f 
000065e1:	db 0x05 
000065e2:	db 0x01 
000065e3:	db 0x03 
000065e4:	db 0x07 
000065e5:	db 0x0e 
000065e6:	db 0x06 
000065e7:	db 0x09 
000065e8:	db 0x0b 
000065e9:	db 0x08 
000065ea:	db 0x0c 
000065eb:	db 0x02 
000065ec:	db 0x0a 
000065ed:	db 0x00 
000065ee:	db 0x04 
000065ef:	db 0x0d 
000065f0:	db 0x08 
000065f1:	db 0x06 
000065f2:	db 0x04 
000065f3:	db 0x01 
000065f4:	db 0x03 
000065f5:	db 0x0b 
000065f6:	db 0x0f 
000065f7:	db 0x00 
000065f8:	db 0x05 
000065f9:	db 0x0c 
000065fa:	db 0x02 
000065fb:	db 0x0d 
000065fc:	db 0x09 
000065fd:	db 0x07 
000065fe:	db 0x0a 
000065ff:	db 0x0e 
00006600:	db 0x0c 
00006601:	db 0x0f 
00006602:	db 0x0a 
00006603:	db 0x04 
00006604:	db 0x01 
00006605:	db 0x05 
00006606:	db 0x08 
00006607:	db 0x07 
00006608:	db 0x06 
00006609:	db 0x02 
0000660a:	db 0x0d 
0000660b:	db 0x0e 
0000660c:	db 0x00 
0000660d:	db 0x03 
0000660e:	db 0x09 
0000660f:	db 0x0b 
00006610:	db 0x0b 
00006611:	db 0x0e 
00006612:	db 0x0f 
00006613:	db 0x0c 
00006614:	db 0x05 
00006615:	db 0x08 
00006616:	db 0x07 
00006617:	db 0x09 
00006618:	db 0x0b 
00006619:	db 0x0d 
0000661a:	db 0x0e 
0000661b:	db 0x0f 
0000661c:	db 0x06 
0000661d:	db 0x07 
0000661e:	db 0x09 
0000661f:	db 0x08 
00006620:	db 0x07 
00006621:	db 0x06 
00006622:	db 0x08 
00006623:	db 0x0d 
00006624:	db 0x0b 
00006625:	db 0x09 
00006626:	db 0x07 
00006627:	db 0x0f 
00006628:	db 0x07 
00006629:	db 0x0c 
0000662a:	db 0x0f 
0000662b:	db 0x09 
0000662c:	db 0x0b 
0000662d:	db 0x07 
0000662e:	db 0x0d 
0000662f:	db 0x0c 
00006630:	db 0x0b 
00006631:	db 0x0d 
00006632:	db 0x06 
00006633:	db 0x07 
00006634:	db 0x0e 
00006635:	db 0x09 
00006636:	db 0x0d 
00006637:	db 0x0f 
00006638:	db 0x0e 
00006639:	db 0x08 
0000663a:	db 0x0d 
0000663b:	db 0x06 
0000663c:	db 0x05 
0000663d:	db 0x0c 
0000663e:	db 0x07 
0000663f:	db 0x05 
00006640:	db 0x0b 
00006641:	db 0x0c 
00006642:	db 0x0e 
00006643:	db 0x0f 
00006644:	db 0x0e 
00006645:	db 0x0f 
00006646:	db 0x09 
00006647:	db 0x08 
00006648:	db 0x09 
00006649:	db 0x0e 
0000664a:	db 0x05 
0000664b:	db 0x06 
0000664c:	db 0x08 
0000664d:	db 0x06 
0000664e:	db 0x05 
0000664f:	db 0x0c 
00006650:	db 0x09 
00006651:	db 0x0f 
00006652:	db 0x05 
00006653:	db 0x0b 
00006654:	db 0x06 
00006655:	db 0x08 
00006656:	db 0x0d 
00006657:	db 0x0c 
00006658:	db 0x05 
00006659:	db 0x0c 
0000665a:	db 0x0d 
0000665b:	db 0x0e 
0000665c:	db 0x0b 
0000665d:	db 0x08 
0000665e:	db 0x05 
0000665f:	db 0x06 
00006660:	db 0x08 
00006661:	db 0x09 
00006662:	db 0x09 
00006663:	db 0x0b 
00006664:	db 0x0d 
00006665:	db 0x0f 
00006666:	db 0x0f 
00006667:	db 0x05 
00006668:	db 0x07 
00006669:	db 0x07 
0000666a:	db 0x08 
0000666b:	db 0x0b 
0000666c:	db 0x0e 
0000666d:	db 0x0e 
0000666e:	db 0x0c 
0000666f:	db 0x06 
00006670:	db 0x09 
00006671:	db 0x0d 
00006672:	db 0x0f 
00006673:	db 0x07 
00006674:	db 0x0c 
00006675:	db 0x08 
00006676:	db 0x09 
00006677:	db 0x0b 
00006678:	db 0x07 
00006679:	db 0x07 
0000667a:	db 0x0c 
0000667b:	db 0x07 
0000667c:	db 0x06 
0000667d:	db 0x0f 
0000667e:	db 0x0d 
0000667f:	db 0x0b 
00006680:	db 0x09 
00006681:	db 0x07 
00006682:	db 0x0f 
00006683:	db 0x0b 
00006684:	db 0x08 
00006685:	db 0x06 
00006686:	db 0x06 
00006687:	db 0x0e 
00006688:	db 0x0c 
00006689:	db 0x0d 
0000668a:	db 0x05 
0000668b:	db 0x0e 
0000668c:	db 0x0d 
0000668d:	db 0x0d 
0000668e:	db 0x07 
0000668f:	db 0x05 
00006690:	db 0x0f 
00006691:	db 0x05 
00006692:	db 0x08 
00006693:	db 0x0b 
00006694:	db 0x0e 
00006695:	db 0x0e 
00006696:	db 0x06 
00006697:	db 0x0e 
00006698:	db 0x06 
00006699:	db 0x09 
0000669a:	db 0x0c 
0000669b:	db 0x09 
0000669c:	db 0x0c 
0000669d:	db 0x05 
0000669e:	db 0x0f 
0000669f:	db 0x08 
000066a0:	db 0x08 
000066a1:	db 0x05 
000066a2:	db 0x0c 
000066a3:	db 0x09 
000066a4:	db 0x0c 
000066a5:	db 0x05 
000066a6:	db 0x0e 
000066a7:	db 0x06 
000066a8:	db 0x08 
000066a9:	db 0x0d 
000066aa:	db 0x06 
000066ab:	db 0x05 
000066ac:	db 0x0f 
000066ad:	db 0x0d 
000066ae:	db 0x0b 
000066af:	db 0x0b 
000066b0:	db 0x00 
000066b1:	db 0x00 
000066b2:	db 0x00 
000066b3:	db 0x00 
000066b4:	db 0x99 
000066b5:	db 0x79 y
000066b6:	db 0x82 
000066b7:	db 0x5a Z
000066b8:	db 0xa1 
000066b9:	db 0xeb 
000066ba:	db 0xd9 
000066bb:	db 0x6e n
000066bc:	db 0xdc 
000066bd:	db 0xbc 
000066be:	db 0x1b 
000066bf:	db 0x8f 
000066c0:	db 0x4e N
000066c1:	db 0xfd 
000066c2:	db 0x53 S
000066c3:	db 0xa9 
000066c4:	db 0xe6 
000066c5:	db 0x8b 
000066c6:	db 0xa2 
000066c7:	db 0x50 P
000066c8:	db 0x24 $
000066c9:	db 0xd1 
000066ca:	db 0x4d M
000066cb:	db 0x5c \
000066cc:	db 0xf3 
000066cd:	db 0x3e >
000066ce:	db 0x70 p
000066cf:	db 0x6d m
000066d0:	db 0xe9 
000066d1:	db 0x76 v
000066d2:	db 0x6d m
000066d3:	db 0x7a z
000066d4:	db 0x00 
000066d5:	db 0x00 
000066d6:	db 0x00 
000066d7:	db 0x00 
000066d8:	db 0x63 c
000066d9:	db 0x7c |
000066da:	db 0x77 w
000066db:	db 0x7b {
000066dc:	db 0xf2 
000066dd:	db 0x6b k
000066de:	db 0x6f o
000066df:	db 0xc5 
000066e0:	db 0x30 0
000066e1:	db 0x01 
000066e2:	db 0x67 g
000066e3:	db 0x2b +
000066e4:	db 0xfe 
000066e5:	db 0xd7 
000066e6:	db 0xab 
000066e7:	db 0x76 v
000066e8:	db 0xca 
000066e9:	db 0x82 
000066ea:	db 0xc9 
000066eb:	db 0x7d }
000066ec:	db 0xfa 
000066ed:	db 0x59 Y
000066ee:	db 0x47 G
000066ef:	db 0xf0 
000066f0:	db 0xad 
000066f1:	db 0xd4 
000066f2:	db 0xa2 
000066f3:	db 0xaf 
000066f4:	db 0x9c 
000066f5:	db 0xa4 
000066f6:	db 0x72 r
000066f7:	db 0xc0 
000066f8:	db 0xb7 
000066f9:	db 0xfd 
000066fa:	db 0x93 
000066fb:	db 0x26 &
000066fc:	db 0x36 6
000066fd:	db 0x3f ?
000066fe:	db 0xf7 
000066ff:	db 0xcc 
00006700:	db 0x34 4
00006701:	db 0xa5 
00006702:	db 0xe5 
00006703:	db 0xf1 
00006704:	db 0x71 q
00006705:	db 0xd8 
00006706:	db 0x31 1
00006707:	db 0x15 
00006708:	db 0x04 
00006709:	db 0xc7 
0000670a:	db 0x23 #
0000670b:	db 0xc3 
0000670c:	db 0x18 
0000670d:	db 0x96 
0000670e:	db 0x05 
0000670f:	db 0x9a 
00006710:	db 0x07 
00006711:	db 0x12 
00006712:	db 0x80 
00006713:	db 0xe2 
00006714:	db 0xeb 
00006715:	db 0x27 '
00006716:	db 0xb2 
00006717:	db 0x75 u
00006718:	db 0x09 
00006719:	db 0x83 
0000671a:	db 0x2c ,
0000671b:	db 0x1a 
0000671c:	db 0x1b 
0000671d:	db 0x6e n
0000671e:	db 0x5a Z
0000671f:	db 0xa0 
00006720:	db 0x52 R
00006721:	db 0x3b ;
00006722:	db 0xd6 
00006723:	db 0xb3 
00006724:	db 0x29 )
00006725:	db 0xe3 
00006726:	db 0x2f /
00006727:	db 0x84 
00006728:	db 0x53 S
00006729:	db 0xd1 
0000672a:	db 0x00 
0000672b:	db 0xed 
0000672c:	db 0x20 
0000672d:	db 0xfc 
0000672e:	db 0xb1 
0000672f:	db 0x5b [
00006730:	db 0x6a j
00006731:	db 0xcb 
00006732:	db 0xbe 
00006733:	db 0x39 9
00006734:	db 0x4a J
00006735:	db 0x4c L
00006736:	db 0x58 X
00006737:	db 0xcf 
00006738:	db 0xd0 
00006739:	db 0xef 
0000673a:	db 0xaa 
0000673b:	db 0xfb 
0000673c:	db 0x43 C
0000673d:	db 0x4d M
0000673e:	db 0x33 3
0000673f:	db 0x85 
00006740:	db 0x45 E
00006741:	db 0xf9 
00006742:	db 0x02 
00006743:	db 0x7f 
00006744:	db 0x50 P
00006745:	db 0x3c <
00006746:	db 0x9f 
00006747:	db 0xa8 
00006748:	db 0x51 Q
00006749:	db 0xa3 
0000674a:	db 0x40 @
0000674b:	db 0x8f 
0000674c:	db 0x92 
0000674d:	db 0x9d 
0000674e:	db 0x38 8
0000674f:	db 0xf5 
00006750:	db 0xbc 
00006751:	db 0xb6 
00006752:	db 0xda 
00006753:	db 0x21 !
00006754:	db 0x10 
00006755:	db 0xff 
00006756:	db 0xf3 
00006757:	db 0xd2 
00006758:	db 0xcd 
00006759:	db 0x0c 
0000675a:	db 0x13 
0000675b:	db 0xec 
0000675c:	db 0x5f _
0000675d:	db 0x97 
0000675e:	db 0x44 D
0000675f:	db 0x17 
00006760:	db 0xc4 
00006761:	db 0xa7 
00006762:	db 0x7e ~
00006763:	db 0x3d =
00006764:	db 0x64 d
00006765:	db 0x5d ]
00006766:	db 0x19 
00006767:	db 0x73 s
00006768:	db 0x60 `
00006769:	db 0x81 
0000676a:	db 0x4f O
0000676b:	db 0xdc 
0000676c:	db 0x22 "
0000676d:	db 0x2a *
0000676e:	db 0x90 
0000676f:	db 0x88 
00006770:	db 0x46 F
00006771:	db 0xee 
00006772:	db 0xb8 
00006773:	db 0x14 
00006774:	db 0xde 
00006775:	db 0x5e ^
00006776:	db 0x0b 
00006777:	db 0xdb 
00006778:	db 0xe0 
00006779:	db 0x32 2
0000677a:	db 0x3a :
0000677b:	db 0x0a 
0000677c:	db 0x49 I
0000677d:	db 0x06 
0000677e:	db 0x24 $
0000677f:	db 0x5c \
00006780:	db 0xc2 
00006781:	db 0xd3 
00006782:	db 0xac 
00006783:	db 0x62 b
00006784:	db 0x91 
00006785:	db 0x95 
00006786:	db 0xe4 
00006787:	db 0x79 y
00006788:	db 0xe7 
00006789:	db 0xc8 
0000678a:	db 0x37 7
0000678b:	db 0x6d m
0000678c:	db 0x8d 
0000678d:	db 0xd5 
0000678e:	db 0x4e N
0000678f:	db 0xa9 
00006790:	db 0x6c l
00006791:	db 0x56 V
00006792:	db 0xf4 
00006793:	db 0xea 
00006794:	db 0x65 e
00006795:	db 0x7a z
00006796:	db 0xae 
00006797:	db 0x08 
00006798:	db 0xba 
00006799:	db 0x78 x
0000679a:	db 0x25 %
0000679b:	db 0x2e .
0000679c:	db 0x1c 
0000679d:	db 0xa6 
0000679e:	db 0xb4 
0000679f:	db 0xc6 
000067a0:	db 0xe8 
000067a1:	db 0xdd 
000067a2:	db 0x74 t
000067a3:	db 0x1f 
000067a4:	db 0x4b K
000067a5:	db 0xbd 
000067a6:	db 0x8b 
000067a7:	db 0x8a 
000067a8:	db 0x70 p
000067a9:	db 0x3e >
000067aa:	db 0xb5 
000067ab:	db 0x66 f
000067ac:	db 0x48 H
000067ad:	db 0x03 
000067ae:	db 0xf6 
000067af:	db 0x0e 
000067b0:	db 0x61 a
000067b1:	db 0x35 5
000067b2:	db 0x57 W
000067b3:	db 0xb9 
000067b4:	db 0x86 
000067b5:	db 0xc1 
000067b6:	db 0x1d 
000067b7:	db 0x9e 
000067b8:	db 0xe1 
000067b9:	db 0xf8 
000067ba:	db 0x98 
000067bb:	db 0x11 
000067bc:	db 0x69 i
000067bd:	db 0xd9 
000067be:	db 0x8e 
000067bf:	db 0x94 
000067c0:	db 0x9b 
000067c1:	db 0x1e 
000067c2:	db 0x87 
000067c3:	db 0xe9 
000067c4:	db 0xce 
000067c5:	db 0x55 U
000067c6:	db 0x28 (
000067c7:	db 0xdf 
000067c8:	db 0x8c 
000067c9:	db 0xa1 
000067ca:	db 0x89 
000067cb:	db 0x0d 
000067cc:	db 0xbf 
000067cd:	db 0xe6 
000067ce:	db 0x42 B
000067cf:	db 0x68 h
000067d0:	db 0x41 A
000067d1:	db 0x99 
000067d2:	db 0x2d -
000067d3:	db 0x0f 
000067d4:	db 0xb0 
000067d5:	db 0x54 T
000067d6:	db 0xbb 
000067d7:	db 0x16 
000067d8:	db 0x52 R
000067d9:	db 0x09 
000067da:	db 0x6a j
000067db:	db 0xd5 
000067dc:	db 0x30 0
000067dd:	db 0x36 6
000067de:	db 0xa5 
000067df:	db 0x38 8
000067e0:	db 0xbf 
000067e1:	db 0x40 @
000067e2:	db 0xa3 
000067e3:	db 0x9e 
000067e4:	db 0x81 
000067e5:	db 0xf3 
000067e6:	db 0xd7 
000067e7:	db 0xfb 
000067e8:	db 0x7c |
000067e9:	db 0xe3 
000067ea:	db 0x39 9
000067eb:	db 0x82 
000067ec:	db 0x9b 
000067ed:	db 0x2f /
000067ee:	db 0xff 
000067ef:	db 0x87 
000067f0:	db 0x34 4
000067f1:	db 0x8e 
000067f2:	db 0x43 C
000067f3:	db 0x44 D
000067f4:	db 0xc4 
000067f5:	db 0xde 
000067f6:	db 0xe9 
000067f7:	db 0xcb 
000067f8:	db 0x54 T
000067f9:	db 0x7b {
000067fa:	db 0x94 
000067fb:	db 0x32 2
000067fc:	db 0xa6 
000067fd:	db 0xc2 
000067fe:	db 0x23 #
000067ff:	db 0x3d =
00006800:	db 0xee 
00006801:	db 0x4c L
00006802:	db 0x95 
00006803:	db 0x0b 
00006804:	db 0x42 B
00006805:	db 0xfa 
00006806:	db 0xc3 
00006807:	db 0x4e N
00006808:	db 0x08 
00006809:	db 0x2e .
0000680a:	db 0xa1 
0000680b:	db 0x66 f
0000680c:	db 0x28 (
0000680d:	db 0xd9 
0000680e:	db 0x24 $
0000680f:	db 0xb2 
00006810:	db 0x76 v
00006811:	db 0x5b [
00006812:	db 0xa2 
00006813:	db 0x49 I
00006814:	db 0x6d m
00006815:	db 0x8b 
00006816:	db 0xd1 
00006817:	db 0x25 %
00006818:	db 0x72 r
00006819:	db 0xf8 
0000681a:	db 0xf6 
0000681b:	db 0x64 d
0000681c:	db 0x86 
0000681d:	db 0x68 h
0000681e:	db 0x98 
0000681f:	db 0x16 
00006820:	db 0xd4 
00006821:	db 0xa4 
00006822:	db 0x5c \
00006823:	db 0xcc 
00006824:	db 0x5d ]
00006825:	db 0x65 e
00006826:	db 0xb6 
00006827:	db 0x92 
00006828:	db 0x6c l
00006829:	db 0x70 p
0000682a:	db 0x48 H
0000682b:	db 0x50 P
0000682c:	db 0xfd 
0000682d:	db 0xed 
0000682e:	db 0xb9 
0000682f:	db 0xda 
00006830:	db 0x5e ^
00006831:	db 0x15 
00006832:	db 0x46 F
00006833:	db 0x57 W
00006834:	db 0xa7 
00006835:	db 0x8d 
00006836:	db 0x9d 
00006837:	db 0x84 
00006838:	db 0x90 
00006839:	db 0xd8 
0000683a:	db 0xab 
0000683b:	db 0x00 
0000683c:	db 0x8c 
0000683d:	db 0xbc 
0000683e:	db 0xd3 
0000683f:	db 0x0a 
00006840:	db 0xf7 
00006841:	db 0xe4 
00006842:	db 0x58 X
00006843:	db 0x05 
00006844:	db 0xb8 
00006845:	db 0xb3 
00006846:	db 0x45 E
00006847:	db 0x06 
00006848:	db 0xd0 
00006849:	db 0x2c ,
0000684a:	db 0x1e 
0000684b:	db 0x8f 
0000684c:	db 0xca 
0000684d:	db 0x3f ?
0000684e:	db 0x0f 
0000684f:	db 0x02 
00006850:	db 0xc1 
00006851:	db 0xaf 
00006852:	db 0xbd 
00006853:	db 0x03 
00006854:	db 0x01 
00006855:	db 0x13 
00006856:	db 0x8a 
00006857:	db 0x6b k
00006858:	db 0x3a :
00006859:	db 0x91 
0000685a:	db 0x11 
0000685b:	db 0x41 A
0000685c:	db 0x4f O
0000685d:	db 0x67 g
0000685e:	db 0xdc 
0000685f:	db 0xea 
00006860:	db 0x97 
00006861:	db 0xf2 
00006862:	db 0xcf 
00006863:	db 0xce 
00006864:	db 0xf0 
00006865:	db 0xb4 
00006866:	db 0xe6 
00006867:	db 0x73 s
00006868:	db 0x96 
00006869:	db 0xac 
0000686a:	db 0x74 t
0000686b:	db 0x22 "
0000686c:	db 0xe7 
0000686d:	db 0xad 
0000686e:	db 0x35 5
0000686f:	db 0x85 
00006870:	db 0xe2 
00006871:	db 0xf9 
00006872:	db 0x37 7
00006873:	db 0xe8 
00006874:	db 0x1c 
00006875:	db 0x75 u
00006876:	db 0xdf 
00006877:	db 0x6e n
00006878:	db 0x47 G
00006879:	db 0xf1 
0000687a:	db 0x1a 
0000687b:	db 0x71 q
0000687c:	db 0x1d 
0000687d:	db 0x29 )
0000687e:	db 0xc5 
0000687f:	db 0x89 
00006880:	db 0x6f o
00006881:	db 0xb7 
00006882:	db 0x62 b
00006883:	db 0x0e 
00006884:	db 0xaa 
00006885:	db 0x18 
00006886:	db 0xbe 
00006887:	db 0x1b 
00006888:	db 0xfc 
00006889:	db 0x56 V
0000688a:	db 0x3e >
0000688b:	db 0x4b K
0000688c:	db 0xc6 
0000688d:	db 0xd2 
0000688e:	db 0x79 y
0000688f:	db 0x20 
00006890:	db 0x9a 
00006891:	db 0xdb 
00006892:	db 0xc0 
00006893:	db 0xfe 
00006894:	db 0x78 x
00006895:	db 0xcd 
00006896:	db 0x5a Z
00006897:	db 0xf4 
00006898:	db 0x1f 
00006899:	db 0xdd 
0000689a:	db 0xa8 
0000689b:	db 0x33 3
0000689c:	db 0x88 
0000689d:	db 0x07 
0000689e:	db 0xc7 
0000689f:	db 0x31 1
000068a0:	db 0xb1 
000068a1:	db 0x12 
000068a2:	db 0x10 
000068a3:	db 0x59 Y
000068a4:	db 0x27 '
000068a5:	db 0x80 
000068a6:	db 0xec 
000068a7:	db 0x5f _
000068a8:	db 0x60 `
000068a9:	db 0x51 Q
000068aa:	db 0x7f 
000068ab:	db 0xa9 
000068ac:	db 0x19 
000068ad:	db 0xb5 
000068ae:	db 0x4a J
000068af:	db 0x0d 
000068b0:	db 0x2d -
000068b1:	db 0xe5 
000068b2:	db 0x7a z
000068b3:	db 0x9f 
000068b4:	db 0x93 
000068b5:	db 0xc9 
000068b6:	db 0x9c 
000068b7:	db 0xef 
000068b8:	db 0xa0 
000068b9:	db 0xe0 
000068ba:	db 0x3b ;
000068bb:	db 0x4d M
000068bc:	db 0xae 
000068bd:	db 0x2a *
000068be:	db 0xf5 
000068bf:	db 0xb0 
000068c0:	db 0xc8 
000068c1:	db 0xeb 
000068c2:	db 0xbb 
000068c3:	db 0x3c <
000068c4:	db 0x83 
000068c5:	db 0x53 S
000068c6:	db 0x99 
000068c7:	db 0x61 a
000068c8:	db 0x17 
000068c9:	db 0x2b +
000068ca:	db 0x04 
000068cb:	db 0x7e ~
000068cc:	db 0xba 
000068cd:	db 0x77 w
000068ce:	db 0xd6 
000068cf:	db 0x26 &
000068d0:	db 0xe1 
000068d1:	db 0x69 i
000068d2:	db 0x14 
000068d3:	db 0x63 c
000068d4:	db 0x55 U
000068d5:	db 0x21 !
000068d6:	db 0x0c 
000068d7:	db 0x7d }
000068d8:	db 0xc6 
000068d9:	db 0xf8 
000068da:	db 0xee 
000068db:	db 0xf6 
000068dc:	db 0xff 
000068dd:	db 0xd6 
000068de:	db 0xde 
000068df:	db 0x91 
000068e0:	db 0x60 `
000068e1:	db 0x02 
000068e2:	db 0xce 
000068e3:	db 0x56 V
000068e4:	db 0xe7 
000068e5:	db 0xb5 
000068e6:	db 0x4d M
000068e7:	db 0xec 
000068e8:	db 0x8f 
000068e9:	db 0x1f 
000068ea:	db 0x89 
000068eb:	db 0xfa 
000068ec:	db 0xef 
000068ed:	db 0xb2 
000068ee:	db 0x8e 
000068ef:	db 0xfb 
000068f0:	db 0x41 A
000068f1:	db 0xb3 
000068f2:	db 0x5f _
000068f3:	db 0x45 E
000068f4:	db 0x23 #
000068f5:	db 0x53 S
000068f6:	db 0xe4 
000068f7:	db 0x9b 
000068f8:	db 0x75 u
000068f9:	db 0xe1 
000068fa:	db 0x3d =
000068fb:	db 0x4c L
000068fc:	db 0x6c l
000068fd:	db 0x7e ~
000068fe:	db 0xf5 
000068ff:	db 0x83 
00006900:	db 0x68 h
00006901:	db 0x51 Q
00006902:	db 0xd1 
00006903:	db 0xf9 
00006904:	db 0xe2 
00006905:	db 0xab 
00006906:	db 0x62 b
00006907:	db 0x2a *
00006908:	db 0x08 
00006909:	db 0x95 
0000690a:	db 0x46 F
0000690b:	db 0x9d 
0000690c:	db 0x30 0
0000690d:	db 0x37 7
0000690e:	db 0x0a 
0000690f:	db 0x2f /
00006910:	db 0x0e 
00006911:	db 0x24 $
00006912:	db 0x1b 
00006913:	db 0xdf 
00006914:	db 0xcd 
00006915:	db 0x4e N
00006916:	db 0x7f 
00006917:	db 0xea 
00006918:	db 0x12 
00006919:	db 0x1d 
0000691a:	db 0x58 X
0000691b:	db 0x34 4
0000691c:	db 0x36 6
0000691d:	db 0xdc 
0000691e:	db 0xb4 
0000691f:	db 0x5b [
00006920:	db 0xa4 
00006921:	db 0x76 v
00006922:	db 0xb7 
00006923:	db 0x7d }
00006924:	db 0x52 R
00006925:	db 0xdd 
00006926:	db 0x5e ^
00006927:	db 0x13 
00006928:	db 0xa6 
00006929:	db 0xb9 
0000692a:	db 0x00 
0000692b:	db 0xc1 
0000692c:	db 0x40 @
0000692d:	db 0xe3 
0000692e:	db 0x79 y
0000692f:	db 0xb6 
00006930:	db 0xd4 
00006931:	db 0x8d 
00006932:	db 0x67 g
00006933:	db 0x72 r
00006934:	db 0x94 
00006935:	db 0x98 
00006936:	db 0xb0 
00006937:	db 0x85 
00006938:	db 0xbb 
00006939:	db 0xc5 
0000693a:	db 0x4f O
0000693b:	db 0xed 
0000693c:	db 0x86 
0000693d:	db 0x9a 
0000693e:	db 0x66 f
0000693f:	db 0x11 
00006940:	db 0x8a 
00006941:	db 0xe9 
00006942:	db 0x04 
00006943:	db 0xfe 
00006944:	db 0xa0 
00006945:	db 0x78 x
00006946:	db 0x25 %
00006947:	db 0x4b K
00006948:	db 0xa2 
00006949:	db 0x5d ]
0000694a:	db 0x80 
0000694b:	db 0x05 
0000694c:	db 0x3f ?
0000694d:	db 0x21 !
0000694e:	db 0x70 p
0000694f:	db 0xf1 
00006950:	db 0x63 c
00006951:	db 0x77 w
00006952:	db 0xaf 
00006953:	db 0x42 B
00006954:	db 0x20 
00006955:	db 0xe5 
00006956:	db 0xfd 
00006957:	db 0xbf 
00006958:	db 0x81 
00006959:	db 0x18 
0000695a:	db 0x26 &
0000695b:	db 0xc3 
0000695c:	db 0xbe 
0000695d:	db 0x35 5
0000695e:	db 0x88 
0000695f:	db 0x2e .
00006960:	db 0x93 
00006961:	db 0x55 U
00006962:	db 0xfc 
00006963:	db 0x7a z
00006964:	db 0xc8 
00006965:	db 0xba 
00006966:	db 0x32 2
00006967:	db 0xe6 
00006968:	db 0xc0 
00006969:	db 0x19 
0000696a:	db 0x9e 
0000696b:	db 0xa3 
0000696c:	db 0x44 D
0000696d:	db 0x54 T
0000696e:	db 0x3b ;
0000696f:	db 0x0b 
00006970:	db 0x8c 
00006971:	db 0xc7 
00006972:	db 0x6b k
00006973:	db 0x28 (
00006974:	db 0xa7 
00006975:	db 0xbc 
00006976:	db 0x16 
00006977:	db 0xad 
00006978:	db 0xdb 
00006979:	db 0x64 d
0000697a:	db 0x74 t
0000697b:	db 0x14 
0000697c:	db 0x92 
0000697d:	db 0x0c 
0000697e:	db 0x48 H
0000697f:	db 0xb8 
00006980:	db 0x9f 
00006981:	db 0xbd 
00006982:	db 0x43 C
00006983:	db 0xc4 
00006984:	db 0x39 9
00006985:	db 0x31 1
00006986:	db 0xd3 
00006987:	db 0xf2 
00006988:	db 0xd5 
00006989:	db 0x8b 
0000698a:	db 0x6e n
0000698b:	db 0xda 
0000698c:	db 0x01 
0000698d:	db 0xb1 
0000698e:	db 0x9c 
0000698f:	db 0x49 I
00006990:	db 0xd8 
00006991:	db 0xac 
00006992:	db 0xf3 
00006993:	db 0xcf 
00006994:	db 0xca 
00006995:	db 0xf4 
00006996:	db 0x47 G
00006997:	db 0x10 
00006998:	db 0x6f o
00006999:	db 0xf0 
0000699a:	db 0x4a J
0000699b:	db 0x5c \
0000699c:	db 0x38 8
0000699d:	db 0x57 W
0000699e:	db 0x73 s
0000699f:	db 0x97 
000069a0:	db 0xcb 
000069a1:	db 0xa1 
000069a2:	db 0xe8 
000069a3:	db 0x3e >
000069a4:	db 0x96 
000069a5:	db 0x61 a
000069a6:	db 0x0d 
000069a7:	db 0x0f 
000069a8:	db 0xe0 
000069a9:	db 0x7c |
000069aa:	db 0x71 q
000069ab:	db 0xcc 
000069ac:	db 0x90 
000069ad:	db 0x06 
000069ae:	db 0xf7 
000069af:	db 0x1c 
000069b0:	db 0xc2 
000069b1:	db 0x6a j
000069b2:	db 0xae 
000069b3:	db 0x69 i
000069b4:	db 0x17 
000069b5:	db 0x99 
000069b6:	db 0x3a :
000069b7:	db 0x27 '
000069b8:	db 0xd9 
000069b9:	db 0xeb 
000069ba:	db 0x2b +
000069bb:	db 0x22 "
000069bc:	db 0xd2 
000069bd:	db 0xa9 
000069be:	db 0x07 
000069bf:	db 0x33 3
000069c0:	db 0x2d -
000069c1:	db 0x3c <
000069c2:	db 0x15 
000069c3:	db 0xc9 
000069c4:	db 0x87 
000069c5:	db 0xaa 
000069c6:	db 0x50 P
000069c7:	db 0xa5 
000069c8:	db 0x03 
000069c9:	db 0x59 Y
000069ca:	db 0x09 
000069cb:	db 0x1a 
000069cc:	db 0x65 e
000069cd:	db 0xd7 
000069ce:	db 0x84 
000069cf:	db 0xd0 
000069d0:	db 0x82 
000069d1:	db 0x29 )
000069d2:	db 0x5a Z
000069d3:	db 0x1e 
000069d4:	db 0x7b {
000069d5:	db 0xa8 
000069d6:	db 0x6d m
000069d7:	db 0x2c ,
000069d8:	db 0xa5 
000069d9:	db 0x84 
000069da:	db 0x99 
000069db:	db 0x8d 
000069dc:	db 0x0d 
000069dd:	db 0xbd 
000069de:	db 0xb1 
000069df:	db 0x54 T
000069e0:	db 0x50 P
000069e1:	db 0x03 
000069e2:	db 0xa9 
000069e3:	db 0x7d }
000069e4:	db 0x19 
000069e5:	db 0x62 b
000069e6:	db 0xe6 
000069e7:	db 0x9a 
000069e8:	db 0x45 E
000069e9:	db 0x9d 
000069ea:	db 0x40 @
000069eb:	db 0x87 
000069ec:	db 0x15 
000069ed:	db 0xeb 
000069ee:	db 0xc9 
000069ef:	db 0x0b 
000069f0:	db 0xec 
000069f1:	db 0x67 g
000069f2:	db 0xfd 
000069f3:	db 0xea 
000069f4:	db 0xbf 
000069f5:	db 0xf7 
000069f6:	db 0x96 
000069f7:	db 0x5b [
000069f8:	db 0xc2 
000069f9:	db 0x1c 
000069fa:	db 0xae 
000069fb:	db 0x6a j
000069fc:	db 0x5a Z
000069fd:	db 0x41 A
000069fe:	db 0x02 
000069ff:	db 0x4f O
00006a00:	db 0x5c \
00006a01:	db 0xf4 
00006a02:	db 0x34 4
00006a03:	db 0x08 
00006a04:	db 0x93 
00006a05:	db 0x73 s
00006a06:	db 0x53 S
00006a07:	db 0x3f ?
00006a08:	db 0x0c 
00006a09:	db 0x52 R
00006a0a:	db 0x65 e
00006a0b:	db 0x5e ^
00006a0c:	db 0x28 (
00006a0d:	db 0xa1 
00006a0e:	db 0x0f 
00006a0f:	db 0xb5 
00006a10:	db 0x09 
00006a11:	db 0x36 6
00006a12:	db 0x9b 
00006a13:	db 0x3d =
00006a14:	db 0x26 &
00006a15:	db 0x69 i
00006a16:	db 0xcd 
00006a17:	db 0x9f 
00006a18:	db 0x1b 
00006a19:	db 0x9e 
00006a1a:	db 0x74 t
00006a1b:	db 0x2e .
00006a1c:	db 0x2d -
00006a1d:	db 0xb2 
00006a1e:	db 0xee 
00006a1f:	db 0xfb 
00006a20:	db 0xf6 
00006a21:	db 0x4d M
00006a22:	db 0x61 a
00006a23:	db 0xce 
00006a24:	db 0x7b {
00006a25:	db 0x3e >
00006a26:	db 0x71 q
00006a27:	db 0x97 
00006a28:	db 0xf5 
00006a29:	db 0x68 h
00006a2a:	db 0x00 
00006a2b:	db 0x2c ,
00006a2c:	db 0x60 `
00006a2d:	db 0x1f 
00006a2e:	db 0xc8 
00006a2f:	db 0xed 
00006a30:	db 0xbe 
00006a31:	db 0x46 F
00006a32:	db 0xd9 
00006a33:	db 0x4b K
00006a34:	db 0xde 
00006a35:	db 0xd4 
00006a36:	db 0xe8 
00006a37:	db 0x4a J
00006a38:	db 0x6b k
00006a39:	db 0x2a *
00006a3a:	db 0xe5 
00006a3b:	db 0x16 
00006a3c:	db 0xc5 
00006a3d:	db 0xd7 
00006a3e:	db 0x55 U
00006a3f:	db 0x94 
00006a40:	db 0xcf 
00006a41:	db 0x10 
00006a42:	db 0x06 
00006a43:	db 0x81 
00006a44:	db 0xf0 
00006a45:	db 0x44 D
00006a46:	db 0xba 
00006a47:	db 0xe3 
00006a48:	db 0xf3 
00006a49:	db 0xfe 
00006a4a:	db 0xc0 
00006a4b:	db 0x8a 
00006a4c:	db 0xad 
00006a4d:	db 0xbc 
00006a4e:	db 0x48 H
00006a4f:	db 0x04 
00006a50:	db 0xdf 
00006a51:	db 0xc1 
00006a52:	db 0x75 u
00006a53:	db 0x63 c
00006a54:	db 0x30 0
00006a55:	db 0x1a 
00006a56:	db 0x0e 
00006a57:	db 0x6d m
00006a58:	db 0x4c L
00006a59:	db 0x14 
00006a5a:	db 0x35 5
00006a5b:	db 0x2f /
00006a5c:	db 0xe1 
00006a5d:	db 0xa2 
00006a5e:	db 0xcc 
00006a5f:	db 0x39 9
00006a60:	db 0x57 W
00006a61:	db 0xf2 
00006a62:	db 0x82 
00006a63:	db 0x47 G
00006a64:	db 0xac 
00006a65:	db 0xe7 
00006a66:	db 0x2b +
00006a67:	db 0x95 
00006a68:	db 0xa0 
00006a69:	db 0x98 
00006a6a:	db 0xd1 
00006a6b:	db 0x7f 
00006a6c:	db 0x66 f
00006a6d:	db 0x7e ~
00006a6e:	db 0xab 
00006a6f:	db 0x83 
00006a70:	db 0xca 
00006a71:	db 0x29 )
00006a72:	db 0xd3 
00006a73:	db 0x3c <
00006a74:	db 0x79 y
00006a75:	db 0xe2 
00006a76:	db 0x1d 
00006a77:	db 0x76 v
00006a78:	db 0x3b ;
00006a79:	db 0x56 V
00006a7a:	db 0x4e N
00006a7b:	db 0x1e 
00006a7c:	db 0xdb 
00006a7d:	db 0x0a 
00006a7e:	db 0x6c l
00006a7f:	db 0xe4 
00006a80:	db 0x5d ]
00006a81:	db 0x6e n
00006a82:	db 0xef 
00006a83:	db 0xa6 
00006a84:	db 0xa8 
00006a85:	db 0xa4 
00006a86:	db 0x37 7
00006a87:	db 0x8b 
00006a88:	db 0x32 2
00006a89:	db 0x43 C
00006a8a:	db 0x59 Y
00006a8b:	db 0xb7 
00006a8c:	db 0x8c 
00006a8d:	db 0x64 d
00006a8e:	db 0xd2 
00006a8f:	db 0xe0 
00006a90:	db 0xb4 
00006a91:	db 0xfa 
00006a92:	db 0x07 
00006a93:	db 0x25 %
00006a94:	db 0xaf 
00006a95:	db 0x8e 
00006a96:	db 0xe9 
00006a97:	db 0x18 
00006a98:	db 0xd5 
00006a99:	db 0x88 
00006a9a:	db 0x6f o
00006a9b:	db 0x72 r
00006a9c:	db 0x24 $
00006a9d:	db 0xf1 
00006a9e:	db 0xc7 
00006a9f:	db 0x51 Q
00006aa0:	db 0x23 #
00006aa1:	db 0x7c |
00006aa2:	db 0x9c 
00006aa3:	db 0x21 !
00006aa4:	db 0xdd 
00006aa5:	db 0xdc 
00006aa6:	db 0x86 
00006aa7:	db 0x85 
00006aa8:	db 0x90 
00006aa9:	db 0x42 B
00006aaa:	db 0xc4 
00006aab:	db 0xaa 
00006aac:	db 0xd8 
00006aad:	db 0x05 
00006aae:	db 0x01 
00006aaf:	db 0x12 
00006ab0:	db 0xa3 
00006ab1:	db 0x5f _
00006ab2:	db 0xf9 
00006ab3:	db 0xd0 
00006ab4:	db 0x91 
00006ab5:	db 0x58 X
00006ab6:	db 0x27 '
00006ab7:	db 0xb9 
00006ab8:	db 0x38 8
00006ab9:	db 0x13 
00006aba:	db 0xb3 
00006abb:	db 0x33 3
00006abc:	db 0xbb 
00006abd:	db 0x70 p
00006abe:	db 0x89 
00006abf:	db 0xa7 
00006ac0:	db 0xb6 
00006ac1:	db 0x22 "
00006ac2:	db 0x92 
00006ac3:	db 0x20 
00006ac4:	db 0x49 I
00006ac5:	db 0xff 
00006ac6:	db 0x78 x
00006ac7:	db 0x7a z
00006ac8:	db 0x8f 
00006ac9:	db 0xf8 
00006aca:	db 0x80 
00006acb:	db 0x17 
00006acc:	db 0xda 
00006acd:	db 0x31 1
00006ace:	db 0xc6 
00006acf:	db 0xb8 
00006ad0:	db 0xc3 
00006ad1:	db 0xb0 
00006ad2:	db 0x77 w
00006ad3:	db 0x11 
00006ad4:	db 0xcb 
00006ad5:	db 0xfc 
00006ad6:	db 0xd6 
00006ad7:	db 0x3a :
00006ad8:	db 0x00 
00006ad9:	db 0x09 
00006ada:	db 0x12 
00006adb:	db 0x1b 
00006adc:	db 0x24 $
00006add:	db 0x2d -
00006ade:	db 0x36 6
00006adf:	db 0x3f ?
00006ae0:	db 0x48 H
00006ae1:	db 0x41 A
00006ae2:	db 0x5a Z
00006ae3:	db 0x53 S
00006ae4:	db 0x6c l
00006ae5:	db 0x65 e
00006ae6:	db 0x7e ~
00006ae7:	db 0x77 w
00006ae8:	db 0x90 
00006ae9:	db 0x99 
00006aea:	db 0x82 
00006aeb:	db 0x8b 
00006aec:	db 0xb4 
00006aed:	db 0xbd 
00006aee:	db 0xa6 
00006aef:	db 0xaf 
00006af0:	db 0xd8 
00006af1:	db 0xd1 
00006af2:	db 0xca 
00006af3:	db 0xc3 
00006af4:	db 0xfc 
00006af5:	db 0xf5 
00006af6:	db 0xee 
00006af7:	db 0xe7 
00006af8:	db 0x3b ;
00006af9:	db 0x32 2
00006afa:	db 0x29 )
00006afb:	db 0x20 
00006afc:	db 0x1f 
00006afd:	db 0x16 
00006afe:	db 0x0d 
00006aff:	db 0x04 
00006b00:	db 0x73 s
00006b01:	db 0x7a z
00006b02:	db 0x61 a
00006b03:	db 0x68 h
00006b04:	db 0x57 W
00006b05:	db 0x5e ^
00006b06:	db 0x45 E
00006b07:	db 0x4c L
00006b08:	db 0xab 
00006b09:	db 0xa2 
00006b0a:	db 0xb9 
00006b0b:	db 0xb0 
00006b0c:	db 0x8f 
00006b0d:	db 0x86 
00006b0e:	db 0x9d 
00006b0f:	db 0x94 
00006b10:	db 0xe3 
00006b11:	db 0xea 
00006b12:	db 0xf1 
00006b13:	db 0xf8 
00006b14:	db 0xc7 
00006b15:	db 0xce 
00006b16:	db 0xd5 
00006b17:	db 0xdc 
00006b18:	db 0x76 v
00006b19:	db 0x7f 
00006b1a:	db 0x64 d
00006b1b:	db 0x6d m
00006b1c:	db 0x52 R
00006b1d:	db 0x5b [
00006b1e:	db 0x40 @
00006b1f:	db 0x49 I
00006b20:	db 0x3e >
00006b21:	db 0x37 7
00006b22:	db 0x2c ,
00006b23:	db 0x25 %
00006b24:	db 0x1a 
00006b25:	db 0x13 
00006b26:	db 0x08 
00006b27:	db 0x01 
00006b28:	db 0xe6 
00006b29:	db 0xef 
00006b2a:	db 0xf4 
00006b2b:	db 0xfd 
00006b2c:	db 0xc2 
00006b2d:	db 0xcb 
00006b2e:	db 0xd0 
00006b2f:	db 0xd9 
00006b30:	db 0xae 
00006b31:	db 0xa7 
00006b32:	db 0xbc 
00006b33:	db 0xb5 
00006b34:	db 0x8a 
00006b35:	db 0x83 
00006b36:	db 0x98 
00006b37:	db 0x91 
00006b38:	db 0x4d M
00006b39:	db 0x44 D
00006b3a:	db 0x5f _
00006b3b:	db 0x56 V
00006b3c:	db 0x69 i
00006b3d:	db 0x60 `
00006b3e:	db 0x7b {
00006b3f:	db 0x72 r
00006b40:	db 0x05 
00006b41:	db 0x0c 
00006b42:	db 0x17 
00006b43:	db 0x1e 
00006b44:	db 0x21 !
00006b45:	db 0x28 (
00006b46:	db 0x33 3
00006b47:	db 0x3a :
00006b48:	db 0xdd 
00006b49:	db 0xd4 
00006b4a:	db 0xcf 
00006b4b:	db 0xc6 
00006b4c:	db 0xf9 
00006b4d:	db 0xf0 
00006b4e:	db 0xeb 
00006b4f:	db 0xe2 
00006b50:	db 0x95 
00006b51:	db 0x9c 
00006b52:	db 0x87 
00006b53:	db 0x8e 
00006b54:	db 0xb1 
00006b55:	db 0xb8 
00006b56:	db 0xa3 
00006b57:	db 0xaa 
00006b58:	db 0xec 
00006b59:	db 0xe5 
00006b5a:	db 0xfe 
00006b5b:	db 0xf7 
00006b5c:	db 0xc8 
00006b5d:	db 0xc1 
00006b5e:	db 0xda 
00006b5f:	db 0xd3 
00006b60:	db 0xa4 
00006b61:	db 0xad 
00006b62:	db 0xb6 
00006b63:	db 0xbf 
00006b64:	db 0x80 
00006b65:	db 0x89 
00006b66:	db 0x92 
00006b67:	db 0x9b 
00006b68:	db 0x7c |
00006b69:	db 0x75 u
00006b6a:	db 0x6e n
00006b6b:	db 0x67 g
00006b6c:	db 0x58 X
00006b6d:	db 0x51 Q
00006b6e:	db 0x4a J
00006b6f:	db 0x43 C
00006b70:	db 0x34 4
00006b71:	db 0x3d =
00006b72:	db 0x26 &
00006b73:	db 0x2f /
00006b74:	db 0x10 
00006b75:	db 0x19 
00006b76:	db 0x02 
00006b77:	db 0x0b 
00006b78:	db 0xd7 
00006b79:	db 0xde 
00006b7a:	db 0xc5 
00006b7b:	db 0xcc 
00006b7c:	db 0xf3 
00006b7d:	db 0xfa 
00006b7e:	db 0xe1 
00006b7f:	db 0xe8 
00006b80:	db 0x9f 
00006b81:	db 0x96 
00006b82:	db 0x8d 
00006b83:	db 0x84 
00006b84:	db 0xbb 
00006b85:	db 0xb2 
00006b86:	db 0xa9 
00006b87:	db 0xa0 
00006b88:	db 0x47 G
00006b89:	db 0x4e N
00006b8a:	db 0x55 U
00006b8b:	db 0x5c \
00006b8c:	db 0x63 c
00006b8d:	db 0x6a j
00006b8e:	db 0x71 q
00006b8f:	db 0x78 x
00006b90:	db 0x0f 
00006b91:	db 0x06 
00006b92:	db 0x1d 
00006b93:	db 0x14 
00006b94:	db 0x2b +
00006b95:	db 0x22 "
00006b96:	db 0x39 9
00006b97:	db 0x30 0
00006b98:	db 0x9a 
00006b99:	db 0x93 
00006b9a:	db 0x88 
00006b9b:	db 0x81 
00006b9c:	db 0xbe 
00006b9d:	db 0xb7 
00006b9e:	db 0xac 
00006b9f:	db 0xa5 
00006ba0:	db 0xd2 
00006ba1:	db 0xdb 
00006ba2:	db 0xc0 
00006ba3:	db 0xc9 
00006ba4:	db 0xf6 
00006ba5:	db 0xff 
00006ba6:	db 0xe4 
00006ba7:	db 0xed 
00006ba8:	db 0x0a 
00006ba9:	db 0x03 
00006baa:	db 0x18 
00006bab:	db 0x11 
00006bac:	db 0x2e .
00006bad:	db 0x27 '
00006bae:	db 0x3c <
00006baf:	db 0x35 5
00006bb0:	db 0x42 B
00006bb1:	db 0x4b K
00006bb2:	db 0x50 P
00006bb3:	db 0x59 Y
00006bb4:	db 0x66 f
00006bb5:	db 0x6f o
00006bb6:	db 0x74 t
00006bb7:	db 0x7d }
00006bb8:	db 0xa1 
00006bb9:	db 0xa8 
00006bba:	db 0xb3 
00006bbb:	db 0xba 
00006bbc:	db 0x85 
00006bbd:	db 0x8c 
00006bbe:	db 0x97 
00006bbf:	db 0x9e 
00006bc0:	db 0xe9 
00006bc1:	db 0xe0 
00006bc2:	db 0xfb 
00006bc3:	db 0xf2 
00006bc4:	db 0xcd 
00006bc5:	db 0xc4 
00006bc6:	db 0xdf 
00006bc7:	db 0xd6 
00006bc8:	db 0x31 1
00006bc9:	db 0x38 8
00006bca:	db 0x23 #
00006bcb:	db 0x2a *
00006bcc:	db 0x15 
00006bcd:	db 0x1c 
00006bce:	db 0x07 
00006bcf:	db 0x0e 
00006bd0:	db 0x79 y
00006bd1:	db 0x70 p
00006bd2:	db 0x6b k
00006bd3:	db 0x62 b
00006bd4:	db 0x5d ]
00006bd5:	db 0x54 T
00006bd6:	db 0x4f O
00006bd7:	db 0x46 F
00006bd8:	db 0x00 
00006bd9:	db 0x0b 
00006bda:	db 0x16 
00006bdb:	db 0x1d 
00006bdc:	db 0x2c ,
00006bdd:	db 0x27 '
00006bde:	db 0x3a :
00006bdf:	db 0x31 1
00006be0:	db 0x58 X
00006be1:	db 0x53 S
00006be2:	db 0x4e N
00006be3:	db 0x45 E
00006be4:	db 0x74 t
00006be5:	db 0x7f 
00006be6:	db 0x62 b
00006be7:	db 0x69 i
00006be8:	db 0xb0 
00006be9:	db 0xbb 
00006bea:	db 0xa6 
00006beb:	db 0xad 
00006bec:	db 0x9c 
00006bed:	db 0x97 
00006bee:	db 0x8a 
00006bef:	db 0x81 
00006bf0:	db 0xe8 
00006bf1:	db 0xe3 
00006bf2:	db 0xfe 
00006bf3:	db 0xf5 
00006bf4:	db 0xc4 
00006bf5:	db 0xcf 
00006bf6:	db 0xd2 
00006bf7:	db 0xd9 
00006bf8:	db 0x7b {
00006bf9:	db 0x70 p
00006bfa:	db 0x6d m
00006bfb:	db 0x66 f
00006bfc:	db 0x57 W
00006bfd:	db 0x5c \
00006bfe:	db 0x41 A
00006bff:	db 0x4a J
00006c00:	db 0x23 #
00006c01:	db 0x28 (
00006c02:	db 0x35 5
00006c03:	db 0x3e >
00006c04:	db 0x0f 
00006c05:	db 0x04 
00006c06:	db 0x19 
00006c07:	db 0x12 
00006c08:	db 0xcb 
00006c09:	db 0xc0 
00006c0a:	db 0xdd 
00006c0b:	db 0xd6 
00006c0c:	db 0xe7 
00006c0d:	db 0xec 
00006c0e:	db 0xf1 
00006c0f:	db 0xfa 
00006c10:	db 0x93 
00006c11:	db 0x98 
00006c12:	db 0x85 
00006c13:	db 0x8e 
00006c14:	db 0xbf 
00006c15:	db 0xb4 
00006c16:	db 0xa9 
00006c17:	db 0xa2 
00006c18:	db 0xf6 
00006c19:	db 0xfd 
00006c1a:	db 0xe0 
00006c1b:	db 0xeb 
00006c1c:	db 0xda 
00006c1d:	db 0xd1 
00006c1e:	db 0xcc 
00006c1f:	db 0xc7 
00006c20:	db 0xae 
00006c21:	db 0xa5 
00006c22:	db 0xb8 
00006c23:	db 0xb3 
00006c24:	db 0x82 
00006c25:	db 0x89 
00006c26:	db 0x94 
00006c27:	db 0x9f 
00006c28:	db 0x46 F
00006c29:	db 0x4d M
00006c2a:	db 0x50 P
00006c2b:	db 0x5b [
00006c2c:	db 0x6a j
00006c2d:	db 0x61 a
00006c2e:	db 0x7c |
00006c2f:	db 0x77 w
00006c30:	db 0x1e 
00006c31:	db 0x15 
00006c32:	db 0x08 
00006c33:	db 0x03 
00006c34:	db 0x32 2
00006c35:	db 0x39 9
00006c36:	db 0x24 $
00006c37:	db 0x2f /
00006c38:	db 0x8d 
00006c39:	db 0x86 
00006c3a:	db 0x9b 
00006c3b:	db 0x90 
00006c3c:	db 0xa1 
00006c3d:	db 0xaa 
00006c3e:	db 0xb7 
00006c3f:	db 0xbc 
00006c40:	db 0xd5 
00006c41:	db 0xde 
00006c42:	db 0xc3 
00006c43:	db 0xc8 
00006c44:	db 0xf9 
00006c45:	db 0xf2 
00006c46:	db 0xef 
00006c47:	db 0xe4 
00006c48:	db 0x3d =
00006c49:	db 0x36 6
00006c4a:	db 0x2b +
00006c4b:	db 0x20 
00006c4c:	db 0x11 
00006c4d:	db 0x1a 
00006c4e:	db 0x07 
00006c4f:	db 0x0c 
00006c50:	db 0x65 e
00006c51:	db 0x6e n
00006c52:	db 0x73 s
00006c53:	db 0x78 x
00006c54:	db 0x49 I
00006c55:	db 0x42 B
00006c56:	db 0x5f _
00006c57:	db 0x54 T
00006c58:	db 0xf7 
00006c59:	db 0xfc 
00006c5a:	db 0xe1 
00006c5b:	db 0xea 
00006c5c:	db 0xdb 
00006c5d:	db 0xd0 
00006c5e:	db 0xcd 
00006c5f:	db 0xc6 
00006c60:	db 0xaf 
00006c61:	db 0xa4 
00006c62:	db 0xb9 
00006c63:	db 0xb2 
00006c64:	db 0x83 
00006c65:	db 0x88 
00006c66:	db 0x95 
00006c67:	db 0x9e 
00006c68:	db 0x47 G
00006c69:	db 0x4c L
00006c6a:	db 0x51 Q
00006c6b:	db 0x5a Z
00006c6c:	db 0x6b k
00006c6d:	db 0x60 `
00006c6e:	db 0x7d }
00006c6f:	db 0x76 v
00006c70:	db 0x1f 
00006c71:	db 0x14 
00006c72:	db 0x09 
00006c73:	db 0x02 
00006c74:	db 0x33 3
00006c75:	db 0x38 8
00006c76:	db 0x25 %
00006c77:	db 0x2e .
00006c78:	db 0x8c 
00006c79:	db 0x87 
00006c7a:	db 0x9a 
00006c7b:	db 0x91 
00006c7c:	db 0xa0 
00006c7d:	db 0xab 
00006c7e:	db 0xb6 
00006c7f:	db 0xbd 
00006c80:	db 0xd4 
00006c81:	db 0xdf 
00006c82:	db 0xc2 
00006c83:	db 0xc9 
00006c84:	db 0xf8 
00006c85:	db 0xf3 
00006c86:	db 0xee 
00006c87:	db 0xe5 
00006c88:	db 0x3c <
00006c89:	db 0x37 7
00006c8a:	db 0x2a *
00006c8b:	db 0x21 !
00006c8c:	db 0x10 
00006c8d:	db 0x1b 
00006c8e:	db 0x06 
00006c8f:	db 0x0d 
00006c90:	db 0x64 d
00006c91:	db 0x6f o
00006c92:	db 0x72 r
00006c93:	db 0x79 y
00006c94:	db 0x48 H
00006c95:	db 0x43 C
00006c96:	db 0x5e ^
00006c97:	db 0x55 U
00006c98:	db 0x01 
00006c99:	db 0x0a 
00006c9a:	db 0x17 
00006c9b:	db 0x1c 
00006c9c:	db 0x2d -
00006c9d:	db 0x26 &
00006c9e:	db 0x3b ;
00006c9f:	db 0x30 0
00006ca0:	db 0x59 Y
00006ca1:	db 0x52 R
00006ca2:	db 0x4f O
00006ca3:	db 0x44 D
00006ca4:	db 0x75 u
00006ca5:	db 0x7e ~
00006ca6:	db 0x63 c
00006ca7:	db 0x68 h
00006ca8:	db 0xb1 
00006ca9:	db 0xba 
00006caa:	db 0xa7 
00006cab:	db 0xac 
00006cac:	db 0x9d 
00006cad:	db 0x96 
00006cae:	db 0x8b 
00006caf:	db 0x80 
00006cb0:	db 0xe9 
00006cb1:	db 0xe2 
00006cb2:	db 0xff 
00006cb3:	db 0xf4 
00006cb4:	db 0xc5 
00006cb5:	db 0xce 
00006cb6:	db 0xd3 
00006cb7:	db 0xd8 
00006cb8:	db 0x7a z
00006cb9:	db 0x71 q
00006cba:	db 0x6c l
00006cbb:	db 0x67 g
00006cbc:	db 0x56 V
00006cbd:	db 0x5d ]
00006cbe:	db 0x40 @
00006cbf:	db 0x4b K
00006cc0:	db 0x22 "
00006cc1:	db 0x29 )
00006cc2:	db 0x34 4
00006cc3:	db 0x3f ?
00006cc4:	db 0x0e 
00006cc5:	db 0x05 
00006cc6:	db 0x18 
00006cc7:	db 0x13 
00006cc8:	db 0xca 
00006cc9:	db 0xc1 
00006cca:	db 0xdc 
00006ccb:	db 0xd7 
00006ccc:	db 0xe6 
00006ccd:	db 0xed 
00006cce:	db 0xf0 
00006ccf:	db 0xfb 
00006cd0:	db 0x92 
00006cd1:	db 0x99 
00006cd2:	db 0x84 
00006cd3:	db 0x8f 
00006cd4:	db 0xbe 
00006cd5:	db 0xb5 
00006cd6:	db 0xa8 
00006cd7:	db 0xa3 
00006cd8:	db 0x00 
00006cd9:	db 0x0d 
00006cda:	db 0x1a 
00006cdb:	db 0x17 
00006cdc:	db 0x34 4
00006cdd:	db 0x39 9
00006cde:	db 0x2e .
00006cdf:	db 0x23 #
00006ce0:	db 0x68 h
00006ce1:	db 0x65 e
00006ce2:	db 0x72 r
00006ce3:	db 0x7f 
00006ce4:	db 0x5c \
00006ce5:	db 0x51 Q
00006ce6:	db 0x46 F
00006ce7:	db 0x4b K
00006ce8:	db 0xd0 
00006ce9:	db 0xdd 
00006cea:	db 0xca 
00006ceb:	db 0xc7 
00006cec:	db 0xe4 
00006ced:	db 0xe9 
00006cee:	db 0xfe 
00006cef:	db 0xf3 
00006cf0:	db 0xb8 
00006cf1:	db 0xb5 
00006cf2:	db 0xa2 
00006cf3:	db 0xaf 
00006cf4:	db 0x8c 
00006cf5:	db 0x81 
00006cf6:	db 0x96 
00006cf7:	db 0x9b 
00006cf8:	db 0xbb 
00006cf9:	db 0xb6 
00006cfa:	db 0xa1 
00006cfb:	db 0xac 
00006cfc:	db 0x8f 
00006cfd:	db 0x82 
00006cfe:	db 0x95 
00006cff:	db 0x98 
00006d00:	db 0xd3 
00006d01:	db 0xde 
00006d02:	db 0xc9 
00006d03:	db 0xc4 
00006d04:	db 0xe7 
00006d05:	db 0xea 
00006d06:	db 0xfd 
00006d07:	db 0xf0 
00006d08:	db 0x6b k
00006d09:	db 0x66 f
00006d0a:	db 0x71 q
00006d0b:	db 0x7c |
00006d0c:	db 0x5f _
00006d0d:	db 0x52 R
00006d0e:	db 0x45 E
00006d0f:	db 0x48 H
00006d10:	db 0x03 
00006d11:	db 0x0e 
00006d12:	db 0x19 
00006d13:	db 0x14 
00006d14:	db 0x37 7
00006d15:	db 0x3a :
00006d16:	db 0x2d -
00006d17:	db 0x20 
00006d18:	db 0x6d m
00006d19:	db 0x60 `
00006d1a:	db 0x77 w
00006d1b:	db 0x7a z
00006d1c:	db 0x59 Y
00006d1d:	db 0x54 T
00006d1e:	db 0x43 C
00006d1f:	db 0x4e N
00006d20:	db 0x05 
00006d21:	db 0x08 
00006d22:	db 0x1f 
00006d23:	db 0x12 
00006d24:	db 0x31 1
00006d25:	db 0x3c <
00006d26:	db 0x2b +
00006d27:	db 0x26 &
00006d28:	db 0xbd 
00006d29:	db 0xb0 
00006d2a:	db 0xa7 
00006d2b:	db 0xaa 
00006d2c:	db 0x89 
00006d2d:	db 0x84 
00006d2e:	db 0x93 
00006d2f:	db 0x9e 
00006d30:	db 0xd5 
00006d31:	db 0xd8 
00006d32:	db 0xcf 
00006d33:	db 0xc2 
00006d34:	db 0xe1 
00006d35:	db 0xec 
00006d36:	db 0xfb 
00006d37:	db 0xf6 
00006d38:	db 0xd6 
00006d39:	db 0xdb 
00006d3a:	db 0xcc 
00006d3b:	db 0xc1 
00006d3c:	db 0xe2 
00006d3d:	db 0xef 
00006d3e:	db 0xf8 
00006d3f:	db 0xf5 
00006d40:	db 0xbe 
00006d41:	db 0xb3 
00006d42:	db 0xa4 
00006d43:	db 0xa9 
00006d44:	db 0x8a 
00006d45:	db 0x87 
00006d46:	db 0x90 
00006d47:	db 0x9d 
00006d48:	db 0x06 
00006d49:	db 0x0b 
00006d4a:	db 0x1c 
00006d4b:	db 0x11 
00006d4c:	db 0x32 2
00006d4d:	db 0x3f ?
00006d4e:	db 0x28 (
00006d4f:	db 0x25 %
00006d50:	db 0x6e n
00006d51:	db 0x63 c
00006d52:	db 0x74 t
00006d53:	db 0x79 y
00006d54:	db 0x5a Z
00006d55:	db 0x57 W
00006d56:	db 0x40 @
00006d57:	db 0x4d M
00006d58:	db 0xda 
00006d59:	db 0xd7 
00006d5a:	db 0xc0 
00006d5b:	db 0xcd 
00006d5c:	db 0xee 
00006d5d:	db 0xe3 
00006d5e:	db 0xf4 
00006d5f:	db 0xf9 
00006d60:	db 0xb2 
00006d61:	db 0xbf 
00006d62:	db 0xa8 
00006d63:	db 0xa5 
00006d64:	db 0x86 
00006d65:	db 0x8b 
00006d66:	db 0x9c 
00006d67:	db 0x91 
00006d68:	db 0x0a 
00006d69:	db 0x07 
00006d6a:	db 0x10 
00006d6b:	db 0x1d 
00006d6c:	db 0x3e >
00006d6d:	db 0x33 3
00006d6e:	db 0x24 $
00006d6f:	db 0x29 )
00006d70:	db 0x62 b
00006d71:	db 0x6f o
00006d72:	db 0x78 x
00006d73:	db 0x75 u
00006d74:	db 0x56 V
00006d75:	db 0x5b [
00006d76:	db 0x4c L
00006d77:	db 0x41 A
00006d78:	db 0x61 a
00006d79:	db 0x6c l
00006d7a:	db 0x7b {
00006d7b:	db 0x76 v
00006d7c:	db 0x55 U
00006d7d:	db 0x58 X
00006d7e:	db 0x4f O
00006d7f:	db 0x42 B
00006d80:	db 0x09 
00006d81:	db 0x04 
00006d82:	db 0x13 
00006d83:	db 0x1e 
00006d84:	db 0x3d =
00006d85:	db 0x30 0
00006d86:	db 0x27 '
00006d87:	db 0x2a *
00006d88:	db 0xb1 
00006d89:	db 0xbc 
00006d8a:	db 0xab 
00006d8b:	db 0xa6 
00006d8c:	db 0x85 
00006d8d:	db 0x88 
00006d8e:	db 0x9f 
00006d8f:	db 0x92 
00006d90:	db 0xd9 
00006d91:	db 0xd4 
00006d92:	db 0xc3 
00006d93:	db 0xce 
00006d94:	db 0xed 
00006d95:	db 0xe0 
00006d96:	db 0xf7 
00006d97:	db 0xfa 
00006d98:	db 0xb7 
00006d99:	db 0xba 
00006d9a:	db 0xad 
00006d9b:	db 0xa0 
00006d9c:	db 0x83 
00006d9d:	db 0x8e 
00006d9e:	db 0x99 
00006d9f:	db 0x94 
00006da0:	db 0xdf 
00006da1:	db 0xd2 
00006da2:	db 0xc5 
00006da3:	db 0xc8 
00006da4:	db 0xeb 
00006da5:	db 0xe6 
00006da6:	db 0xf1 
00006da7:	db 0xfc 
00006da8:	db 0x67 g
00006da9:	db 0x6a j
00006daa:	db 0x7d }
00006dab:	db 0x70 p
00006dac:	db 0x53 S
00006dad:	db 0x5e ^
00006dae:	db 0x49 I
00006daf:	db 0x44 D
00006db0:	db 0x0f 
00006db1:	db 0x02 
00006db2:	db 0x15 
00006db3:	db 0x18 
00006db4:	db 0x3b ;
00006db5:	db 0x36 6
00006db6:	db 0x21 !
00006db7:	db 0x2c ,
00006db8:	db 0x0c 
00006db9:	db 0x01 
00006dba:	db 0x16 
00006dbb:	db 0x1b 
00006dbc:	db 0x38 8
00006dbd:	db 0x35 5
00006dbe:	db 0x22 "
00006dbf:	db 0x2f /
00006dc0:	db 0x64 d
00006dc1:	db 0x69 i
00006dc2:	db 0x7e ~
00006dc3:	db 0x73 s
00006dc4:	db 0x50 P
00006dc5:	db 0x5d ]
00006dc6:	db 0x4a J
00006dc7:	db 0x47 G
00006dc8:	db 0xdc 
00006dc9:	db 0xd1 
00006dca:	db 0xc6 
00006dcb:	db 0xcb 
00006dcc:	db 0xe8 
00006dcd:	db 0xe5 
00006dce:	db 0xf2 
00006dcf:	db 0xff 
00006dd0:	db 0xb4 
00006dd1:	db 0xb9 
00006dd2:	db 0xae 
00006dd3:	db 0xa3 
00006dd4:	db 0x80 
00006dd5:	db 0x8d 
00006dd6:	db 0x9a 
00006dd7:	db 0x97 
00006dd8:	db 0x00 
00006dd9:	db 0x0e 
00006dda:	db 0x1c 
00006ddb:	db 0x12 
00006ddc:	db 0x38 8
00006ddd:	db 0x36 6
00006dde:	db 0x24 $
00006ddf:	db 0x2a *
00006de0:	db 0x70 p
00006de1:	db 0x7e ~
00006de2:	db 0x6c l
00006de3:	db 0x62 b
00006de4:	db 0x48 H
00006de5:	db 0x46 F
00006de6:	db 0x54 T
00006de7:	db 0x5a Z
00006de8:	db 0xe0 
00006de9:	db 0xee 
00006dea:	db 0xfc 
00006deb:	db 0xf2 
00006dec:	db 0xd8 
00006ded:	db 0xd6 
00006dee:	db 0xc4 
00006def:	db 0xca 
00006df0:	db 0x90 
00006df1:	db 0x9e 
00006df2:	db 0x8c 
00006df3:	db 0x82 
00006df4:	db 0xa8 
00006df5:	db 0xa6 
00006df6:	db 0xb4 
00006df7:	db 0xba 
00006df8:	db 0xdb 
00006df9:	db 0xd5 
00006dfa:	db 0xc7 
00006dfb:	db 0xc9 
00006dfc:	db 0xe3 
00006dfd:	db 0xed 
00006dfe:	db 0xff 
00006dff:	db 0xf1 
00006e00:	db 0xab 
00006e01:	db 0xa5 
00006e02:	db 0xb7 
00006e03:	db 0xb9 
00006e04:	db 0x93 
00006e05:	db 0x9d 
00006e06:	db 0x8f 
00006e07:	db 0x81 
00006e08:	db 0x3b ;
00006e09:	db 0x35 5
00006e0a:	db 0x27 '
00006e0b:	db 0x29 )
00006e0c:	db 0x03 
00006e0d:	db 0x0d 
00006e0e:	db 0x1f 
00006e0f:	db 0x11 
00006e10:	db 0x4b K
00006e11:	db 0x45 E
00006e12:	db 0x57 W
00006e13:	db 0x59 Y
00006e14:	db 0x73 s
00006e15:	db 0x7d }
00006e16:	db 0x6f o
00006e17:	db 0x61 a
00006e18:	db 0xad 
00006e19:	db 0xa3 
00006e1a:	db 0xb1 
00006e1b:	db 0xbf 
00006e1c:	db 0x95 
00006e1d:	db 0x9b 
00006e1e:	db 0x89 
00006e1f:	db 0x87 
00006e20:	db 0xdd 
00006e21:	db 0xd3 
00006e22:	db 0xc1 
00006e23:	db 0xcf 
00006e24:	db 0xe5 
00006e25:	db 0xeb 
00006e26:	db 0xf9 
00006e27:	db 0xf7 
00006e28:	db 0x4d M
00006e29:	db 0x43 C
00006e2a:	db 0x51 Q
00006e2b:	db 0x5f _
00006e2c:	db 0x75 u
00006e2d:	db 0x7b {
00006e2e:	db 0x69 i
00006e2f:	db 0x67 g
00006e30:	db 0x3d =
00006e31:	db 0x33 3
00006e32:	db 0x21 !
00006e33:	db 0x2f /
00006e34:	db 0x05 
00006e35:	db 0x0b 
00006e36:	db 0x19 
00006e37:	db 0x17 
00006e38:	db 0x76 v
00006e39:	db 0x78 x
00006e3a:	db 0x6a j
00006e3b:	db 0x64 d
00006e3c:	db 0x4e N
00006e3d:	db 0x40 @
00006e3e:	db 0x52 R
00006e3f:	db 0x5c \
00006e40:	db 0x06 
00006e41:	db 0x08 
00006e42:	db 0x1a 
00006e43:	db 0x14 
00006e44:	db 0x3e >
00006e45:	db 0x30 0
00006e46:	db 0x22 "
00006e47:	db 0x2c ,
00006e48:	db 0x96 
00006e49:	db 0x98 
00006e4a:	db 0x8a 
00006e4b:	db 0x84 
00006e4c:	db 0xae 
00006e4d:	db 0xa0 
00006e4e:	db 0xb2 
00006e4f:	db 0xbc 
00006e50:	db 0xe6 
00006e51:	db 0xe8 
00006e52:	db 0xfa 
00006e53:	db 0xf4 
00006e54:	db 0xde 
00006e55:	db 0xd0 
00006e56:	db 0xc2 
00006e57:	db 0xcc 
00006e58:	db 0x41 A
00006e59:	db 0x4f O
00006e5a:	db 0x5d ]
00006e5b:	db 0x53 S
00006e5c:	db 0x79 y
00006e5d:	db 0x77 w
00006e5e:	db 0x65 e
00006e5f:	db 0x6b k
00006e60:	db 0x31 1
00006e61:	db 0x3f ?
00006e62:	db 0x2d -
00006e63:	db 0x23 #
00006e64:	db 0x09 
00006e65:	db 0x07 
00006e66:	db 0x15 
00006e67:	db 0x1b 
00006e68:	db 0xa1 
00006e69:	db 0xaf 
00006e6a:	db 0xbd 
00006e6b:	db 0xb3 
00006e6c:	db 0x99 
00006e6d:	db 0x97 
00006e6e:	db 0x85 
00006e6f:	db 0x8b 
00006e70:	db 0xd1 
00006e71:	db 0xdf 
00006e72:	db 0xcd 
00006e73:	db 0xc3 
00006e74:	db 0xe9 
00006e75:	db 0xe7 
00006e76:	db 0xf5 
00006e77:	db 0xfb 
00006e78:	db 0x9a 
00006e79:	db 0x94 
00006e7a:	db 0x86 
00006e7b:	db 0x88 
00006e7c:	db 0xa2 
00006e7d:	db 0xac 
00006e7e:	db 0xbe 
00006e7f:	db 0xb0 
00006e80:	db 0xea 
00006e81:	db 0xe4 
00006e82:	db 0xf6 
00006e83:	db 0xf8 
00006e84:	db 0xd2 
00006e85:	db 0xdc 
00006e86:	db 0xce 
00006e87:	db 0xc0 
00006e88:	db 0x7a z
00006e89:	db 0x74 t
00006e8a:	db 0x66 f
00006e8b:	db 0x68 h
00006e8c:	db 0x42 B
00006e8d:	db 0x4c L
00006e8e:	db 0x5e ^
00006e8f:	db 0x50 P
00006e90:	db 0x0a 
00006e91:	db 0x04 
00006e92:	db 0x16 
00006e93:	db 0x18 
00006e94:	db 0x32 2
00006e95:	db 0x3c <
00006e96:	db 0x2e .
00006e97:	db 0x20 
00006e98:	db 0xec 
00006e99:	db 0xe2 
00006e9a:	db 0xf0 
00006e9b:	db 0xfe 
00006e9c:	db 0xd4 
00006e9d:	db 0xda 
00006e9e:	db 0xc8 
00006e9f:	db 0xc6 
00006ea0:	db 0x9c 
00006ea1:	db 0x92 
00006ea2:	db 0x80 
00006ea3:	db 0x8e 
00006ea4:	db 0xa4 
00006ea5:	db 0xaa 
00006ea6:	db 0xb8 
00006ea7:	db 0xb6 
00006ea8:	db 0x0c 
00006ea9:	db 0x02 
00006eaa:	db 0x10 
00006eab:	db 0x1e 
00006eac:	db 0x34 4
00006ead:	db 0x3a :
00006eae:	db 0x28 (
00006eaf:	db 0x26 &
00006eb0:	db 0x7c |
00006eb1:	db 0x72 r
00006eb2:	db 0x60 `
00006eb3:	db 0x6e n
00006eb4:	db 0x44 D
00006eb5:	db 0x4a J
00006eb6:	db 0x58 X
00006eb7:	db 0x56 V
00006eb8:	db 0x37 7
00006eb9:	db 0x39 9
00006eba:	db 0x2b +
00006ebb:	db 0x25 %
00006ebc:	db 0x0f 
00006ebd:	db 0x01 
00006ebe:	db 0x13 
00006ebf:	db 0x1d 
00006ec0:	db 0x47 G
00006ec1:	db 0x49 I
00006ec2:	db 0x5b [
00006ec3:	db 0x55 U
00006ec4:	db 0x7f 
00006ec5:	db 0x71 q
00006ec6:	db 0x63 c
00006ec7:	db 0x6d m
00006ec8:	db 0xd7 
00006ec9:	db 0xd9 
00006eca:	db 0xcb 
00006ecb:	db 0xc5 
00006ecc:	db 0xef 
00006ecd:	db 0xe1 
00006ece:	db 0xf3 
00006ecf:	db 0xfd 
00006ed0:	db 0xa7 
00006ed1:	db 0xa9 
00006ed2:	db 0xbb 
00006ed3:	db 0xb5 
00006ed4:	db 0x9f 
00006ed5:	db 0x91 
00006ed6:	db 0x83 
00006ed7:	db 0x8d 
00006ed8:	db 0x00 
00006ed9:	db 0x5a Z
00006eda:	db 0xb4 
00006edb:	db 0xee 
00006edc:	db 0x00 
00006edd:	db 0xee 
00006ede:	db 0xb4 
00006edf:	db 0x5a Z
00006ee0:	db 0x00 
00006ee1:	db 0x08 
00006ee2:	db 0x01 
00006ee3:	db 0x09 
00006ee4:	db 0x02 
00006ee5:	db 0x0a 
00006ee6:	db 0x03 
00006ee7:	db 0x0b 
00006ee8:	db 0x04 
00006ee9:	db 0x0c 
00006eea:	db 0x05 
00006eeb:	db 0x0d 
00006eec:	db 0x06 
00006eed:	db 0x0e 
00006eee:	db 0x07 
00006eef:	db 0x0f 
00006ef0:	db 0x00 
00006ef1:	db 0x09 
00006ef2:	db 0x02 
00006ef3:	db 0x0b 
00006ef4:	db 0x04 
00006ef5:	db 0x0d 
00006ef6:	db 0x06 
00006ef7:	db 0x0f 
00006ef8:	db 0x08 
00006ef9:	db 0x01 
00006efa:	db 0x0a 
00006efb:	db 0x03 
00006efc:	db 0x0c 
00006efd:	db 0x05 
00006efe:	db 0x0e 
00006eff:	db 0x07 
00006f00:	db 0x08 
00006f01:	db 0x01 
00006f02:	db 0x07 
00006f03:	db 0x0d 
00006f04:	db 0x06 
00006f05:	db 0x0f 
00006f06:	db 0x03 
00006f07:	db 0x02 
00006f08:	db 0x00 
00006f09:	db 0x0b 
00006f0a:	db 0x05 
00006f0b:	db 0x09 
00006f0c:	db 0x0e 
00006f0d:	db 0x0c 
00006f0e:	db 0x0a 
00006f0f:	db 0x04 
00006f10:	db 0x02 
00006f11:	db 0x08 
00006f12:	db 0x0b 
00006f13:	db 0x0d 
00006f14:	db 0x0f 
00006f15:	db 0x07 
00006f16:	db 0x06 
00006f17:	db 0x0e 
00006f18:	db 0x03 
00006f19:	db 0x01 
00006f1a:	db 0x09 
00006f1b:	db 0x04 
00006f1c:	db 0x00 
00006f1d:	db 0x0a 
00006f1e:	db 0x0c 
00006f1f:	db 0x05 
00006f20:	db 0x0e 
00006f21:	db 0x0c 
00006f22:	db 0x0b 
00006f23:	db 0x08 
00006f24:	db 0x01 
00006f25:	db 0x02 
00006f26:	db 0x03 
00006f27:	db 0x05 
00006f28:	db 0x0f 
00006f29:	db 0x04 
00006f2a:	db 0x0a 
00006f2b:	db 0x06 
00006f2c:	db 0x07 
00006f2d:	db 0x00 
00006f2e:	db 0x09 
00006f2f:	db 0x0d 
00006f30:	db 0x01 
00006f31:	db 0x0e 
00006f32:	db 0x02 
00006f33:	db 0x0b 
00006f34:	db 0x04 
00006f35:	db 0x0c 
00006f36:	db 0x03 
00006f37:	db 0x07 
00006f38:	db 0x06 
00006f39:	db 0x0d 
00006f3a:	db 0x0a 
00006f3b:	db 0x05 
00006f3c:	db 0x0f 
00006f3d:	db 0x09 
00006f3e:	db 0x00 
00006f3f:	db 0x08 
00006f40:	db 0x0b 
00006f41:	db 0x0a 
00006f42:	db 0x05 
00006f43:	db 0x0e 
00006f44:	db 0x06 
00006f45:	db 0x0d 
00006f46:	db 0x09 
00006f47:	db 0x00 
00006f48:	db 0x0c 
00006f49:	db 0x08 
00006f4a:	db 0x0f 
00006f4b:	db 0x03 
00006f4c:	db 0x02 
00006f4d:	db 0x04 
00006f4e:	db 0x07 
00006f4f:	db 0x01 
00006f50:	db 0x04 
00006f51:	db 0x0c 
00006f52:	db 0x07 
00006f53:	db 0x05 
00006f54:	db 0x01 
00006f55:	db 0x06 
00006f56:	db 0x09 
00006f57:	db 0x0a 
00006f58:	db 0x00 
00006f59:	db 0x0e 
00006f5a:	db 0x0d 
00006f5b:	db 0x08 
00006f5c:	db 0x02 
00006f5d:	db 0x0b 
00006f5e:	db 0x03 
00006f5f:	db 0x0f 
00006f60:	db 0x0d 
00006f61:	db 0x07 
00006f62:	db 0x0f 
00006f63:	db 0x04 
00006f64:	db 0x01 
00006f65:	db 0x02 
00006f66:	db 0x06 
00006f67:	db 0x0e 
00006f68:	db 0x09 
00006f69:	db 0x0b 
00006f6a:	db 0x03 
00006f6b:	db 0x00 
00006f6c:	db 0x08 
00006f6d:	db 0x05 
00006f6e:	db 0x0c 
00006f6f:	db 0x0a 
00006f70:	db 0x0b 
00006f71:	db 0x09 
00006f72:	db 0x05 
00006f73:	db 0x01 
00006f74:	db 0x0c 
00006f75:	db 0x03 
00006f76:	db 0x0d 
00006f77:	db 0x0e 
00006f78:	db 0x06 
00006f79:	db 0x04 
00006f7a:	db 0x07 
00006f7b:	db 0x0f 
00006f7c:	db 0x02 
00006f7d:	db 0x00 
00006f7e:	db 0x08 
00006f7f:	db 0x0a 
00006f80:	db 0x00 
00006f81:	db 0x00 
00006f82:	db 0x00 
00006f83:	db 0x00 
00006f84:	db 0x00 
00006f85:	db 0x00 
00006f86:	db 0x00 
00006f87:	db 0x00 
00006f88:	db 0x0d 
00006f89:	db 0x0a 
00006f8a:	db 0x00 
00006f8b:	db 0x00 
00006f8c:	db 0x45 E
00006f8d:	db 0x72 r
00006f8e:	db 0x72 r
00006f8f:	db 0x6f o
00006f90:	db 0x72 r
00006f91:	db 0x3a :
00006f92:	db 0x20 
00006f93:	db 0x00 
00006f94:	db 0x57 W
00006f95:	db 0x72 r
00006f96:	db 0x69 i
00006f97:	db 0x74 t
00006f98:	db 0x65 e
00006f99:	db 0x00 
00006f9a:	db 0x52 R
00006f9b:	db 0x65 e
00006f9c:	db 0x61 a
00006f9d:	db 0x64 d
00006f9e:	db 0x00 
00006f9f:	db 0x00 
00006fa0:	db 0x20 
00006fa1:	db 0x65 e
00006fa2:	db 0x72 r
00006fa3:	db 0x72 r
00006fa4:	db 0x6f o
00006fa5:	db 0x72 r
00006fa6:	db 0x3a :
00006fa7:	db 0x00 
00006fa8:	db 0x20 
00006fa9:	db 0x44 D
00006faa:	db 0x72 r
00006fab:	db 0x69 i
00006fac:	db 0x76 v
00006fad:	db 0x65 e
00006fae:	db 0x3a :
00006faf:	db 0x00 
00006fb0:	db 0x20 
00006fb1:	db 0x53 S
00006fb2:	db 0x65 e
00006fb3:	db 0x63 c
00006fb4:	db 0x74 t
00006fb5:	db 0x6f o
00006fb6:	db 0x72 r
00006fb7:	db 0x3a :
00006fb8:	db 0x00 
00006fb9:	db 0x00 
00006fba:	db 0x20 
00006fbb:	db 0x43 C
00006fbc:	db 0x48 H
00006fbd:	db 0x53 S
00006fbe:	db 0x3a :
00006fbf:	db 0x00 
00006fc0:	db 0x20 
00006fc1:	db 0x4d M
00006fc2:	db 0x42 B
00006fc3:	db 0x20 
00006fc4:	db 0x00 
00006fc5:	db 0x00 
00006fc6:	db 0x44 D
00006fc7:	db 0x72 r
00006fc8:	db 0x69 i
00006fc9:	db 0x76 v
00006fca:	db 0x65 e
00006fcb:	db 0x20 
00006fcc:	db 0x00 
00006fcd:	db 0x00 
00006fce:	db 0x20 
00006fcf:	db 0x6e n
00006fd0:	db 0x6f o
00006fd1:	db 0x74 t
00006fd2:	db 0x20 
00006fd3:	db 0x66 f
00006fd4:	db 0x6f o
00006fd5:	db 0x75 u
00006fd6:	db 0x6e n
00006fd7:	db 0x64 d
00006fd8:	db 0x3a :
00006fd9:	db 0x20 
00006fda:	db 0x00 
00006fdb:	db 0x00 
00006fdc:	db 0x00 
00006fdd:	db 0x00 
00006fde:	db 0x4e N
00006fdf:	db 0x6f o
00006fe0:	db 0x20 
00006fe1:	db 0x62 b
00006fe2:	db 0x6f o
00006fe3:	db 0x6f o
00006fe4:	db 0x74 t
00006fe5:	db 0x61 a
00006fe6:	db 0x62 b
00006fe7:	db 0x6c l
00006fe8:	db 0x65 e
00006fe9:	db 0x20 
00006fea:	db 0x70 p
00006feb:	db 0x61 a
00006fec:	db 0x72 r
00006fed:	db 0x74 t
00006fee:	db 0x69 i
00006fef:	db 0x74 t
00006ff0:	db 0x69 i
00006ff1:	db 0x6f o
00006ff2:	db 0x6e n
00006ff3:	db 0x20 
00006ff4:	db 0x66 f
00006ff5:	db 0x6f o
00006ff6:	db 0x75 u
00006ff7:	db 0x6e n
00006ff8:	db 0x64 d
00006ff9:	db 0x00 
00006ffa:	db 0x20 
00006ffb:	db 0x54 T
00006ffc:	db 0x72 r
00006ffd:	db 0x75 u
00006ffe:	db 0x65 e
00006fff:	db 0x43 C
00007000:	db 0x72 r
00007001:	db 0x79 y
00007002:	db 0x70 p
00007003:	db 0x74 t
00007004:	db 0x20 
00007005:	db 0x42 B
00007006:	db 0x6f o
00007007:	db 0x6f o
00007008:	db 0x74 t
00007009:	db 0x20 
0000700a:	db 0x4c L
0000700b:	db 0x6f o
0000700c:	db 0x61 a
0000700d:	db 0x64 d
0000700e:	db 0x65 e
0000700f:	db 0x72 r
00007010:	db 0x20 
00007011:	db 0x37 7
00007012:	db 0x2e .
00007013:	db 0x31 1
00007014:	db 0x61 a
00007015:	db 0x0d 
00007016:	db 0x0a 
00007017:	db 0x00 
00007018:	db 0x20 
00007019:	db 0x20 
0000701a:	db 0x20 
0000701b:	db 0x20 
0000701c:	db 0x4b K
0000701d:	db 0x65 e
0000701e:	db 0x79 y
0000701f:	db 0x62 b
00007020:	db 0x6f o
00007021:	db 0x61 a
00007022:	db 0x72 r
00007023:	db 0x64 d
00007024:	db 0x20 
00007025:	db 0x43 C
00007026:	db 0x6f o
00007027:	db 0x6e n
00007028:	db 0x74 t
00007029:	db 0x72 r
0000702a:	db 0x6f o
0000702b:	db 0x6c l
0000702c:	db 0x73 s
0000702d:	db 0x3a :
0000702e:	db 0x0d 
0000702f:	db 0x0a 
00007030:	db 0x00 
00007031:	db 0x00 
00007032:	db 0x20 
00007033:	db 0x20 
00007034:	db 0x20 
00007035:	db 0x20 
00007036:	db 0x5b [
00007037:	db 0x45 E
00007038:	db 0x73 s
00007039:	db 0x63 c
0000703a:	db 0x5d ]
0000703b:	db 0x20 
0000703c:	db 0x20 
0000703d:	db 0x00 
0000703e:	db 0x42 B
0000703f:	db 0x6f o
00007040:	db 0x6f o
00007041:	db 0x74 t
00007042:	db 0x20 
00007043:	db 0x4e N
00007044:	db 0x6f o
00007045:	db 0x6e n
00007046:	db 0x2d -
00007047:	db 0x48 H
00007048:	db 0x69 i
00007049:	db 0x64 d
0000704a:	db 0x64 d
0000704b:	db 0x65 e
0000704c:	db 0x6e n
0000704d:	db 0x20 
0000704e:	db 0x53 S
0000704f:	db 0x79 y
00007050:	db 0x73 s
00007051:	db 0x74 t
00007052:	db 0x65 e
00007053:	db 0x6d m
00007054:	db 0x20 
00007055:	db 0x28 (
00007056:	db 0x42 B
00007057:	db 0x6f o
00007058:	db 0x6f o
00007059:	db 0x74 t
0000705a:	db 0x20 
0000705b:	db 0x4d M
0000705c:	db 0x61 a
0000705d:	db 0x6e n
0000705e:	db 0x61 a
0000705f:	db 0x67 g
00007060:	db 0x65 e
00007061:	db 0x72 r
00007062:	db 0x29 )
00007063:	db 0x00 
00007064:	db 0x53 S
00007065:	db 0x6b k
00007066:	db 0x69 i
00007067:	db 0x70 p
00007068:	db 0x20 
00007069:	db 0x41 A
0000706a:	db 0x75 u
0000706b:	db 0x74 t
0000706c:	db 0x68 h
0000706d:	db 0x65 e
0000706e:	db 0x6e n
0000706f:	db 0x74 t
00007070:	db 0x69 i
00007071:	db 0x63 c
00007072:	db 0x61 a
00007073:	db 0x74 t
00007074:	db 0x69 i
00007075:	db 0x6f o
00007076:	db 0x6e n
00007077:	db 0x20 
00007078:	db 0x28 (
00007079:	db 0x42 B
0000707a:	db 0x6f o
0000707b:	db 0x6f o
0000707c:	db 0x74 t
0000707d:	db 0x20 
0000707e:	db 0x4d M
0000707f:	db 0x61 a
00007080:	db 0x6e n
00007081:	db 0x61 a
00007082:	db 0x67 g
00007083:	db 0x65 e
00007084:	db 0x72 r
00007085:	db 0x29 )
00007086:	db 0x00 
00007087:	db 0x00 
00007088:	db 0x3f ?
00007089:	db 0x20 
0000708a:	db 0x28 (
0000708b:	db 0x79 y
0000708c:	db 0x2f /
0000708d:	db 0x6e n
0000708e:	db 0x29 )
0000708f:	db 0x3a :
00007090:	db 0x20 
00007091:	db 0x00 
00007092:	db 0x79 y
00007093:	db 0x0d 
00007094:	db 0x0a 
00007095:	db 0x00 
00007096:	db 0x6e n
00007097:	db 0x0d 
00007098:	db 0x0a 
00007099:	db 0x00 
0000709a:	db 0x5b [
0000709b:	db 0x00 
0000709c:	db 0x5d ]
0000709d:	db 0x20 
0000709e:	db 0x20 
0000709f:	db 0x20 
000070a0:	db 0x20 
000070a1:	db 0x00 
000070a2:	db 0x5b [
000070a3:	db 0x45 E
000070a4:	db 0x73 s
000070a5:	db 0x63 c
000070a6:	db 0x5d ]
000070a7:	db 0x20 
000070a8:	db 0x20 
000070a9:	db 0x43 C
000070aa:	db 0x61 a
000070ab:	db 0x6e n
000070ac:	db 0x63 c
000070ad:	db 0x65 e
000070ae:	db 0x6c l
000070af:	db 0x0d 
000070b0:	db 0x0a 
000070b1:	db 0x0d 
000070b2:	db 0x0a 
000070b3:	db 0x00 
000070b4:	db 0x45 E
000070b5:	db 0x6e n
000070b6:	db 0x74 t
000070b7:	db 0x65 e
000070b8:	db 0x72 r
000070b9:	db 0x20 
000070ba:	db 0x70 p
000070bb:	db 0x61 a
000070bc:	db 0x73 s
000070bd:	db 0x73 s
000070be:	db 0x77 w
000070bf:	db 0x6f o
000070c0:	db 0x72 r
000070c1:	db 0x64 d
000070c2:	db 0x00 
000070c3:	db 0x00 
000070c4:	db 0x20 
000070c5:	db 0x66 f
000070c6:	db 0x6f o
000070c7:	db 0x72 r
000070c8:	db 0x20 
000070c9:	db 0x68 h
000070ca:	db 0x69 i
000070cb:	db 0x64 d
000070cc:	db 0x64 d
000070cd:	db 0x65 e
000070ce:	db 0x6e n
000070cf:	db 0x20 
000070d0:	db 0x73 s
000070d1:	db 0x79 y
000070d2:	db 0x73 s
000070d3:	db 0x74 t
000070d4:	db 0x65 e
000070d5:	db 0x6d m
000070d6:	db 0x3a :
000070d7:	db 0x0d 
000070d8:	db 0x0a 
000070d9:	db 0x00 
000070da:	db 0x3a :
000070db:	db 0x20 
000070dc:	db 0x00 
000070dd:	db 0x00 
000070de:	db 0x42 B
000070df:	db 0x6f o
000070e0:	db 0x6f o
000070e1:	db 0x74 t
000070e2:	db 0x69 i
000070e3:	db 0x6e n
000070e4:	db 0x67 g
000070e5:	db 0x2e .
000070e6:	db 0x2e .
000070e7:	db 0x2e .
000070e8:	db 0x0d 
000070e9:	db 0x0a 
000070ea:	db 0x00 
000070eb:	db 0x00 
000070ec:	db 0x42 B
000070ed:	db 0x49 I
000070ee:	db 0x4f O
000070ef:	db 0x53 S
000070f0:	db 0x20 
000070f1:	db 0x72 r
000070f2:	db 0x65 e
000070f3:	db 0x73 s
000070f4:	db 0x65 e
000070f5:	db 0x72 r
000070f6:	db 0x76 v
000070f7:	db 0x65 e
000070f8:	db 0x64 d
000070f9:	db 0x20 
000070fa:	db 0x74 t
000070fb:	db 0x6f o
000070fc:	db 0x6f o
000070fd:	db 0x20 
000070fe:	db 0x6d m
000070ff:	db 0x75 u
00007100:	db 0x63 c
00007101:	db 0x68 h
00007102:	db 0x20 
00007103:	db 0x6d m
00007104:	db 0x65 e
00007105:	db 0x6d m
00007106:	db 0x6f o
00007107:	db 0x72 r
00007108:	db 0x79 y
00007109:	db 0x3a :
0000710a:	db 0x20 
0000710b:	db 0x00 
0000710c:	db 0x2d -
0000710d:	db 0x20 
0000710e:	db 0x55 U
0000710f:	db 0x70 p
00007110:	db 0x67 g
00007111:	db 0x72 r
00007112:	db 0x61 a
00007113:	db 0x64 d
00007114:	db 0x65 e
00007115:	db 0x20 
00007116:	db 0x42 B
00007117:	db 0x49 I
00007118:	db 0x4f O
00007119:	db 0x53 S
0000711a:	db 0x0d 
0000711b:	db 0x0a 
0000711c:	db 0x2d -
0000711d:	db 0x20 
0000711e:	db 0x55 U
0000711f:	db 0x73 s
00007120:	db 0x65 e
00007121:	db 0x20 
00007122:	db 0x61 a
00007123:	db 0x20 
00007124:	db 0x64 d
00007125:	db 0x69 i
00007126:	db 0x66 f
00007127:	db 0x66 f
00007128:	db 0x65 e
00007129:	db 0x72 r
0000712a:	db 0x65 e
0000712b:	db 0x6e n
0000712c:	db 0x74 t
0000712d:	db 0x20 
0000712e:	db 0x6d m
0000712f:	db 0x6f o
00007130:	db 0x74 t
00007131:	db 0x68 h
00007132:	db 0x65 e
00007133:	db 0x72 r
00007134:	db 0x62 b
00007135:	db 0x6f o
00007136:	db 0x61 a
00007137:	db 0x72 r
00007138:	db 0x64 d
00007139:	db 0x20 
0000713a:	db 0x6d m
0000713b:	db 0x6f o
0000713c:	db 0x64 d
0000713d:	db 0x65 e
0000713e:	db 0x6c l
0000713f:	db 0x2f /
00007140:	db 0x62 b
00007141:	db 0x72 r
00007142:	db 0x61 a
00007143:	db 0x6e n
00007144:	db 0x64 d
00007145:	db 0x0d 
00007146:	db 0x0a 
00007147:	db 0x00 
00007148:	db 0x57 W
00007149:	db 0x61 a
0000714a:	db 0x72 r
0000714b:	db 0x6e n
0000714c:	db 0x69 i
0000714d:	db 0x6e n
0000714e:	db 0x67 g
0000714f:	db 0x3a :
00007150:	db 0x20 
00007151:	db 0x43 C
00007152:	db 0x61 a
00007153:	db 0x70 p
00007154:	db 0x73 s
00007155:	db 0x20 
00007156:	db 0x4c L
00007157:	db 0x6f o
00007158:	db 0x63 c
00007159:	db 0x6b k
0000715a:	db 0x20 
0000715b:	db 0x69 i
0000715c:	db 0x73 s
0000715d:	db 0x20 
0000715e:	db 0x6f o
0000715f:	db 0x6e n
00007160:	db 0x2e .
00007161:	db 0x0d 
00007162:	db 0x0a 
00007163:	db 0x00 
00007164:	db 0x49 I
00007165:	db 0x6e n
00007166:	db 0x63 c
00007167:	db 0x6f o
00007168:	db 0x72 r
00007169:	db 0x72 r
0000716a:	db 0x65 e
0000716b:	db 0x63 c
0000716c:	db 0x74 t
0000716d:	db 0x20 
0000716e:	db 0x70 p
0000716f:	db 0x61 a
00007170:	db 0x73 s
00007171:	db 0x73 s
00007172:	db 0x77 w
00007173:	db 0x6f o
00007174:	db 0x72 r
00007175:	db 0x64 d
00007176:	db 0x2e .
00007177:	db 0x0d 
00007178:	db 0x0a 
00007179:	db 0x0d 
0000717a:	db 0x0a 
0000717b:	db 0x00 
0000717c:	db 0x49 I
0000717d:	db 0x66 f
0000717e:	db 0x20 
0000717f:	db 0x79 y
00007180:	db 0x6f o
00007181:	db 0x75 u
00007182:	db 0x20 
00007183:	db 0x61 a
00007184:	db 0x72 r
00007185:	db 0x65 e
00007186:	db 0x20 
00007187:	db 0x73 s
00007188:	db 0x75 u
00007189:	db 0x72 r
0000718a:	db 0x65 e
0000718b:	db 0x20 
0000718c:	db 0x74 t
0000718d:	db 0x68 h
0000718e:	db 0x65 e
0000718f:	db 0x20 
00007190:	db 0x70 p
00007191:	db 0x61 a
00007192:	db 0x73 s
00007193:	db 0x73 s
00007194:	db 0x77 w
00007195:	db 0x6f o
00007196:	db 0x72 r
00007197:	db 0x64 d
00007198:	db 0x20 
00007199:	db 0x69 i
0000719a:	db 0x73 s
0000719b:	db 0x20 
0000719c:	db 0x63 c
0000719d:	db 0x6f o
0000719e:	db 0x72 r
0000719f:	db 0x72 r
000071a0:	db 0x65 e
000071a1:	db 0x63 c
000071a2:	db 0x74 t
000071a3:	db 0x2c ,
000071a4:	db 0x20 
000071a5:	db 0x74 t
000071a6:	db 0x68 h
000071a7:	db 0x65 e
000071a8:	db 0x20 
000071a9:	db 0x6b k
000071aa:	db 0x65 e
000071ab:	db 0x79 y
000071ac:	db 0x20 
000071ad:	db 0x64 d
000071ae:	db 0x61 a
000071af:	db 0x74 t
000071b0:	db 0x61 a
000071b1:	db 0x20 
000071b2:	db 0x6d m
000071b3:	db 0x61 a
000071b4:	db 0x79 y
000071b5:	db 0x20 
000071b6:	db 0x62 b
000071b7:	db 0x65 e
000071b8:	db 0x20 
000071b9:	db 0x64 d
000071ba:	db 0x61 a
000071bb:	db 0x6d m
000071bc:	db 0x61 a
000071bd:	db 0x67 g
000071be:	db 0x65 e
000071bf:	db 0x64 d
000071c0:	db 0x2e .
000071c1:	db 0x20 
000071c2:	db 0x42 B
000071c3:	db 0x6f o
000071c4:	db 0x6f o
000071c5:	db 0x74 t
000071c6:	db 0x20 
000071c7:	db 0x79 y
000071c8:	db 0x6f o
000071c9:	db 0x75 u
000071ca:	db 0x72 r
000071cb:	db 0x0d 
000071cc:	db 0x0a 
000071cd:	db 0x54 T
000071ce:	db 0x72 r
000071cf:	db 0x75 u
000071d0:	db 0x65 e
000071d1:	db 0x43 C
000071d2:	db 0x72 r
000071d3:	db 0x79 y
000071d4:	db 0x70 p
000071d5:	db 0x74 t
000071d6:	db 0x20 
000071d7:	db 0x52 R
000071d8:	db 0x65 e
000071d9:	db 0x73 s
000071da:	db 0x63 c
000071db:	db 0x75 u
000071dc:	db 0x65 e
000071dd:	db 0x20 
000071de:	db 0x44 D
000071df:	db 0x69 i
000071e0:	db 0x73 s
000071e1:	db 0x6b k
000071e2:	db 0x20 
000071e3:	db 0x61 a
000071e4:	db 0x6e n
000071e5:	db 0x64 d
000071e6:	db 0x20 
000071e7:	db 0x73 s
000071e8:	db 0x65 e
000071e9:	db 0x6c l
000071ea:	db 0x65 e
000071eb:	db 0x63 c
000071ec:	db 0x74 t
000071ed:	db 0x20 
000071ee:	db 0x27 '
000071ef:	db 0x52 R
000071f0:	db 0x65 e
000071f1:	db 0x70 p
000071f2:	db 0x61 a
000071f3:	db 0x69 i
000071f4:	db 0x72 r
000071f5:	db 0x20 
000071f6:	db 0x4f O
000071f7:	db 0x70 p
000071f8:	db 0x74 t
000071f9:	db 0x69 i
000071fa:	db 0x6f o
000071fb:	db 0x6e n
000071fc:	db 0x73 s
000071fd:	db 0x27 '
000071fe:	db 0x20 
000071ff:	db 0x3e >
00007200:	db 0x20 
00007201:	db 0x27 '
00007202:	db 0x52 R
00007203:	db 0x65 e
00007204:	db 0x73 s
00007205:	db 0x74 t
00007206:	db 0x6f o
00007207:	db 0x72 r
00007208:	db 0x65 e
00007209:	db 0x20 
0000720a:	db 0x6b k
0000720b:	db 0x65 e
0000720c:	db 0x79 y
0000720d:	db 0x20 
0000720e:	db 0x64 d
0000720f:	db 0x61 a
00007210:	db 0x74 t
00007211:	db 0x61 a
00007212:	db 0x27 '
00007213:	db 0x2e .
00007214:	db 0x0d 
00007215:	db 0x0a 
00007216:	db 0x0d 
00007217:	db 0x0a 
00007218:	db 0x00 
00007219:	db 0x00 
0000721a:	db 0x42 B
0000721b:	db 0x6f o
0000721c:	db 0x6f o
0000721d:	db 0x74 t
0000721e:	db 0x61 a
0000721f:	db 0x62 b
00007220:	db 0x6c l
00007221:	db 0x65 e
00007222:	db 0x20 
00007223:	db 0x50 P
00007224:	db 0x61 a
00007225:	db 0x72 r
00007226:	db 0x74 t
00007227:	db 0x69 i
00007228:	db 0x74 t
00007229:	db 0x69 i
0000722a:	db 0x6f o
0000722b:	db 0x6e n
0000722c:	db 0x73 s
0000722d:	db 0x3a :
0000722e:	db 0x0d 
0000722f:	db 0x0a 
00007230:	db 0x00 
00007231:	db 0x00 
00007232:	db 0x44 D
00007233:	db 0x72 r
00007234:	db 0x69 i
00007235:	db 0x76 v
00007236:	db 0x65 e
00007237:	db 0x3a :
00007238:	db 0x20 
00007239:	db 0x00 
0000723a:	db 0x2c ,
0000723b:	db 0x20 
0000723c:	db 0x50 P
0000723d:	db 0x61 a
0000723e:	db 0x72 r
0000723f:	db 0x74 t
00007240:	db 0x69 i
00007241:	db 0x74 t
00007242:	db 0x69 i
00007243:	db 0x6f o
00007244:	db 0x6e n
00007245:	db 0x3a :
00007246:	db 0x20 
00007247:	db 0x00 
00007248:	db 0x2c ,
00007249:	db 0x20 
0000724a:	db 0x53 S
0000724b:	db 0x69 i
0000724c:	db 0x7a z
0000724d:	db 0x65 e
0000724e:	db 0x3a :
0000724f:	db 0x20 
00007250:	db 0x00 
00007251:	db 0x00 
00007252:	db 0x50 P
00007253:	db 0x72 r
00007254:	db 0x65 e
00007255:	db 0x73 s
00007256:	db 0x73 s
00007257:	db 0x20 
00007258:	db 0x31 1
00007259:	db 0x2d -
0000725a:	db 0x39 9
0000725b:	db 0x20 
0000725c:	db 0x74 t
0000725d:	db 0x6f o
0000725e:	db 0x20 
0000725f:	db 0x73 s
00007260:	db 0x65 e
00007261:	db 0x6c l
00007262:	db 0x65 e
00007263:	db 0x63 c
00007264:	db 0x74 t
00007265:	db 0x20 
00007266:	db 0x70 p
00007267:	db 0x61 a
00007268:	db 0x72 r
00007269:	db 0x74 t
0000726a:	db 0x69 i
0000726b:	db 0x74 t
0000726c:	db 0x69 i
0000726d:	db 0x6f o
0000726e:	db 0x6e n
0000726f:	db 0x3a :
00007270:	db 0x20 
00007271:	db 0x00 
00007272:	db 0x59 Y
00007273:	db 0x6f o
00007274:	db 0x75 u
00007275:	db 0x72 r
00007276:	db 0x20 
00007277:	db 0x42 B
00007278:	db 0x49 I
00007279:	db 0x4f O
0000727a:	db 0x53 S
0000727b:	db 0x20 
0000727c:	db 0x64 d
0000727d:	db 0x6f o
0000727e:	db 0x65 e
0000727f:	db 0x73 s
00007280:	db 0x20 
00007281:	db 0x6e n
00007282:	db 0x6f o
00007283:	db 0x74 t
00007284:	db 0x20 
00007285:	db 0x73 s
00007286:	db 0x75 u
00007287:	db 0x70 p
00007288:	db 0x70 p
00007289:	db 0x6f o
0000728a:	db 0x72 r
0000728b:	db 0x74 t
0000728c:	db 0x20 
0000728d:	db 0x6c l
0000728e:	db 0x61 a
0000728f:	db 0x72 r
00007290:	db 0x67 g
00007291:	db 0x65 e
00007292:	db 0x20 
00007293:	db 0x64 d
00007294:	db 0x72 r
00007295:	db 0x69 i
00007296:	db 0x76 v
00007297:	db 0x65 e
00007298:	db 0x73 s
00007299:	db 0x00 
0000729a:	db 0x20 
0000729b:	db 0x64 d
0000729c:	db 0x75 u
0000729d:	db 0x65 e
0000729e:	db 0x20 
0000729f:	db 0x74 t
000072a0:	db 0x6f o
000072a1:	db 0x20 
000072a2:	db 0x61 a
000072a3:	db 0x20 
000072a4:	db 0x62 b
000072a5:	db 0x75 u
000072a6:	db 0x67 g
000072a7:	db 0x00 
000072a8:	db 0x0d 
000072a9:	db 0x0a 
000072aa:	db 0x2d -
000072ab:	db 0x20 
000072ac:	db 0x45 E
000072ad:	db 0x6e n
000072ae:	db 0x61 a
000072af:	db 0x62 b
000072b0:	db 0x6c l
000072b1:	db 0x65 e
000072b2:	db 0x20 
000072b3:	db 0x4c L
000072b4:	db 0x42 B
000072b5:	db 0x41 A
000072b6:	db 0x20 
000072b7:	db 0x69 i
000072b8:	db 0x6e n
000072b9:	db 0x20 
000072ba:	db 0x42 B
000072bb:	db 0x49 I
000072bc:	db 0x4f O
000072bd:	db 0x53 S
000072be:	db 0x00 
000072bf:	db 0x00 
000072c0:	db 0x0d 
000072c1:	db 0x0a 
000072c2:	db 0x43 C
000072c3:	db 0x6f o
000072c4:	db 0x70 p
000072c5:	db 0x79 y
000072c6:	db 0x69 i
000072c7:	db 0x6e n
000072c8:	db 0x67 g
000072c9:	db 0x20 
000072ca:	db 0x73 s
000072cb:	db 0x79 y
000072cc:	db 0x73 s
000072cd:	db 0x74 t
000072ce:	db 0x65 e
000072cf:	db 0x6d m
000072d0:	db 0x20 
000072d1:	db 0x74 t
000072d2:	db 0x6f o
000072d3:	db 0x20 
000072d4:	db 0x68 h
000072d5:	db 0x69 i
000072d6:	db 0x64 d
000072d7:	db 0x64 d
000072d8:	db 0x65 e
000072d9:	db 0x6e n
000072da:	db 0x20 
000072db:	db 0x76 v
000072dc:	db 0x6f o
000072dd:	db 0x6c l
000072de:	db 0x75 u
000072df:	db 0x6d m
000072e0:	db 0x65 e
000072e1:	db 0x2e .
000072e2:	db 0x20 
000072e3:	db 0x54 T
000072e4:	db 0x6f o
000072e5:	db 0x20 
000072e6:	db 0x61 a
000072e7:	db 0x62 b
000072e8:	db 0x6f o
000072e9:	db 0x72 r
000072ea:	db 0x74 t
000072eb:	db 0x2c ,
000072ec:	db 0x20 
000072ed:	db 0x70 p
000072ee:	db 0x72 r
000072ef:	db 0x65 e
000072f0:	db 0x73 s
000072f1:	db 0x73 s
000072f2:	db 0x20 
000072f3:	db 0x45 E
000072f4:	db 0x73 s
000072f5:	db 0x63 c
000072f6:	db 0x2e .
000072f7:	db 0x0d 
000072f8:	db 0x0a 
000072f9:	db 0x0d 
000072fa:	db 0x0a 
000072fb:	db 0x00 
000072fc:	db 0x0d 
000072fd:	db 0x49 I
000072fe:	db 0x66 f
000072ff:	db 0x20 
00007300:	db 0x61 a
00007301:	db 0x62 b
00007302:	db 0x6f o
00007303:	db 0x72 r
00007304:	db 0x74 t
00007305:	db 0x65 e
00007306:	db 0x64 d
00007307:	db 0x2c ,
00007308:	db 0x20 
00007309:	db 0x63 c
0000730a:	db 0x6f o
0000730b:	db 0x70 p
0000730c:	db 0x79 y
0000730d:	db 0x69 i
0000730e:	db 0x6e n
0000730f:	db 0x67 g
00007310:	db 0x20 
00007311:	db 0x77 w
00007312:	db 0x69 i
00007313:	db 0x6c l
00007314:	db 0x6c l
00007315:	db 0x20 
00007316:	db 0x68 h
00007317:	db 0x61 a
00007318:	db 0x76 v
00007319:	db 0x65 e
0000731a:	db 0x20 
0000731b:	db 0x74 t
0000731c:	db 0x6f o
0000731d:	db 0x20 
0000731e:	db 0x73 s
0000731f:	db 0x74 t
00007320:	db 0x61 a
00007321:	db 0x72 r
00007322:	db 0x74 t
00007323:	db 0x20 
00007324:	db 0x66 f
00007325:	db 0x72 r
00007326:	db 0x6f o
00007327:	db 0x6d m
00007328:	db 0x20 
00007329:	db 0x74 t
0000732a:	db 0x68 h
0000732b:	db 0x65 e
0000732c:	db 0x20 
0000732d:	db 0x62 b
0000732e:	db 0x65 e
0000732f:	db 0x67 g
00007330:	db 0x69 i
00007331:	db 0x6e n
00007332:	db 0x6e n
00007333:	db 0x69 i
00007334:	db 0x6e n
00007335:	db 0x67 g
00007336:	db 0x20 
00007337:	db 0x28 (
00007338:	db 0x69 i
00007339:	db 0x66 f
0000733a:	db 0x20 
0000733b:	db 0x61 a
0000733c:	db 0x74 t
0000733d:	db 0x74 t
0000733e:	db 0x65 e
0000733f:	db 0x6d m
00007340:	db 0x70 p
00007341:	db 0x74 t
00007342:	db 0x65 e
00007343:	db 0x64 d
00007344:	db 0x20 
00007345:	db 0x61 a
00007346:	db 0x67 g
00007347:	db 0x61 a
00007348:	db 0x69 i
00007349:	db 0x6e n
0000734a:	db 0x29 )
0000734b:	db 0x2e .
0000734c:	db 0x0d 
0000734d:	db 0x0a 
0000734e:	db 0x00 
0000734f:	db 0x00 
00007350:	db 0x41 A
00007351:	db 0x62 b
00007352:	db 0x6f o
00007353:	db 0x72 r
00007354:	db 0x74 t
00007355:	db 0x00 
00007356:	db 0x54 T
00007357:	db 0x6f o
00007358:	db 0x20 
00007359:	db 0x66 f
0000735a:	db 0x69 i
0000735b:	db 0x78 x
0000735c:	db 0x20 
0000735d:	db 0x62 b
0000735e:	db 0x61 a
0000735f:	db 0x64 d
00007360:	db 0x20 
00007361:	db 0x73 s
00007362:	db 0x65 e
00007363:	db 0x63 c
00007364:	db 0x74 t
00007365:	db 0x6f o
00007366:	db 0x72 r
00007367:	db 0x73 s
00007368:	db 0x3a :
00007369:	db 0x20 
0000736a:	db 0x31 1
0000736b:	db 0x29 )
0000736c:	db 0x20 
0000736d:	db 0x54 T
0000736e:	db 0x65 e
0000736f:	db 0x72 r
00007370:	db 0x6d m
00007371:	db 0x69 i
00007372:	db 0x6e n
00007373:	db 0x61 a
00007374:	db 0x74 t
00007375:	db 0x65 e
00007376:	db 0x20 
00007377:	db 0x32 2
00007378:	db 0x29 )
00007379:	db 0x20 
0000737a:	db 0x45 E
0000737b:	db 0x6e n
0000737c:	db 0x63 c
0000737d:	db 0x72 r
0000737e:	db 0x79 y
0000737f:	db 0x70 p
00007380:	db 0x74 t
00007381:	db 0x20 
00007382:	db 0x61 a
00007383:	db 0x6e n
00007384:	db 0x64 d
00007385:	db 0x20 
00007386:	db 0x64 d
00007387:	db 0x65 e
00007388:	db 0x63 c
00007389:	db 0x72 r
0000738a:	db 0x79 y
0000738b:	db 0x70 p
0000738c:	db 0x74 t
0000738d:	db 0x20 
0000738e:	db 0x73 s
0000738f:	db 0x79 y
00007390:	db 0x73 s
00007391:	db 0x20 
00007392:	db 0x70 p
00007393:	db 0x61 a
00007394:	db 0x72 r
00007395:	db 0x74 t
00007396:	db 0x69 i
00007397:	db 0x74 t
00007398:	db 0x69 i
00007399:	db 0x6f o
0000739a:	db 0x6e n
0000739b:	db 0x20 
0000739c:	db 0x33 3
0000739d:	db 0x29 )
0000739e:	db 0x20 
0000739f:	db 0x52 R
000073a0:	db 0x65 e
000073a1:	db 0x74 t
000073a2:	db 0x72 r
000073a3:	db 0x79 y
000073a4:	db 0x0d 
000073a5:	db 0x0a 
000073a6:	db 0x00 
000073a7:	db 0x00 
000073a8:	db 0x0d 
000073a9:	db 0x52 R
000073aa:	db 0x65 e
000073ab:	db 0x6d m
000073ac:	db 0x61 a
000073ad:	db 0x69 i
000073ae:	db 0x6e n
000073af:	db 0x69 i
000073b0:	db 0x6e n
000073b1:	db 0x67 g
000073b2:	db 0x3a :
000073b3:	db 0x20 
000073b4:	db 0x00 
000073b5:	db 0x00 
000073b6:	db 0x0d 
000073b7:	db 0x43 C
000073b8:	db 0x6f o
000073b9:	db 0x70 p
000073ba:	db 0x79 y
000073bb:	db 0x69 i
000073bc:	db 0x6e n
000073bd:	db 0x67 g
000073be:	db 0x20 
000073bf:	db 0x63 c
000073c0:	db 0x6f o
000073c1:	db 0x6d m
000073c2:	db 0x70 p
000073c3:	db 0x6c l
000073c4:	db 0x65 e
000073c5:	db 0x74 t
000073c6:	db 0x65 e
000073c7:	db 0x64 d
000073c8:	db 0x2e .
000073c9:	db 0x00 
000073ca:	db 0x4d M
000073cb:	db 0x4d M
000073cc:	db 0x50 P
000073cd:	db 0x3a :
000073ce:	db 0x00 
000073cf:	db 0x00 
000073d0:	db 0x4d M
000073d1:	db 0x65 e
000073d2:	db 0x6d m
000073d3:	db 0x6f o
000073d4:	db 0x72 r
000073d5:	db 0x79 y
000073d6:	db 0x20 
000073d7:	db 0x63 c
000073d8:	db 0x6f o
000073d9:	db 0x72 r
000073da:	db 0x72 r
000073db:	db 0x75 u
000073dc:	db 0x70 p
000073dd:	db 0x74 t
000073de:	db 0x65 e
000073df:	db 0x64 d
000073e0:	db 0x00 
000073e1:	db 0x00 
000073e2:	db 0x41 A
000073e3:	db 0x45 E
000073e4:	db 0x53 S
000073e5:	db 0x00 
000073e6:	db 0x53 S
000073e7:	db 0x65 e
000073e8:	db 0x72 r
000073e9:	db 0x70 p
000073ea:	db 0x65 e
000073eb:	db 0x6e n
000073ec:	db 0x74 t
000073ed:	db 0x00 
000073ee:	db 0x54 T
000073ef:	db 0x77 w
000073f0:	db 0x6f o
000073f1:	db 0x66 f
000073f2:	db 0x69 i
000073f3:	db 0x73 s
000073f4:	db 0x68 h
000073f5:	db 0x00 
000073f6:	db 0x52 R
000073f7:	db 0x49 I
000073f8:	db 0x50 P
000073f9:	db 0x45 E
000073fa:	db 0x4d M
000073fb:	db 0x44 D
000073fc:	db 0x2d -
000073fd:	db 0x31 1
000073fe:	db 0x36 6
000073ff:	db 0x30 0
00007400:	db 0x00 
00007401:	db 0x00 
00007402:	db 0x20 
00007403:	db 0xe8 
00007404:	db 0x00 
00007405:	db 0x00 
00007406:	db 0x50 P
00007407:	db 0x41 A
00007408:	db 0x4d M
00007409:	db 0x53 S
0000740a:	db 0x14 
0000740b:	db 0x00 
0000740c:	db 0x00 
0000740d:	db 0x00 
TOTaL LBLS 551
sub_6168 -> sub_1344
sub_6168 -> sub_9986
sub_6168 -> sub_4740
sub_6168 -> sub_9730
sub_6168 -> sub_1582
sub_6168 -> sub_1178
sub_6168 -> sub_2076
sub_6168 -> sub_944
sub_6168 -> sub_8998
sub_6168 -> sub_936
sub_6168 -> sub_1068
sub_6168 -> sub_11182
sub_6168 -> sub_4144
sub_6168 -> sub_606
sub_6168 -> sub_9664
sub_6168 -> sub_4804
sub_6168 -> sub_8902
sub_6168 -> sub_5196
sub_6168 -> sub_4048
sub_6168 -> sub_1106
sub_6168 -> sub_9176
sub_6168 -> sub_9694
sub_6168 -> sub_2144
sub_6168 -> sub_11046
sub_6168 -> sub_9964
sub_6168 -> sub_9438
sub_2076 -> sub_1802
sub_10274 -> sub_9964
sub_4144 -> sub_1106
sub_4144 -> sub_966
sub_4144 -> sub_606
sub_12350 -> sub_11570
sub_2118 -> sub_2076
sub_12370 -> sub_11586
sub_2144 -> sub_9694
sub_2144 -> sub_2118
sub_4222 -> sub_9730
sub_4222 -> sub_580
sub_4222 -> sub_966
sub_4222 -> sub_936
sub_4222 -> sub_4140
sub_4222 -> sub_558
sub_4222 -> sub_1236
sub_4222 -> sub_1028
sub_4222 -> sub_1114
sub_4222 -> sub_1212
sub_4222 -> sub_606
sub_12456 -> sub_12194
sub_12456 -> sub_11300
sub_12456 -> sub_11046
sub_12456 -> sub_12392
sub_12456 -> sub_11036
sub_12456 -> sub_9730
sub_12456 -> sub_9986
sub_12456 -> sub_48
sub_12456 -> sub_12370
sub_12456 -> sub_10430
sub_12456 -> sub_11064
sub_12456 -> sub_10458
sub_12456 -> sub_10556
sub_12456 -> sub_10426
sub_12456 -> sub_12350
sub_2222 -> sub_2038
sub_10458 -> sub_10408
sub_10458 -> sub_10836
sub_10458 -> sub_10108
sub_10458 -> sub_10390
sub_10458 -> sub_10782
sub_24810 -> sub_23846
sub_18716 -> sub_17536
sub_18716 -> sub_18312
sub_18716 -> sub_17386
sub_18716 -> sub_17940
sub_18716 -> sub_17744
sub_18716 -> sub_18580
sub_18716 -> sub_17204
sub_18716 -> sub_18122
sub_18716 -> sub_18652
sub_18716 -> sub_17034
sub_10556 -> sub_10836
sub_10556 -> sub_10390
sub_10556 -> sub_10782
sub_736 -> sub_636
sub_4422 -> sub_9664
sub_4422 -> sub_606
sub_16772 -> sub_14742
sub_16772 -> sub_15134
sub_16772 -> sub_14678
sub_4492 -> sub_2144
sub_4492 -> sub_9986
sub_4492 -> sub_8998
sub_4492 -> sub_11046
sub_4492 -> sub_12456
sub_4492 -> sub_9622
sub_2456 -> sub_296
sub_2456 -> sub_200
sub_414 -> sub_48
sub_414 -> sub_552
sub_414 -> sub_2658
sub_414 -> sub_606
sub_414 -> sub_974
sub_10670 -> sub_10408
sub_10670 -> sub_10836
sub_10670 -> sub_10782
sub_11064 -> sub_10408
sub_11064 -> sub_10836
sub_11064 -> sub_13634
sub_11064 -> sub_9964
sub_11064 -> sub_10782
sub_502 -> sub_2658
sub_16904 -> sub_14938
sub_16904 -> sub_15716
sub_16904 -> sub_14678
sub_8746 -> sub_1042
sub_8746 -> sub_7722
sub_8746 -> sub_1106
sub_8746 -> sub_606
sub_8746 -> sub_9694
sub_606 -> sub_558
sub_2658 -> sub_2222
sub_12392 -> sub_11586
sub_636 -> sub_296
sub_636 -> sub_558
sub_4740 -> sub_936
sub_4740 -> sub_636
sub_4740 -> sub_1068
sub_4740 -> sub_606
sub_21130 -> sub_20824
sub_21130 -> sub_18516
sub_2722 -> sub_48
sub_2722 -> sub_1344
sub_2722 -> sub_2658
sub_2722 -> sub_2556
sub_2722 -> sub_2144
sub_4804 -> sub_9730
sub_4804 -> sub_4222
sub_4804 -> sub_9258
sub_4804 -> sub_4492
sub_4804 -> sub_1090
sub_4804 -> sub_9042
sub_4804 -> sub_606
sub_4804 -> sub_9176
sub_4804 -> sub_9342
sub_25296 -> sub_23846
sub_8998 -> sub_8902
sub_770 -> sub_558
sub_11046 -> sub_9730
sub_23348 -> sub_23238
sub_834 -> sub_770
sub_9042 -> sub_8902
sub_858 -> sub_834
sub_13154 -> sub_13112
sub_13154 -> sub_48
sub_13154 -> sub_10274
sub_13154 -> sub_10204
sub_10390 -> sub_10344
sub_908 -> sub_558
sub_7054 -> sub_9694
sub_936 -> sub_606
sub_11182 -> sub_10408
sub_11182 -> sub_10836
sub_11182 -> sub_13634
sub_11182 -> sub_9964
sub_11182 -> sub_10782
sub_944 -> sub_936
sub_966 -> sub_558
sub_9176 -> sub_9080
sub_10408 -> sub_10344
sub_1028 -> sub_580
sub_1028 -> sub_558
sub_1042 -> sub_936
sub_1042 -> sub_966
sub_1042 -> sub_606
sub_7190 -> sub_7054
sub_11300 -> sub_10884
sub_11300 -> sub_10408
sub_11300 -> sub_9964
sub_11300 -> sub_10796
sub_11300 -> sub_10670
sub_11300 -> sub_13660
sub_1068 -> sub_966
sub_1068 -> sub_606
sub_5196 -> sub_3272
sub_5196 -> sub_2722
sub_1106 -> sub_1114
sub_1114 -> sub_1154
sub_9342 -> sub_9042
sub_878 -> sub_858
sub_1178 -> sub_1154
sub_1178 -> sub_1114
sub_2248 -> sub_936
sub_2248 -> sub_1068
sub_2248 -> sub_636
sub_2248 -> sub_606
sub_5318 -> sub_2144
sub_5318 -> sub_2658
sub_5318 -> sub_4804
sub_5318 -> sub_4422
sub_5318 -> sub_11046
sub_5318 -> sub_3272
sub_5318 -> sub_8746
sub_5318 -> sub_5196
sub_5318 -> sub_9730
sub_5318 -> sub_1042
sub_5318 -> sub_1106
sub_5318 -> sub_4740
sub_5318 -> sub_1114
sub_5318 -> sub_9986
sub_5318 -> sub_9342
sub_3272 -> sub_2722
sub_1260 -> sub_1114
sub_1260 -> sub_1236
sub_1260 -> sub_558
sub_13634 -> sub_13154
sub_13660 -> sub_13154
sub_9580 -> sub_9476
sub_9580 -> sub_9438
sub_9622 -> sub_9528
sub_9622 -> sub_9438
sub_11674 -> sub_92
sub_11674 -> sub_13746
sub_11674 -> sub_9730
sub_11674 -> sub_14018
sub_11674 -> sub_13686
sub_13746 -> sub_48
sub_13746 -> sub_14132
sub_1522 -> sub_636
sub_1522 -> sub_558
sub_5624 -> sub_2144
sub_5624 -> sub_2722
sub_5624 -> sub_966
sub_5624 -> sub_4422
sub_5624 -> sub_936
sub_5624 -> sub_1260
sub_5624 -> sub_908
sub_5624 -> sub_1042
sub_5624 -> sub_1582
sub_5624 -> sub_4048
sub_5624 -> sub_1106
sub_5624 -> sub_636
sub_5624 -> sub_606
sub_9730 -> sub_92
sub_9746 -> sub_188
sub_9768 -> sub_9476
sub_9768 -> sub_8998
sub_9768 -> sub_9580
sub_9768 -> sub_9080
sub_9768 -> sub_9622
sub_9768 -> sub_9176
sub_7722 -> sub_636
sub_7722 -> sub_9476
sub_7722 -> sub_8902
sub_7722 -> sub_9768
sub_7722 -> sub_1068
sub_7722 -> sub_7212
sub_7722 -> sub_9528
sub_7722 -> sub_9746
sub_7722 -> sub_936
sub_7722 -> sub_7190
sub_7722 -> sub_9176
sub_7722 -> sub_7676
sub_7722 -> sub_9080
sub_1582 -> sub_736
sub_1582 -> sub_9258
sub_1582 -> sub_606
sub_1616 -> sub_1404
sub_13912 -> sub_13746
sub_20064 -> sub_17536
sub_20064 -> sub_18122
sub_20064 -> sub_17034
sub_20064 -> sub_17940
sub_20064 -> sub_17744
sub_20064 -> sub_18312
sub_20064 -> sub_18516
sub_20064 -> sub_17204
sub_20064 -> sub_19668
sub_20064 -> sub_17386
sub_14018 -> sub_13912
sub_14018 -> sub_402
sub_14018 -> sub_92
sub_11994 -> sub_48
sub_11994 -> sub_11674
sub_11994 -> sub_92
sub_11994 -> sub_9730
sub_9964 -> sub_636
sub_9964 -> sub_558
sub_1802 -> sub_1344
sub_1802 -> sub_2248
sub_1802 -> sub_2456
sub_1802 -> sub_1616
sub_1802 -> sub_1404
sub_24408 -> sub_23420
sub_24408 -> sub_23348
sub_24408 -> sub_24260
sub_24408 -> sub_23846
sub_11586 -> sub_402
sub_11586 -> sub_188
sub_1404 -> sub_736
sub_1404 -> sub_966
sub_1404 -> sub_936
sub_1404 -> sub_1522
sub_1404 -> sub_636
sub_1404 -> sub_606
sub_12194 -> sub_48
sub_12194 -> sub_11994
sub_12194 -> sub_9730
sub_2038 -> sub_1802
sub_4048 -> sub_936
sub_4048 -> sub_908
sub_4048 -> sub_944
sub_4048 -> sub_996
sub_4048 -> sub_606
sub_10204 -> sub_9964
sub_4092 -> sub_944
sub_4092 -> sub_606
